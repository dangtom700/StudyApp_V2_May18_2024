Process Control: Modeling, Design,
and Simulation
B. Wayne Bequette
PearsonContents
Preface
About the Author
Chapter 1: Introduction
Chapter 2: Fundamental Models
Chapter 3: Dynamic Behavior
Chapter 4: Dynamic Behavior: Complex Systems
Chapter 5: Empirical and Discrete-Time Models
Chapter 6: Introduction to Feedback Control
Chapter 7: Model-Based Control
Chapter 8: PID Controller Tuning
Chapter 9: Frequency-Response Analysis
Chapter 10: Cascade and Feedforward Control
Chapter 11: PID Enhancements
Chapter 12: Ratio, Selective, and Split-Range Control
Chapter 13: Control-Loop Interaction
Chapter 14: Multivariable Control
Chapter 15: Plantwide Control
Chapter 16: Model Predictive Control
Chapter 17: Summary
Module 1: Introduction to MATLAB
Module 2: Introduction to SIMULINK
Module 3: Ordinary Differential Equations
Module 4: MATLAB LTI Models
Module 5: Isothermal Chemical Reactor
Module 6: First-Order + Time-Delay Processes
Module 7: Biochemical ReactorsModule 8: CSTR
Module 9: Steam Drum Level
Module 10: Surge Vessel Level Control
Module 11: Batch Reactor
Module 12: Biomedical Systems
Module 13: Distillation Control
Module 14: Case Study Problems
Module 15: Plug Flow Reactor
Module 16: Digital ControlTable of Contents
Preface
About the Author
Chapter 1. Introduction
1.1 Introduction
1.2 Instrumentation
1.3 Process Models and Dynamic Behavior
1.4 Redundancy and Operability
1.5 Industrial IoT and Smart Manufacturing
1.6 Control Textbooks
1.7 A Look Ahead
1.8 Summary
References
Chapter 2. Fundamental Models
2.1 Background
2.2 Balance Equations
2.3 Material Balances
2.4 Constitutive Relationships
2.5 Material and Energy Balances
2.6 Form of Dynamic Models
2.7 Linear Models and Deviation Variables
2.8 SummaryChapter 3. Dynamic Behavior
3.1 Background
3.2 Linear State-Space Models
3.3 Laplace Transforms
3.4 Transfer Functions
3.5 First-Order Behavior
3.6 Integrating Behavior Purely Integrating Systems
3.7 Second-Order Behavior
3.8 Summary
References
Chapter 4. Dynamic Behavior: Complex Systems
4.1 Introduction
4.2 Poles and Zeros
4.3 Lead-Lag Behavior
4.4 Processes with Deadtime
4.5 Padé Approximation for Deadtime
4.6 Converting State-Space Models to Transfer Functions
4.7 Converting Transfer Functions to State-Space Models
4.8 Matlab and Simulink
4.9 Summary
Chapter 5. Empirical and Discrete-Time Models
5.1 Introduction
5.2 First-Order + Deadtime
5.3 Integrator + Deadtime
5.4 Other Continuous Models
5.5 Discrete-Time Autoregressive Models5.6 Parameter Estimation
5.7 Discrete Step and Impulse Response Models
5.8 Converting Continuous Models to Discrete
5.9 Digital Filtering
5.10 Summary
References
Chapter 6. Introduction to Feedback Control
Chapter 7. Model-Based Control
7.1 Introduction
7.2 Direct Synthesis
7.3 Internal Model Control
7.4 IMC-Based PID
7.5 IMC-Based PID Design for Processes with a Time Delay
7.6 IMC-Based PID Controller Design for Unstable Processes
7.7 Summary
References
Chapter 8. PID Controller Tuning
8.1 Introduction
8.2 Closed-Loop Oscillation-Based Tuning
8.3 Tuning Rules for First-Order + Deadtime Processes
8.4 Digital Control
8.5 Stability of Digital Control Systems
8.6 Performance of Digital Control Systems
8.7 Summary
ReferencesChapter 9. Frequency-Response Analysis
9.1 Motivation
9.2 Bode and Nyquist Plots
9.3 Effect of Process Parameters on Bode and Nyquist Plots
9.4 Closed-Loop Stability
9.5 Bode and Nyquist Stability
9.6 Robustness
9.7 Matlab Control Toolbox: Bode and Nyquist Functions
9.8 Summary
Chapter 10. Cascade and Feedforward Control
10.1 Background
10.2 Introduction to Cascade Control
10.3 Cascade-Control Analysis
10.4 Cascade-Control Design
10.5 Feedforward Control
10.6 Feedforward Controller Design
10.7 Summary of Feedforward Control
10.8 Combined Feedforward and Cascade
10.9 Summary
Chapter 11. PID Enhancements
Chapter 12. Ratio, Selective, and Split-Range Control
12.1 Motivation
12.2 Ratio Control
12.3 Selective and Override Control
12.4 Split-Range Control12.5 Simulink Functions
12.6 Summary
Chapter 13. Control-Loop Interaction
13.1 Introduction
13.2 Motivation
13.3 The General Pairing Problem
13.4 The Relative Gain Array
13.5 Properties and Application of the RGA Sum of Rows and
Columns
13.6 Return to the Motivating Example
13.7 RGA and Sensitivity
13.8 Using the RGA to Determine Variable Pairings
13.9 Matlab RGA Function File
13.10 Summary
References
Appendix 13.1: Derivation of the Relative Gain for an n-Input–
n-Output System
Chapter 14. Multivariable Control
Chapter 15. Plantwide Control
Chapter 16. Model Predictive Control
Chapter 17. Summary
Module 1. Introduction to MATLAB
Module 2. Introduction to SIMULINK
Module 3. Ordinary Differential Equations
Module 4. MATLAB LTI ModelsModule 5. Isothermal Chemical Reactor
Module 6. First-Order + Time-Delay Processes
Module 7. Biochemical Reactors
Module 8. CSTR
Module 9. Steam Drum Level
Module 10. Surge Vessel Level Control
Module 11. Batch Reactor
Module 12. Biomedical Systems
Module 13. Distillation Control
Module 14. Case Study Problems
Module 15. Plug Flow Reactor
Module 16. Digital ControlPreface
This content is currently in development.About the Author
This content is currently in development.Chapter 1. Introduction
The goal of this chapter is to provide a motivation for and an introduction to
process control and instrumentation. After studying this chapter, the reader,
given a process, should be able to
• Determine possible control objectives, input variables (manipulated and
disturbance) and output variables (measured and unmeasured), and
constraints (hard or soft), as well as classify the process as continuous,
batch, or semicontinuous.
• Assess the importance of process control from safety, environmental, and
economic points of view.
• Sketch a process instrumentation and control diagram.
• Draw a simplified control block diagram.
• Understand the basic ideas of feedback and feedforward control.
• Understand basic sensors (measurement devices) and actuators
(manipulated inputs).
• Begin to develop intuition about characteristic timescales of dynamic
behavior.
• Describe simple control loops associated with physiological systems.
The major sections of this chapter are as follows:
1.1 Introduction
1.2 Instrumentation
1.3 Process Models and Dynamic Behavior
1.4 Redundancy and Operability
1.5 Industrial IoT and Smart Manufacturing
1.6 Control Textbooks and Journals
1.7 A Look Ahead1.8 Summary
1.1 Introduction
Process engineers are often responsible for the operation of chemical
processes. As these processes become larger in scale and/or more complex, the
role of process automation becomes increasingly important. The primary
objective of this textbook is to teach process engineers how to design and tune
controllers for the automated operation of chemical processes.
A conceptual process block diagram for a chemical process is shown in Figure
1–1. Notice that inputs are classified as either manipulated or disturbance, and
the outputs are classified as measured or unmeasured in Figure 1–1a. To
automate the operation of a process, it is important to use measurements of
process outputs or disturbance inputs to make decisions about the proper values
of manipulated inputs. This is the purpose of the controller shown in Figure 1–
1b; the measurement and control signals are shown as dashed lines. These
initial concepts probably seem very vague or abstract at this point. Do not
worry, because we present a number of examples in this chapter to clarify these
ideas.
The development of a control strategy consists of formulating or identifying
the following:
1. Control objective(s)
2. Input variables
3. Output variables
4. Constraints
5. Operating characteristics
6. Safety, environmental, and economic considerations
7. Control structure
We discuss in more detail the steps in formulating a control problem:
1. The first step of developing a control strategy is to formulate the control
objective(s). A chemical-process operating unit often consists of several
unit operations. The control of an operating unit is generally reduced toconsidering the control of each unit operation separately. Even so, each
unit operation may have multiple, sometimes conflicting objectives, so the
development of control objectives is not a trivial problem.
Figure 1–1 Conceptual process input/output block diagram
2. Input variables can be classified as manipulated or disturbance variables.
A manipulated input is one that can be adjusted by the control system (or
process operator). A disturbance input is a variable that affects the process
outputs but that cannot be adjusted by the control system. Inputs may
change continuously or at discrete intervals of time.
3. Output variables can be classified as measured or unmeasured variables.
Measurements may be made continuously or at discrete intervals of time.
4. All processes have certain operating constraints, which are classified as
hard or soft. An example of a hard constraint is a minimum or maximumflow rate—a valve operates between the extremes of fully closed or fully
open. An example of a soft constraint is a product composition—it may be
desirable to specify a composition between certain values to sell a
product, but it is possible to violate this specification without posing a
safety or environmental hazard.
5. Operating characteristics are usually classified as continuous, batch, or
semi-continuous (semibatch). Continuous processes operate for long
periods of time under relatively constant operating conditions before
being shut down for cleaning, catalyst regeneration, and so forth. For
example, some processes in the oil-refining industry operate for 18
months between shutdowns. Batch processes are dynamic in nature—that
is, they generally operate for a short period of time, and the operating
conditions may vary quite a bit during that time. Example batch processes
include beer or wine fermentation, as well as many specialty chemical
processes. For a batch reactor, an initial charge is made to the reactor, and
conditions (temperature, pressure) are varied to produce a desired product
at the end of the batch time. A typical semibatch process may have an
initial charge to the reactor, but feed components may be added to the
reactor during the course of the batch run.
Another important consideration is the dominant timescale of a process.
For continuous processes, this is very often related to the residence time
of the vessel. For example, a vessel with a liquid volume of 100 liters and
a flow rate of 10 liters/minute would have a residence time of 10 minutes;
that is, on the average, an element of fluid is retained in the vessel for 10
minutes.
6. Safety, environmental, and economic considerations are all very
important. In a sense, economics is the ultimate driving force—an unsafe
or environmentally hazardous process will ultimately cost more to operate
because of fines paid, insurance costs, and so forth. In many industries
(petroleum refining, for example), it is important to minimize energy costs
while producing products that meet certain specifications. Better process
automation and control allows processes to operate closer to optimum
conditions and to produce products where variability specifications are
satisfied.
The concept of failsafe is always important in the selection of
instrumentation. For example, a control valve needs an energy source to
move the valve stem and change the flow; most often, this is a pneumaticsignal (usually 3–15 psig). If the signal is lost, then the valve stem will go
to the 3-psig limit. If the valve is air-to-open, then the loss of instrument
air will cause the valve to close; this is known as a fail-closed valve. If, on
the other hand, a valve is air-to-close, when instrument air is lost, the
valve will go to its fully open state; this is known as a fail-open valve.
These concepts are illustrated in Figure 1–2.
7. The two standard control types are feedforward and feedback. A
feedforward controller measures the disturbance variable and sends this
value to a controller, which adjusts the manipulated variable. A feedback
control system measures the output variable, compares that value to the
desired output value, and uses this information to adjust the manipulated
variable. For the first part of this book, we emphasize feedback control of
single-input (manipulated) and single-output (measured) systems.
Determining the feedback control structure for these systems consists of
deciding which manipulated variable will be adjusted to control which
measured variable. The desired value of the measured process output is
called the setpoint.Figure 1–2 Fail-closed and fail-open valves. The fail-closed valve (left)
has instrument air entering below the actuator, whereas the fail-open valve
(right) has instrument air engineering above the actuator. In each case, the
loss of instrument air will cause the valve to move in the direction forced
by the spring attached to the actuator. Source: GlobalSpec, s.v. How can
we change the action of a control valve? Response by tonykuphaldt,
September 2011, http://cr4.globalspec.com/thread/75751/How-Can-We￾Change-the-Action-of-a-Control-Valve.
A particularly important concept used in control system design is process gain.
The process gain is the sensitivity of a process output to a change in the
process input. If an increase in a process input leads to an increase in the
process output, it is known as a positive gain. Conversely, if an increase in theprocess input leads to a decrease in the process output, it is known as a
negative gain. The magnitude of the process gain is also important. For
example, a change in power (input) of 0.5 kW to a laboratory-scale heater may
lead to a fluid temperature (output) change of 10°C; this change is a process
gain (change in output/change in input) of 20°C/kW. The same input power
change of 0.5 kW to a larger-scale heater may yield an output change of only
0.5°C, corresponding to a process gain of 1°C/kW.
Once the control structure is determined, it is important to decide on the control
algorithm. The control algorithm uses measured output variable values (along
with desired output values) to change the manipulated input variable. A control
algorithm has a number of control parameters, which must be tuned (adjusted)
to have acceptable performance. Often, the tuning is done on a simulation
model before implementing the control strategy on the actual process. Also,
many advanced strategies use model-based control, that is, controllers with a
built-in model of the process.
This approach is best illustrated by way of example. Because many important
concepts, such as control instrumentation diagrams and control block diagrams,
are introduced in the next examples, it is important that you study them
thoroughly.
Example 1.1: Surge Tank
Surge tanks are often used as intermediate storage for fluid streams being
transferred between process units. Consider the process flow diagram shown in
Figure 1–3, where a fluid stream from process 1 is fed to the surge tank; the
effluent from the surge tank is sent to process 2.
There are obvious constraints on the height in this tank. If the tank overflows, it
may create safety and environmental hazards, which may also have economic
significance. Let us analyze this system using a step-by-step procedure.
1. Control objective: The control objective is to maintain the height within
certain bounds. If it is too high, it will overflow, and if it is too low,
problems with the flow to process 2 may occur. Usually, a specific desired
height will be selected. This desired height is known as the setpoint.
2. Input variables: The input variables are the flow from process 1 and the
flow to process 2. Notice that an outlet flow rate is considered an input tothis system. The question is, which input is manipulated and which is a
disturbance? That depends. We discuss this problem further in a moment.
3. Output variables: The most important output variable is the liquid level.
We assume that it is measured.
Figure 1–3 Tank level problem
4. Constraints: A number of constraints exist in this problem. There is a
maximum liquid level; if it is exceeded, the tank will overflow. There are
minimum and maximum flow rates through the inlet and outlet valves.
5. Operating characteristics: We assume that this is a continuous process,
that is, that there is a continuous flow in and out of the tank. It would be a
semicontinuous process if, for example, there was an inlet flow with no
outlet flow (if the tank was simply being filled).
6. Safety, environmental, and economic considerations: These aspects
depend somewhat on the fluid characteristics. If it is a hazardous
chemical, then there is a tremendous incentive from safety and
environmental considerations to not allow the tank to overflow. Indeed,
this is also an economic consideration, because injuries to employees or
environmental cleanup costs money. Even if the substance is water, it has
likely been treated by an upstream process unit, so losing water owing to
overflow will incur an economic penalty.
Safety considerations play an important role in the specification of control
valves (fail-open or fail-closed). For this particular problem, the control￾valve specification will depend on which input is manipulated. This is
discussed in detail shortly.
7. Control structure: There are numerous possibilities for control of this
system. We discuss first the feedback strategies, then the feedforward
strategies.Feedback Control
The measured variable for a feedback control strategy is the tank height. Which
input variable is manipulated depends on what is happening in process 1 and
process 2. Let us consider two different scenarios. In scenario 1, process 2
regulates the flow rate F2
, leaving F1
 to be manipulated by a controller. In
scenario 2, process 1 regulates the flow rate F1
, leaving F2
 to be manipulated
by a controller. Here we further discuss scenario 2; scenario 1 is used as a
student exercise (exercise 5).
Scenario 2 Process 1 regulates flow rate F1
. This could happen, for example, if
process 1 is producing a chemical compound that must be processed by process
2. Perhaps process 1 is set to produce F1
 at a certain rate. F1
 is then considered
“wild” (a disturbance) by the tank process. In this case, we would adjust F2
 to
maintain the tank height. Notice that the control valve should be specified as
fail-open or air-to-close so that the tank will not overflow on loss of instrument
air or other valve failure.
The control and instrumentation diagram for a feedback control strategy for
this scenario is shown in Figure 1–4a. Notice that the level transmitter (LT)
sends the measured height of liquid in the tank (hm) to the level controller
(LC). The LC compares the measured level with the desired level (hsp, the
height setpoint) and sends a pressure signal (Pv
) to the valve. This valve op
pressure moves the valve stem up and down, changing the flow rate through
the valve (F2
). If the controller is designed properly, the flow rate changes to
bring the tank height close to the desired setpoint. In this process and
instrumentation diagram, we use dashed lines to indicate signals between
different pieces of instrumentation.Figure 1–4 Instrumentation and control block diagrams for the tank level
feedback control problem. The outlet flow rate (F2
) is manipulated, the
inlet flow rate (F1
) is a disturbance, and the tank height (h) is measured
and controlled.
A simplified block diagram representing this system is shown in Figure 1–4b.
Each signal and device (or process) is shown on the block diagram. We use a
slightly different form for block diagrams when we use transfer function
notation for control system analysis in Chapter 5, “Empirical and Discrete￾Time Models.” Note that each block represents a dynamic element. We expect
that the valve and LT dynamics will be much faster than the process dynamics.
We also see clearly from the block diagram why this is known as a feedback
control “loop.” The controller “decides” on the valve position, which affects
the outlet flow rate (the manipulated input), which affects the level; the inlet
flow rate (the disturbance input) also affects the level. The level is measured,
and that value is fed back to the controller (which compares the measured level
with the desired level [setpoint]).Feedforward Control
The previous feedback control strategy was based on measuring the output
(tank height) and manipulating an input (the outlet flow rate). In this case, the
manipulated variable is changed after a disturbance affects the output. The
advantage of a feedforward control strategy is that a disturbance variable is
measured and a manipulated variable is changed before the output is affected.
Consider the preceding case where the inlet flow rate can be changed by the
upstream process unit and is therefore considered a disturbance variable. If we
can measure the inlet flow rate, we can manipulate the outlet flow rate to
maintain a constant tank height. This feedforward control strategy is shown in
Figure 1–5a, where FM is the flow measurement device and FFC is the
feedforward controller. The corresponding control block diagram is shown in
Figure 1–5b. F1
 is a disturbance input that directly affects the tank height; the
value of F1
 is measured by the FM device, and the information is used by an
FFC to change the manipulated input, F2
.
Figure 1–5 Instrumentation and control block diagrams for the tank level
feedforward control problem. The inlet flow rate is measured and outletflow rate is manipulated.
The main disadvantage to this approach is sensitivity to uncertainty. If the inlet
flow rate is not perfectly measured or if the outlet flow rate cannot be
manipulated perfectly, then the tank height will not be perfectly controlled.
With any small disturbance or uncertainty, the tank will eventually overflow or
run dry. In practice, FFC is combined with feedback control to account for
uncertainty. A feedforward/feedback strategy is shown in Figure 1–6a, and the
corresponding block diagram is shown in Figure 1–6b. Here, the feedforward
portion allows immediate corrective action to be taken before the disturbance
(inlet flow rate) actually affects the output measurement (tank height). The
feedback controller adjusts the outlet flow rate to maintain the desired tank
height, even with errors in the inlet flow-rate measurement.
Figure 1–6 Feedforward/feedback control of tank level. The inlet flow
rate is the measured disturbance, tank height is the measured output, andoutlet flow rate is the manipulated input.
Discussion of Level Controller Tuning and the Dominant
Timescale
Notice that we have not discussed the actual control algorithms; the details of
control algorithms and tuning are delayed until Chapter 5. Conceptually, would
you prefer to tune level controllers for fast or slow responses?
When tanks are used as surge vessels, it is usually desirable to tune the
controllers for a slow return to the setpoint. This is particularly true for
scenario 2, where the inlet flow rate is considered a disturbance variable. The
outlet flow rate is manipulated but affects another process. To avoid upsetting
the downstream process, we would like to change the outlet flow rate slowly
yet fast enough that the tank does not overflow or go dry.
Related to the controller tuning issue is the importance of the dominant
timescale of the process. Consider the case where the maximum tank volume is
200 gallons and the steady-state operating volume is 100 gallons. If the steady￾state flow rate is 100 gallons/minute, the residence time would be 1 minute.
Assume the inlet flow rate is a disturbance and outlet flow rate is manipulated.
If the feed flow rate increased to 150 gallons/minute and the outlet flow rate
did not change, the tank would overflow in 2 minutes. On the other hand, if the
same vessel had a steady-state flow rate of 10 gallons/minute and the inlet flow
suddenly increased to 15 gallons/minute (with no change in the outlet flow), it
would take 20 minutes for the tank to overflow. Clearly, controller tuning and
concern about controller failure are different for these two cases.
The first example was fairly easy compared with most control-system synthesis
problems in industry. Even for this simple example, we found that many issues
must be considered and a number of decisions (specification of a fail-open or
fail-closed valve, etc.) must be made. Often, there are many (and usually
conflicting) objectives, many possible manipulated variables, and numerous
possible measured variables.
It is helpful to think of common, everyday activities in the context of control to
familiarize yourself with the types of control problems that can arise in
practice. Examples include taking a shower (which is analyzed in the
supplemental material) and driving a car. It is suggested that you work throughsuch examples provided in problem 1 in the Student Exercises section of this
chapter.
Examples of control loops abound in nature, and particularly in physiological
systems. The human body regulates many variables through homeostasis;
examples include temperature, blood pressure, and blood glucose—which is
the topic of the next example.
Example 1.2: Glucose Regulation by the Pancreas
The primary energy source for the human body is glucose, so it is important
that the human body be able to regulate the blood glucose concentration. The
basic mechanisms for blood glucose regulation are shown in Figure 1–7. If the
blood glucose is high, due to a recently consumed meal, for example, then the
beta cells of the pancreas are activated to produce insulin. The insulin then
stimulates the uptake of glucose from the blood into the cells for maintenance
and growth and the conversion of glucose into glycogen in the liver, thus
lowering the blood glucose. If the blood glucose is low, the alpha cells of the
pancreas promote the conversion of glycogen back into glucose in the liver,
thus raising the blood glucose.
Here we analyze this glucose regulatory system in the context of a control
problem:
1. Control objective: The control objective is to maintain the desired glucose
level, or setpoint.
2. Input variables: One manipulated input variable is the production of
insulin by the beta cells; another manipulated input is the production of
glucagon by the alpha cells. A number of disturbance inputs affect blood
glucose, including meals (that tend to raise glucose) and exercise; aerobic
exercise decreases glucose, whereas vigorous anaerobic exercise can
briefly increase the glucose level.
3. Output variables: The key output variable is blood glucose concentration.
4. Constraints: There are possibly a number of constraints in this problem.
The insulin and glucagon values cannot go below zero, and there are
maximum rates on their values (as well as their rates of change); these are
likely hard constraints that may be time-dependent. Soft constraints
include lower and upper bounds on the blood glucose concentration, as
discussed further in the safety analysis.Figure 1–7 Blood glucose regulation by the pancreas. Source: Craig
Freudenrich, “How Diabetes Works,”
http://science.howstuffworks.com/life/human-biology/diabetes1.htm.
5. Operating characteristics: This is a continuous process, with discrete
events such as meals and exercise.
6. Safety, environmental, and economic considerations: Too low of a blood
glucose level (known as hypoglycemia) has short-term effects, including
possible dizziness, while high blood glucose for an extended period of
time has long-term health consequences, including retinal diseases.
7. Control structure: In play are numerous control actions because many
hormones have a role in blood glucose regulation. The diagram primarilydescribes feedback control because insulin and glucagon rates are changed
once there is a glucose change; as a side note, this two-input strategy is
similar to split-range control, which is covered in Chapter 12, “Ratio,
Selective, and Split-Range Control.” Not discussed in the diagram are
feedforward strategies—for example, the salivation that occurs when
eating is anticipated may actually prime the beta cells for insulin
production before the blood glucose actually changes.
The glucose regulatory system is disrupted if an individual has diabetes, of
which there are two primary forms: type 1 and type 2. Roughly 5% to 10% of
people with diabetes have type 1, which was formerly known as juvenile
diabetes. In type 1 diabetes, most of the beta cells of the pancreas cease to
produce insulin. Thus, an individual with type 1 diabetes must take insulin
subcutaneously—either with multiple daily injections of insulin or with a
continuous insulin infusion pump. As shown in examples in this textbook, an
automated insulin delivery system (closed-loop artificial pancreas) consists of a
glucose sensor, insulin infusion pump, and control algorithm (usually on a
wearable microprocessor, such as a smartphone) to automatically adjust insulin
delivery rates based on the glucose signal (see Figure 1–8). In an individual
with type 2 diabetes, the pancreas still produces insulin, but either the amount
is insufficient or the individual is insulin resistant (does not respond effectively
to insulin). Usual interventions include oral medications and changes in diet
and exercise, although an increasing number of people with type 2 diabetes use
insulin and check their blood glucose.
This chapter covered the important first step of control system development,
identifying seven basic steps in analyzing a process control problem. We used
simple examples with which you are familiar. As you learn about more
chemical, biological, and environmental processes, you should get in the habit
of thinking about them from a process systems point of view, just as you have
with these simple systems.Figure 1–8 An automated insulin delivery system. The glucose sensor
sends a signal to the smartphone, which calculates the next insulin
delivery rate and sends a signal to the insulin pump, leading to changes in
the blood glucose concentration. In addition, the smart watch provides
feedforward information about exercise to the smart phone.
(Photo: Carlo Prearo/Shutterstock; smart phone monitor: Andrey_Popov/Shutterstock; smart
watch: WakoPako/Shutterstock; wifi icon: iconmonstr/Shutterstock)
1.2 Instrumentation
The example level-control problem had three critical pieces of instrumentation:
a sensor (measurement device), actuator (manipulated input device), and
controller. The sensor measured the tank level, the actuator changed the flow
rate, and the controller determined, on the basis of the sensor signal, how much
to vary the actuator.
There are many common sensors used for chemical processes. These include
temperature, level, pressure, flow, composition, and pH. The most commonmanipulated input is the valve actuator signal (usually pneumatic).
Each device in a control loop must supply or receive a signal from another
device. When these signals are continuous, such as electrical current or voltage,
we use the term analog. If the signals are communicated at discrete intervals of
time, we use the term digital.
Analog
Analog or continuous signals provide the foundation for control theory and
design and analysis. A common measurement device might supply either a 4-
to 20-mA or 0- to 5-V signal as a function of time. Pneumatic analog
controllers (developed primarily in the 1930s, but used in some plants today)
use instrument air, as well as a bellows-and-springs arrangement, to “calculate”
a controller output based on an input from a measurement device (typically
supplied as a 3- to 15-psig pneumatic signal). The controller output of 3 to 15
psig is sent to an actuator, typically a control valve where the pneumatic signal
moves the valve stem. For large valves, the 3- to 15-psig signal might be
amplified to supply enough pressure to move the valve stem.
Electronic analog controllers typically receive a 4- to 20-mA or 0- to 5-V
signal from a measurement device and use an electronic circuit to determine
the controller output, which is usually a 4- to 20-mA or 0- to 5-V signal. Again,
the controller output is often sent to a control valve that may require a 3- to 15-
psig signal for valve stem actuation. In this case, the 4- to 20-mA current signal
is converted to the 3- to 15-psig signal using an I/P (current-to-pneumatic)
converter.
Digital
Most devices and controllers are now based on digital communication
technology. A sensor may send a digital signal to a controller, which then does
a discrete computation and sends a digital output to the actuator. Very often, the
actuator is a valve, so there is usually a D/I (digital-to-electronic analog)
converter involved. If the valve stem is moved by a pneumatic rather than
electronic actuator, then an I/P converter may also be used.
Digital control-system design techniques explicitly account for the discrete
(rather than continuous) nature of the control computations. If small sample
times are used, the tuning and performance of the digital controllers is nearlyequal to that of analog controllers, as shown in Chapter 7, “Model-Based
Control.”
Wireless
The cost to run wiring between sensors, controllers, and actuators can be
substantial. For noncritical applications, particularly for monitoring and
infrequent actions, it can be desirable to use wireless systems. This has been
done in household systems for years, with remote operation of garage doors
and, more recently, lighting systems. A biomedical application that is studied
several times in this text is automated insulin delivery for people with type 1
diabetes. Bluetooth is used to send signals from a glucose sensor to smart￾phone or other control device and to an insulin pump. Similar methods are
likely to be used on select chemical processes in the future.
Techniques Used in This Textbook
Most of the techniques used in this book are based on analog (continuous)
control. Although many of the control computations performed on industrial
processes are digital, the discrete sample time is usually small enough that
virtually identical performance to analog control is obtained. Our
understanding of chemical processes is based on ordinary differential
equations, so it makes sense to continue to think of control in a continuous
fashion. We find that controller tuning is much more intuitive in a continuous,
rather than discrete, framework. In Chapter 17, “Summary,” we spend some
time discussing techniques that are specific to digital control systems, namely
model predictive control (MPC).
1.3 Process Models and Dynamic Behavior
Thus far we have mentioned the term model a number of times, and you
probably have a vague notion of what we mean. The following definition of a
model is from the McGraw-Hill Dictionary of Scientific and Technical Terms:
A mathematical or physical system, obeying certain
specified conditions, whose behavior is used to
understand a physical, biological, or social system to
which it is analogous in some way.In this textbook, model is taken to mean mathematical model. More
specifically, we develop process models. A working definition of process
model is
A set of equations (including the necessary input data
to solve the equations) that allows us to predict the
behavior of a chemical process.
Models play a very important role in control-system design. Models can be
used to simulate expected process behavior with a proposed control system.
Also, models are often embedded in the controller itself; in effect, the
controller can use a process model to anticipate the effect of a control action.
We can see from Example 1.1 that we at least need to know whether an
increase in the flow rate will increase or decrease the tank level. For example,
an increase in the inlet flow rate increases the tank level (positive gain),
whereas an increase in the outlet flow rate decreases the tank level (negative
gain). In order to design a controller, then, we need to know whether an
increase in the manipulated input increases or decreases the process output
variable; that is, we need to know whether the process gain is positive or
negative.
An example of a process model is shown next. A number of other examples are
developed in Chapter 2, “Fundamental Models.”
Example 1.3: Liquid Surge Vessel Model
In the development of a dynamic model, simplifying assumptions are often
made. Also, the model requirements are a function of the end-use of the model.
In this case, we are ultimately interested in designing a controller and in
simulating control-system behavior. Because we have not covered control
algorithms in depth, our objective here is to develop a model that relates the
inputs (manipulated and disturbance) to measured outputs that we wish to
regulate.
For this process, we first assume that the density is constant. The model we
develop should allow us to determine how the volume of liquid in the vessel
varies as a function of the inlet and outlet flow rates. We list the state variables,
parameters, and the input and output variables. We must also specify the
required information to solve this problem (see Figure 1–2). The system is the
liquid in the tank, and the liquid surface is the top boundary of the system. The
following notation is used in the modeling equations:F1
 = inlet volumetric flow rate (volume/time)
F2
 = outlet volumetric flow rate
V = volume of liquid in vessel
h = height of liquid in vessel
ρ = liquid density (mass/volume)
A = cross-sectional area of vessel
Here we write the balance equations based on an instantaneous rate of change,
where the total mass of fluid in the vessel is Vρ, the rate of change is dVρ/dt,
and the density of the outlet stream is equal to the density of the vessel
contents:
Notice the implicit assumption that the density of fluid in the vessel does not
depend on position (the perfect mixing assumption). This assumption allows an
ordinary differential equation (ODE) formulation. We refer to any system that
can be modeled by ODEs as lumped parameter systems. Also notice that the
outlet stream density was assumed to be equal to the density of fluid in the
tank. Assuming that the density of the inlet stream and fluid in the vessel are
equal, this equation is then reduced to1
1
It might be tempting to begin to directly write a “volume balance” expression,
which looks similar to Equation (1.3). We wish to make it clear that there is no
such thing as a volume balance, and Equation (1.3) is only correct because of
the constant density assumption. It is a good idea to always write a mass
balance expression, such as Equation (1.2), before making assumptions about
the fluid density, which may lead to Equation (1.3).In Equation (1.3), we refer to V as a state variable and to F1
 and F2
 as input
variables (even though F2
 is an outlet stream flow rate). If density remained in
the equation, we would refer to it as a parameter.
To solve this problem, we must specify the inputs F1
(t) and F2
(t) and the initial
condition V(0). Direct integration of Equation (1.3) yields
If, for example, the initial volume is 500 liters, the inlet flow rate is 5
liters/second and the outlet flow rate is 4.5 liters/second, we find
V(t) = 500 + 0.5 · t
Example 1.3 provides an introduction to the notion of states, inputs, and
parameters. Consider now the notion of an output. We may consider fluid
volume to be a desired output that we wish to control, for example. In that case,
volume would not only be a state, it would also be considered an output. On
the other hand, we may be concerned about fluid height rather than volume.
Volume and height are related through the constant cross- sectional area, A:
Then we have the following modeling equations:
where V is a state, F1
 and F2
 are inputs, h is an output, and A is a parameter.
We could also rewrite the state variable equation to find
orwhere fluid height is now the state variable. It should also be noted that inputs
can be classified as either manipulated inputs (that we may regulate with a
control valve, for example) or disturbance inputs. If we wanted to measure
fluid height and manipulate the flow rate of stream 1, for example, then F1
would be a manipulated input, while F2
 would be a disturbance input.
We have found that a single process can have different modeling equations and
variables, depending on assumptions and the objectives used when developing
the model.
The liquid level process is an example of an integrating process. If the process
is initially at steady state, the inlet and outlet flow rates are equal (see Equation
1.3 or 1.7). If the inlet flow rate is suddenly increased while the outlet flow rate
remains constant, the liquid level (volume) will increase until the vessel
overflows. Similarly, if the outlet flow rate is increased while the inlet flow rate
remains constant, the tank level will decrease until the vessel is empty.
In this book, we first develop process models based on fundamental or first￾principles analysis, that is, models that are based on known physical-chemical
relationships, such as material and energy balances, as well as reaction kinetics,
transport phenomena, and thermodynamic relationships. We then develop
empirical models. An empirical model is usually developed on the basis of
applying input changes to a process and observing the response of measured
outputs. Model parameters are adjusted so that the model outputs match the
observed process outputs. This technique is particularly useful for developing
models that can be used for controller design.
1.4 Redundancy and Operability
While the focus of this book is on modeling and control system design, it
should be understood that processes need to be designed to ensure safe
operation even when components fail. For processes that operate continuously
for long periods of time, it is important to have redundant pumps placed in
parallel. Then, if one pump fails, the other can be immediately switched on. On
the other hand, due to high capital costs, it is less common to have redundant
compressors except in the case of instrument air systems. Usually, when a
process compressor fails, the process must be shut down while the compressor
is being repaired or replaced.In Example 1.1 and in most of the examples given in this textbook, we use a
simplified representation for the main components in a control loop. A classic
piping and instrumentation diagram (P&ID) would also include pipe sizes and
additional equipment for redundancy and safety. Figure 1–9 is a characteristic
process and instrumentation diagram (P&ID without piping specifications) that
shows redundant pumps, check valves to assure flow through pumps occurs in
one direction, a pressure relief valve, and a bypass line around the control
valve. When the control valve fails, the adjacent block valves can be closed;
the control valve can then be removed and replaced. During the interim, the
bypass valve can be adjusted manually to maintain the desired flow rate.
Generally, these control valve “stations” are placed at ground level for easy
access, even if the pipeline is in a pipe rack far above the ground. Pictures of
redundant pumps and control valve with bypass are shown in Figure 1–10.
1.5 Industrial IoT and Smart Manufacturing
The terms Industry 4.0 and smart manufacturing are frequently used to
describe efforts in the manufacturing industries to make better use of data and
mathematical models to make manufacturing operations more efficient. As the
Internet has had a tremendous impact on our ability to access data and
communicate for personal applications, industry is benefiting from a similar
industrial internet of things (IIoT).
Manufacturers can now keep better track of the status of raw materials being
delivered to their facilities as well as products being shipped to warehouses or
directly to consumers. Industry 4.0 and smart manufacturing techniques seek to
make it easier to use data to improve manufacturing performance. For example,
a chemical process engineer might wish to download data from a plant
historian (database of plant data), use the data to develop a model, and perform
an optimization to determine better operating conditions. In the past, this
process required a significant effort because each part of the system used
different data formats, and the software packages did not “talk” to each other.
A goal of smart manufacturing is to have a transparent framework to better
integrate each of these components.Figure 1–9 Process and instrumentation diagram for surge drum level
control. There is a pressure relief valve on the drum, redundant pumps,
check valves on the discharge of each pump, bypass around the control
valve, and high (LAH) and low level (LAL) alarms as part of the
controller interface (LIC, level indicating controller).Figure 1–10 Redundant pumps and control valve bypass
1.6 Control Textbooks
There are a large number of undergraduate control textbooks that focus on
control-system design and theory. The following books include an introduction
to process modeling and dynamics, in addition to control-system design.
Chau, P.C. (2002). Process Control: A First Course with MATLAB. New York:
Cambridge University Press.
Coughanowr, D.R., and S.E. LeBlanc. (2009). Process Systems Analysis and
Control, 3rd ed. New York: McGraw-Hill.
Luyben, M.L., and W.L. Luyben. (1997). Essentials of Process Control. New
York: McGraw-Hill.
Luyben, W.L. (1990). Process Modeling Simulation and Control for Chemical
Engineers, 2nd ed. New York: McGraw-Hill.
Marlin, T.E. (2000). Process Control: Designing Processes and Control
Systems for Dynamic Performance, 2nd ed. New York: McGraw-Hill.
Available at http://www.pc-education.mcmaster.ca/Book_Links.htm.
Ogunnaike, B.A., and W.H. Ray. (1994). Process Dynamics, Modeling and
Control. New York: Oxford University Press.
Riggs, J.B., and M.N. Karim. (2016). Chemical and Bio-Process Control, 4th
ed. Lubbock, TX: Ferret Publishing.
Seames, W.S. (2017). Designing Controls for the Process Industries. Boca
Raton, FL: CRC Press.
Seborg, D.E., T.F. Edgar, D.A. Mellichamp, and F.J. Doyle III. (2016). Process
Dynamics and Control, 4th ed., New York: Wiley.
Smith, C.A., and A.B. Corripio. (2005). Principles and Practice of Automatic
Process Control, 3rd ed. New York: Wiley.
Stephanopoulos, G. (1984). Chemical Process Control. Englewood Cliffs, NJ:
Prentice Hall.
Svrcek, W.Y., D.P. Mahoney, and B.R. Young. (2014). A Real-Time Approach
to Process Control, 3rd ed. Chichester, UK: Wiley.
The following books are generally more applied, with specific control
applications detailed.Levine, W.S. (ed.). (2010). The Control Handbook, 3rd ed., Boca Raton, FL:
CRC Press.
Liptak, B.G., and K. Venczel (eds.).(2005). Instrument Engineers Handbook,
Vol. 2: Process Control Volume, 4th ed. Boca Raton, FL: CRC Press.
Luyben, W.L. (2006). Chemical Reactor Design and Control. New York:
Wiley.
Luyben, W.L. (2013). Distillation Design and Control Using Aspen Simulation,
2nd ed. New York: Wiley.
Luyben, W.L., B.D. Tyreus, and M.L. Luyben. (1999). Plantwide Process
Control. New York: McGraw-Hill.
Schork, F.J., P.B. Deshpande, and K.W. Leffew. (1993). Control of
Polymerization Reactors. New York: Marcel Dekker.
Shinskey, F.G. (1977). Distillation Control. New York: McGraw-Hill.
Shinskey, F.G. (1996). Process Control Systems: Application, Design and
Tuning, 4th ed. New York: McGraw-Hill.
Shunta, J.P. (1995). Achieving World Class Manufacturing Through Process
Control. Upper Saddle River, NJ: Prentice Hall.
1.7 A Look Ahead
Chapter 2 develops fundamental models based on material and energy
balances, while Chapters 3 and 4 cover dynamic analysis. Chapter 5 shows
how to develop empirical models from plant tests. Chapter 6 is an introduction
to feedback control and provides the first look at quantitative control-system
design procedures.
The best way to understand process control is to work many problems. In
particular, it is important to use simulation for complex problems. A numerical
package that is particularly useful for control-system analysis and simulation is
MATLAB; the SIMULINK block-diagram simulator is particularly useful. If you
are not familiar with MATLAB/SIMULINK, we recommend that you work through
the MATLAB and SIMULINK tutorials (Modules 1 and 2). Simply reading the
tutorials will not give you much insight into the use of MATLAB; you must sit at
a computer, work through the examples, and try new ideas that you have.
1.8 SummaryYou should now be able to formulate a control problem in terms of the
following:
• Control objective
• Inputs (manipulated or disturbance)
• Outputs (measured
• or unmeasured)
• Constraints (hard or soft)
• Operating characteristics (continuous, batch, semibatch)
• Safety, environmental, and economic issues
• Control structure (feedback, feedforward)
You should also be able to sketch control and instrumentation diagrams and
control block diagrams. In addition, you should be able to recommend whether
a control valve should be fail-open or fail-closed.
The following terms were introduced in this chapter:
• Actuator
• Air-to-close
• Air-to-open
• Algorithm
• Control block diagram
• Control valve
• Controller
• Digital
• Fail-closed
• Fail-open
• Gain
• Integrating process
• Model
• Process gain• Process and instrumentation diagram
• Sensor
• Setpoint
The abstract notions of states, inputs, outputs, and parameters were introduced
and are covered in more detail in Chapter 2. The examples used were as
follows:
1.1 Liquid Surge Tank
1.2 Glucose Regulation by the Pancreas
1.3 Liquid Surge Vessel Model
References
The history of process control, including educational methods, is provided by
the following article:
Bequette, B.W. (2019). “Process Control Education and Practice: Past, Present
and Future.” Comp. Chem. Eng., 128, 538–556.
https://doi.org/10.1016/j.compchemeng.2019.06.011 An overview of
modeling and control application in diabetes, as well as a discussion of
how a healthy pancreas regulates blood glucose, is provided in the
following chapter:
Bequette, B.W. (2014). “Control in Physiology and Medicine.” In E. Carson
and C. Cobelli (eds.), Modelling Methodology for Physiology and
Medicine (2nd ed., chap. 2, pp. 13–44). San Diego, CA: Elsevier.
For a discussion of the role of the human-in-the-loop in smart
manufacturing, see the following article:
Bequette, B.W. (2019). “Commentary: The Smart Human in Smart
Manufacturing.” Ind. Eng. Chem. Res., 58(42): 19317–19321.
https://doi.org/10.1021/acs.iecr.9b03544
Student Exercises
1. Discuss the following problems (a–h) in the context of control:
i. Identify control objectives;ii. Identify input variables and classify as (a) manipulated or (b)
disturbance;
iii. Identify output variables and classify these as (a) measured or (b)
unmeasured;
iv. Identify constraints and classify as (a) hard or (b) soft;
v. Identify operating characteristics and classify as (a) continuous, (b)
batch, (c) semicontinuous (or semibatch);
vi. Discuss safety, environmental, and economic considerations;
vii. Discuss the types of control (feed forward or feedback).
Measurements and manipulated variables can vary continuously or may
be sampled discretely.Select from the following:
a. Driving a car
b. Choose one of your favorite activities (skiing, basketball, making a
cappuccino, etc.)
c. A stirred tank heater
d. Beer fermentation
e. An activated sludge process
f. A household thermostat
g. Air traffic control
h. Taking a shower, assuming separate hot and cold water valves (this
problem is also discussed in the supplemental material).
2. Literature Review. The process control research literature can be
challenging to read, with unique notations and rigorous mathematical
analyses. Find a paper from one of the magazines or journals listed in
Section 1.5 that you would like to understand by the time you have
completed this textbook. You will find many articles to choose from, so
use some of the following criteria for your selection:
• The process is interesting to you (do not choose mainly a theory paper)
• The modeling equations and parameters are in the paper (make certain
the equations are ordinary differential equations and not partial
differential equations)
• There are plots that you can verify (eventually) through simulation (the
plots should be based on simulation results)
• The control algorithm is clearly written• The objectives of the paper are reasonably clear to you
Provide the following:
i. A short (one paragraph) summary of the overall objectives of the
paper; why are you interested in the paper?
ii. A short list of words and concepts in the paper that are familiar to
you.
Suggested Topics (choose one):
a. Fluid catalytic cracking unit (FCCU)—petroleum refining
b. Reactive ion etching—semiconductor manufacturing
c. Rotary lime kiln—pulp and paper manufacturing
d. Continuous drug infusion—biomedical engineering and anesthesia
e. Anaerobic digester—waste treatment
f. Distillation—petrochemical and many other industries
g. Polymerization reactor—plastics
h. pH—waste treatment
i. Beer production—food and beverage
j. Paper machine headbox—pulp and paper manufacturing
k. Batch chemical reactor—pharmaceutical production
j. Automated insulin delivery (closed-loop artificial pancreas) for
individuals with type 1 diabetes. See Figure 1-8 and Module 12.
3. Instrumentation Search. Select one of the following measurement devices
and use Internet resources to learn more about it. Determine what types of
signals are input to or output from the device. For flow meters, what range
of flow rates can be handled by a particular flow meter model?
a. Vortex-shedding flow meters
b. Orifice-plate flow meters
c. Mass flow meters
d. Thermocouple-based temperature measurements
e. Differential pressure (delta P) measurements
f. Control valvesg. pH
h. Continuous glucose monitors (CGM) to measure blood glucose level
4. Work through the Module 1: Introduction to MATLAB.
5. Consider Example 1.1, the liquid surge vessel, which assumed that the
outlet stream flowrate was manipulated. Now, perform a complete
analysis assuming that the inlet stream flowrate is manipulated.
a. Draw the instrumentation diagram for this problem.
b. Should the control valve on the inlet stream be fail-open or fail-closed?
Why?
c. Draw the feedback block diagram for this problem.
d. Develop the instrumentation diagram for combined feedforward and
feedback control for this problem.
6. A process furnace heats a process stream from near ambient temperature
to a desired temperature of 300°C. The process stream outlet temperature
is regulated by manipulating the flow rate of fuel gas to the furnace, as
shown in this figure:a. Discuss the objectives of this control strategy.
b. What is the measured output?
c. What is the manipulated input?
d. What are possible disturbances?
e. Is this a continuous or batch process?
f. Is this a feed-forward or feedback controller?
g. Should the control valve fail-open or fail-closed? For the strategy you
chose, is the valve gain positive or negative? Why?
h. Discuss safety, environmental, and economic issues.
i. Draw the control block schematic diagram and label all signals and
blocks on the diagram.
7. A fluid catalytic cracking unit (FCCU) produces a significant portion of
the gasoline produced by a typical petroleum refinery. A typical FCCU
processes 30,000 Bbl/day (1 Bbl = 42 gallons) of heavy gas oil from a
crude oil distillation unit, producing roughly 15,000 Bbl/day of gasoline,
along with streams of other components. The value of gasoline alone
produced by this unit is on the order of $500,000/day, so any improvement
in yield and energy consumption owing to improved control can have a
significant economic impact.
Question : A control system revamp for a 30,000 Bbl/day FCCU is
estimated to cost $2 million. It is expected that the implementation of
advanced control schemes will result in an economic increase of 2% in the
value of products produced. Based on the value of gasoline alone, how
many days will it take to pay back the control system investment?
8. Furnaces are often used to heat process streams to temperatures above
400°F. A typical fired furnace may have a heat duty of 100 × 106
Btu/hour, requiring roughly 1667 scfm (standard cubic feet per minute) of
natural gas (methane has a fuel value of approximately 1000 Btu/scf). The
cost of this fuel gas is on the order of $5/1000 scf, yielding an annual fuel
cost of $4.4 million/year. Excess combustion air is needed to assure
complete combustion; however, too much excess air wastes energy (the
heated air simply goes out the exhaust stack). Too little excess air leads to
incomplete combustion, wasting energy and polluting the atmosphere with
unburned hydrocarbons. It is important, then, to deliver an optimumamount of combustion air to the furnace. With the large flow rates and
high temperatures involved, maintaining safe operation is also very
important. The control system must be designed so that excess
combustion air is maintained, no matter what is happening to the fuel gas
flow rate. A fired furnace control system clearly needs to satisfy safety,
environmental, and economic criteria.
Question : An advanced control scheme is estimated to save 2% in energy
costs, for a fired furnace with a heat duty of 100 × 106
 Btu/hour. If it is
desired to have a 2-year payback period on this control system investment,
what is the maximum investment allowable?
9. Consider the surge vessel process in Example 1.3. If the steady-state
volume is 500 liters, and the steady-state inlet and outlet flow rates are 50
liters/minute, find how the liquid volume varies with time if the inlet flow
rate is Fi
(t) = 50 + 10 sin(0.1t), while the outlet flow rate remains constant
at 50 liters/minute.
10. The human body is composed of many innate feedback and feed-forward
control loops. For example, insulin is a hormone produced by the pancreas
to regulate the blood glucose concentration. The pancreas in an individual
with type 1 (insulin dependent) diabetes has lost the ability to produce
significant insulin. This person must monitor her/his blood glucose (blood
glucose strips have been on the market for years) and provide insulin
injections several times per day. It is particularly important to use
knowledge of the meal carbohydrates to determine the amount of insulin
necessary to compensate for the carbohydrates. There are short- and long￾term risks associated with the over- and under-dosing of insulin. If too
much insulin is injected, there is a short-term risk of hypoglycemia (low
blood sugar), which can lead to dizziness, a coma and even death if
hypoglycemia occurs for an extended period of time. On the otherhand,
under-dosing insulin can lead to hyperglycemia (high blood sugar); higher
average blood glucose levels are known to result in greater risk of retina
and other diseases.
a. Discuss the actions taken by an individual with type 1 diabetes in terms
of the formulation of a control problem. State the objectives and list all
variables, etc.
b. It is desirable to form an automated closed-loop system, sometimes
called a closed-loop artificial pancreas, using a continuous bloodglucose measurement and a continuous insulin infusion pump. Draw a
“process and instrumentation” diagram (similar to Figure 1-8) and the
corresponding control block diagram. Discuss whether a continuous
insulin infusion pump should fail-closed or fail-open.
11. Consider the following three heat exchanger control instrumentation
diagrams. For each diagram (a, b, and c), the objective is to maintain a
desired cold stream outlet temperature. Since the cold stream exiting the
exchanger is fed to a reactor, it is important that the stream temperature
never be substantially higher than the setpoint value. Please answer the
two basic questions about each strategy, then the final question (part d).
a. Basic cold stream temperature control strategy.
Is the process gain relating the manipulated flow rate to the measured
temperature positive or negative?Should the control valve be fail-open
or fail-closed? Why?
b. Temperature control using hot stream bypass strategy.Is the process gain relating the manipulated flow rate to the measured
temperature positive or negative?Should the control valve should be
fail-open or fail-closed? Why?
c. Temperature control using cold stream bypass strategy.
Is the process gain relating the manipulated flow rate to the measured
temperature positive or negative?Should the control valve be fail-open
or fail-closed? Why?
d. Which strategy (a, b, or c) will have the fastest dynamic behavior?
Why?
12. During surgery it is important for an anesthesiologist to regulate a
patient’s blood pressure to a desired value. She does this by changing the
infusion rate of vasoactive drugs to the patient. In addition to the effect of
manipulated vaso-active drugs, blood pressure is affected by the level of
anesthetic given to the patient. Discuss actions taken by ananesthesiologist in the context of feedback control. Sketch a control block
diagram for an automated system that measures blood pressure and
manipulates the infusion rate of a vasoactive drug.
13. An aeration basin (a very large “vessel”) is used to continually treat a
wastewater stream aerobically. A number of mechanical agitators at the
surface can be used to “pump” air into the basin; these can be
independently turned on or off to change the level of dissolved oxygen in
the basin. The microbes that “eat” the waste function best in a small pH
range. Acid and base stream flowrates into the basin can be manipulated.
An analytical device that can measure the concentration of waste material
in terms of BOD (biochemical oxygen demand) is placed in the outlet
stream of the basin. The liquid level in the basin is relatively constant,
since the effluent flows over a weir. The outlet flowrate can be estimated
by the height of liquid over the weir. Provide a sketch of this process and
discuss it in the context of a control problem, identifying objectives,
disturbances, etc.
14. A gas surge drum, shown below, is used to buffer the effect of gas flow
between two operating used. It is important that the gas drum pressure be
controlled not to exceed low and high pressure limits. Consider two
possible scenarios: (a) the inlet flowrate (qi) is manipulated, and (b) the
outlet flowrate (q) is manipulated. In each case, sketch the process and
instrumentation diagram with a pressure sensor, controller and control
valve. Discuss whether the control valve should be fail-open or fail￾closed.
15. Often chemical reactors must be heated or cooled, depending upon
whether the reaction is endothermic or exothermic. Consider the
temperature control strategy shown below, under two different scenarios:
(a) an endothermic reaction, and (b) and exothermic reactor. For each
case, discuss whether the jacket fluid is a hot or a cold stream. Also
discuss whether the control valve should be designed to fail-open or fail￾closed.Chapter 2. Fundamental Models
A methodology for developing dynamic models of chemical processes is
presented. After studying this chapter, the reader should be able to
• Write balance equations using the integral or instantaneous methods.
• Incorporate appropriate constitutive relationships into the equations.
• Determine the state, input, and output variables and the parameters for a
particular model (set of equations).
• Determine the necessary information to solve a system of dynamic
equations.
• Linearize a set of nonlinear equations to find the linear state space model.
The major sections of this chapter are as follows:
2.1 Background
2.2 Balance Equations
2.3 Material Balances
2.4 Constitutive Relationships
2.5 Material and Energy Balances
2.6 Form of Dynamic Models
2.7 Linear Models and Deviation Variables
2.8 Summary
2.1 Background
Reasons for Modeling
There are many reasons for developing process models. Improving or
understanding chemical process operation is a major overall objective for
developing a dynamic process model. These models are often used for (i)operator training, (ii) process design, (iii) safety system analysis, (iv) process
control, or (v) process optimization.
Operator training: The people responsible for the operation of a chemical
manufacturing process are known as process operators. A dynamic process
model can be used to perform simulations to train process operators, in the
same fashion that flight simulators are used to train airplane pilots. Process
operators can learn the proper response to upset conditions before having to
experience them on the actual process.
Process design: A dynamic process model can be used to properly design
chemical-process equipment for a desired production rate. For example, a
model of a batch chemical reactor can be used to determine the appropriate size
of the reactor to produce a certain product at a desired rate.
Safety: Dynamic process models can also be used to design safety systems. For
example, they can be used to determine how long it will take, after a valve
fails, for a system to reach a certain pressure.
Process control: Feedback control systems are used to maintain process
variables at desirable values. For example, a control system may measure a
product temperature (an output) and adjust the steam flow rate (an input) to
maintain that desired temperature. For complex systems, particularly those
with many inputs and outputs, it is necessary to base the control-system design
on a process model. Also, before a complex control system is implemented on
a process, it is normally tested by simulation.
Process optimization: Optimization techniques can be used to find the best
operating conditions, which often includes calculating the setpoint values to be
used by a process control system. Sometimes steady-state models are
sufficient, but, particularly for batch and semibatch processes, dynamic models
are used.
It should be noted that no single model of a process exists because a model
only approximates the process behavior. The desired accuracy and resulting
complexity of a process model depends on the final use of the model. Usually,
more complex models require much more data and effort to develop than
simplified models because more model parameters must be determined. The
focus of this book is on process control, so model development is provided
with this in mind.2.2 Balance Equations
In this text, we are interested in balances that have the form
This equation is deceptively simple because there may be many in and out
terms, particularly for component balances. The in and out terms would then
include the generation and conversion of species by chemical reaction,
respectively. The rate of mass accumulation in a system has the form dM/dt,
where M is the total mass in the system. Similarly, the rate of energy
accumulation has the form dE/dt, where E is the total energy in a system. If Ni
is used to represent the moles of component i in a system, then dNi
/dt
represents the molar rate of accumulation of component i in the system.
When solving a problem, it is important to specify what is meant by system. In
some cases, the system may be microscopic in nature (a differential element,
for example), while in other cases it may be macroscopic in nature (the liquid
content of a mixing tank, for example). Also, when developing a dynamic
model, we can take one of two general viewpoints. One viewpoint is based on
an integral balance, while the other is based on an instantaneous balance.
Integral balances are particularly useful when developing models for
distributed parameter systems, which result in partial differential equations; the
focus in this text is on ordinary differential equation–based models. Another
viewpoint is the instantaneous balance where the time rate of change is written
directly.
Integral Balances
An integral balance is developed by viewing a system at two different
“snapshots” in time. Consider a finite time interval, Δt, and perform a material
balance over that time interval,The mean-value theorems of integral and differential calculus are then used to
reduce the equations to differential equations. For example, consider the
system shown in Figure 2–1, where one boundary represents the mass in the
system at time t, while the other boundary represents the mass in the system at t
+ Δt.
An integral balance on the total mass in the system is written in the form
Figure 2–1 Conceptual material balance problem
Mathematically, this is written as
where M represents the total mass in the system, while and represent
the mass rates entering and leaving the system, respectively. We can write the
right-hand side of Equation (2.1), using the mean-value theorem of integral
calculus, aswhere 0 < α < 1. Substituting the right-hand side of Equation (2.2) into
Equation (2.1), we find
By dividing Equation (2.3) by Δt, and using the mean value theorem of
differential calculus (0 < β < 1) for the left-hand side,
and by substituting Equation (2.5) into Equation (2.4),
and taking the limit as Δt goes to zero, we find
Representing the total mass as as and as Foutρ, where
V is the volume, ρ is the mass density (mass/volume), and F is a volumetric
flow rate (volume/time), we obtain the equation
Note that we have assumed that the system is perfectly mixed, so that the
density of material leaving the system is equal to the density of material in the
system (ρout = ρ).
Instantaneous Balances
Here, we write the dynamic balance equations directly, based on an
instantaneous rate-of-change:which can also be written as
This is the same result obtained using an integral balance. Although the
integral balance takes longer to arrive at the same result as the instantaneous
balance method, the integral balance method is probably clearer when
developing distributed parameter (partial differential equation–based) models.
Steady State
At steady state, the derivative with respect to time is zero, by definition, so
from Equation (2.7),
or from Equation (2.8),
Steady-state relationships are often used for process design and determination
of optimal operating conditions (process optimization).
2.3 Material Balances
The simplest modeling problems consist of material balances. In this section,
we use two process examples to illustrate the modeling techniques used. Recall
that a model for a liquid surge vessel was developed in Chapter 1,
“Introduction,” Example 1.3.
Example 2.1: Gas Surge DrumSurge drums are often used as intermediate storage capacity for gas streams
that are transferred between chemical process units. Consider a drum depicted
below (Figure 2–2), where qi
 is the inlet molar flow rate and q is the outlet
molar flow rate. A typical control problem would be to manipulate one flow
rate (either in or out) to maintain a desired drum pressure. Here, we develop a
model that describes how the drum pressure varies with the inlet and outlet
flow rates.
Let V = volume of the drum and n = the total amount of gas (moles) contained
in the drum.
Assumption: The pressure-volume relationship is characterized by the ideal gas
law, PV = nRT, where P is pressure, T is temperature (absolute scale), and R is
the ideal gas constant.
The rate of accumulation of the mass of gas in the drum is described by the
material balance
where MW represents the molecular weight. Assuming that the molecular
weight is constant, we can write
From the ideal gas law, since V, R, and T are assumed constant,
so
Figure 2–2 Gas surge drumwhich can be rewritten
To solve this equation for the state variable P, we must know the inputs qi
 and
q, the parameters R, T, and V, and the initial condition P(0). Once again,
although q is the molar rate out of the drum, we consider it to be an input in
terms of solving the model.
It should be noted that just like the liquid level process discussed in Example
1.3, this is an integrating system. For example, if the inlet molar flow rate
increases while the outlet flow rate stays constant, then the pressure increases
without bound. In reality, an increase in pressure would most likely cause an
increase in outlet molar flow rate (due to the increased driving force for flow
out of the drum). Indeed, we model that case now.
Outlet Flow as a Function of Gas Drum Pressure
Consider the case where the outlet molar flow rate is proportional to the
difference in gas drum pressure and the pressure in the downstream header
piping, Ph
. Let β represent a flow coefficient. If the flow/pressure difference
relationship is linear, then
So the dynamic modeling equation is
At steady state, dP/dt = 0, so we find the steady-state relationship
where we use the subscript s to indicate a steady-state solution. Solving
explicitly for Ps
, we findwhich is a linear relationship. An increase in qis will lead to an increased value
of Ps
. This type of system is known as self-regulating, since a change in an
input variable eventually leads to a new steady-state value of the output
variable. Contrast self-regulating systems with integrating systems that do not
achieve a new steady state (the output “integrates” until a vessel overflows or a
tank overpressures).
The modeling equations for Examples 1.3 and 2.1 were based on writing an
overall material balance. In the case of a liquid vessel, we found that either
liquid volume or height could serve as an appropriate state variable. For the gas
drum, we found that pressure was the most appropriate state variable.
Liquid level and gas pressure vessels represent inventory problems, which are
integrating by nature. If there is an imbalance in the inlet and outlet flow rates,
the inventory material (liquid or gas) can easily increase or decrease beyond
desirable limits. It is the independence of the flow rates that can cause this
problem. Notice, however, that a feedback controller can be designed to
regulate the inventory levels (liquid volume or gas pressure). A feedback
controller manipulates a stream flow rate to maintain a desired inventory level.
There are many control loops that a process engineer must consider at the
design stage of a process. Because of the critical nature of inventory loops,
these must receive the highest level of consideration. In Chapter 15, “Plantwide
Control,” we find that inventory loops must be closed before other loops are
considered.
The next example illustrates the use of modeling for reactor design.
Example 2.2: An Isothermal Chemical Reactor
Ethylene oxide (A) is reacted with water (B) in a continuously stirred-tank
reactor (CSTR) to form ethylene glycol (P). Assume that the CSTR is
maintained at a constant temperature and that the water is in large excess. The
stoichiometric equation is
A + B → P
Here, we develop a model (Figure 2–3) to find the concentration of each
species as a function of time. An example control problem would be to
manipulate the inlet flow rate to produce a desired concentration of the product
ethylene glycol.Overall Material Balance
The overall mass balance (because the tank is perfectly mixed) is
Figure 2–3 Isothermal stirred tank reactor
Assumption: The liquid-phase density, ρ, is not a function of concentration. The
vessel liquid (and outlet) density is then equal to the inlet stream density, so
ρi
 = ρ
and we can write Equation (2.18) as (notice this is the same result as Example
1.3)
Component Material Balances
It is convenient to work in molar units when writing component balances,
particularly if chemical reactions are involved. Let CA
 and CP
 represent the
molar concentrations of A and P (moles/volume). The component material
balance equations arewhere rA
 and rP
 represent the rate of generation of species A and P per unit
volume, and CAi represents the inlet concentration of species A. Because the
water is in large excess, its concentration does not change significantly, and the
reaction rate is first order with respect to the concentration of ethylene oxide,
where k is the reaction rate constant and the minus sign indicates that A is
consumed in the reaction. Each mole of A reacts with a mole of B (from the
stoichiometric equation) and produces one mole of P, so the rate of generation
of P (per unit volume) is
Expanding the left-hand side of Equation (2.20a),
Combining Equations (2.19), (2.20a), and (2.23), we find
Similarly, the concentration P can be written as
This model consists of three differential equations (2.19, 2.24, 2.25) and,
therefore, three state variables (V, CA, and CP
). To solve these equations, we
must specify the initial conditions [V(0), CA
(0), and CP
(0)], the inputs (Fi
, F,
CAi) as a function of time, and the parameter (k).
The state, input, and parameter vectors areUsing state-variable notation, the model has the form
or,
Simplifying Assumptions The reactor model presented in Example 2.2 has three
differential equations. Often, other simplifying assumptions are made to reduce
the number of differential equations to make them easier to analyze and solve.
Assuming a constant volume (dV/dt = 0), perhaps due to a level controller,
reduces the number of equations by one.
The resulting differential equations (since we assumed dV/dt = 0, F = Fi
) are
Steady-State Solution At steady state, we find the following relationships
(where the subscript s represents a steady-state solution):Notice that the concentrations are a function of the space velocity (Fs
/V), which
has units of inverse time. The space velocity can be thought of as the number
of reactor volumes that “change over” per unit time. It is inversely related to
the fluid residence time (V/Fs
), which has units of time and can be thought of
as the average time that an element of fluid spends in the reactor.
Examples 2.1 and 2.2 illustrate the use of material balances to develop models.
In the gas drum example, the state variable of interest was the drum pressure.
In the isothermal ethylene glycol reactor, the state variables of interest were the
concentrations of ethylene oxide and ethylene glycol. Material balance
equations are rarely adequate to develop most models of interest. In Section
2.5, we review the development of energy balance models, where temperature
is often a state variable. First, however, we cover the basic idea of constitutive
relationships in Section 2.4.
2.4 Constitutive Relationships
Examples 2.1 and 2.2 required more than simple material balances to define the
modeling equations. These required relationships are known as constitutive
equations; several examples of constitutive equations are shown in this section.
Gas Law
Process systems containing a gas will often need a gas-law expression in the
model. The ideal gas law is commonly used to relate pressure (P), molar
volume ( ), and temperature (T):
The van der Waal’s relationship contains two parameters (a and b) that
are system specific:
For other gas laws, see a thermodynamics text, such as Smith, Van Ness,
Abbott, and Swihart (2019).Chemical Reactions
The rate of reaction per unit volume (mol/volume * time) is usually a function
of the concentration of the reacting species. For example, consider the reaction
A + 2B → C + 3D. If the rate of the reaction of A is first order in both A and B,
we use the expression
where rA
 is the rate of reaction of A (mol A/volume · time), k the reaction rate
constant, CA
 the concentration of A (mol A/volume), and CB
 the concentration
of B (mol B/volume).
Reaction rates are normally expressed in terms of generation of a species. The
minus sign indicates that A is consumed in the preceding reaction. It is good
practice to associate the units with all parameters in a model. For consistency
in the units for rA
, we find that k has units of (vol/mol B * time). Notice that 2
mol of B react for each 1 mol of A. Then we can write
Usually, the reaction rate coefficient is a function of temperature. The most
commonly used representation is the Arrhenius rate law,
where k(T) is the reaction rate constant, as a function of temperature, k0
 the
frequency factor or pre-exponential factor, E the activation energy (cal/gmol),
R the ideal gas constant (1.987 cal/gmol K), and T the absolute temperature
scale (K or R.)
The frequency factor and activation energy can be estimated based on data of
the reaction constant as a function of reaction temperature. Taking the natural
logarithm of the Arrhenius rate law, we findand we see that k0
 and E can be found from the slope and intercept of a plot of
(ln k) vs. (1/T).
Equilibrium Relationships
The relationship between the liquid- and vapor-phase compositions of
component i, when the phases are in equilibrium, can be represented by
where yi
 is the vapor-phase mole fraction of component i, xi
 the liquid-phase
mole fraction of component i, and Ki
 the vapor/liquid equilibrium constant for
component i.
The equilibrium constant is a function of composition and temperature. The
simplest assumption for the calculation of an equilibrium constant is to use
Raoult’s law. Here,
where the pure component vapor (saturation) pressure often has the following
form:
Often, we will see a constant relative volatility assumption made, to simplify
vapor/liquid equilibrium models. In a binary system, the relationship often used
between the vapor and liquid phases for the light component is
where x is the liquid-phase mole fraction of light component, y the vapor-phase
mole fraction of light component, and α the relative volatility (α > 1).
Heat Transfer
The rate of heat transfer through a vessel wall separating two fluids (a jacketed
reactor, for example) can be described bywhere Q is the rate of heat transfer from hot to cold fluid, U the overall heat
transfer coefficient, A the area for heat transfer, and ΔT the difference between
hot and cold temperatures.
At the design stage, the overall heat transfer coefficient can be estimated from
correlations; it is a function of fluid properties and velocities. The individual
film heat transfer coefficients (hi
 and ho
), the metal conductivity (k, and
thickness, Δx), and a fouling factor (f ) can be used to determine the overall
heat transfer coefficient from the relationship
The individual film coefficients are a strong function of fluid properties and
velocities.
The overall heat transfer coefficient is often estimated from experimental data.
Flow Through Valves
The flow through valve is often described by the relationship
where F is the volumetric flow rate, Cv
 the valve coefficient, x the fraction the
valve is open (0 ≤ x ≤ 1), ΔPv
 the pressure drop across the valve, s.g. the
specific gravity of the fluid, and f(x) the flow characteristic (varies from 0 to 1,
as a function of x).
Three common valve characteristics are (i) linear, (ii) equal-percentage, and
(iii) quick-opening. For a linear valve, f(x) = x. For an equal-percentage valve,
f(x) = αx–1. For a quick-opening valve, .
2.5 Material and Energy BalancesSection 2.3 covered models that consist of material balances only. These are
useful if thermal effects are not important, where system properties, reaction
rates, and so on, do not depend on temperature, or if the system is truly
isothermal (constant temperature). Many chemical processes have important
thermal effects, so it is necessary to develop material and energy balance
models. One key is that a basis must always be selected when evaluating an
intensive property such as enthalpy.
Review of Thermodynamics
Developing correct energy balance equations is not trivial, and the chemical
engineering literature contains many incorrect derivations. Chapter 5 of the
book by Denn (1986) points out numerous examples where incorrect energy
balances were used to develop process models.
The total energy (TE) of a system consists of internal (U), kinetic (KE), and
potential energy (PE),
where the kinetic and potential energy terms are
For most chemical processes where there are thermal effects, the kinetic and
potential energy terms can be neglected because their contribution is generally
at least an order of magnitude less than that of the internal energy term.
When dealing with flowing systems, we usually work with enthalpy. Total
enthalpy is defined as
The heat capacity is defined as the partial derivative of enthalpy with respect to
temperature, at constant pressure. The heat capacity, on a unit mass basis, iswhere the overbar indicates that the enthalpy is on a unit mass basis. We make
use of this relationship in the following example.
The goal of the following example is several-fold:
• Develop a model consisting of both material and energy balances
• Illustrate the steady-state effect of the input on the output
• Illustrate the effect of process “size” (magnitude of flow rate, for example)
• Illustrate dynamic behavior
Example 2.3: Heated Mixing Tank
Consider a perfectly mixed stirred-tank heater, with a single feed stream and a
single product stream, as shown in Figure 2–4. Assuming that the flow rate and
temperature of the inlet stream can vary, that the tank is perfectly insulated, and
that the rate of heat added per unit time (Q) can vary, develop a model (Figure
2–4) to find the tank liquid temperature as a function of time.
Material Balance
Figure 2–4 Stirred-tank heater
Neglecting changes in density due to temperature, we find
Energy BalanceHere, we neglect the kinetic and potential energy contributions,
We write the total work done on the system as a combination of the shaft work
(WS
) and the energy added to the system to get the fluid into the tank and the
energy that the system performs on the surroundings to force the fluid out.
This allows us to write Equation (2.47) as
and given that H = U + pV, and , we can rewrite
Equation (2.49) as
Neglecting pressure * volume changes, we find
We must remember the assumptions that went into the development of
Equation (2.50).
• The kinetic and potential energy effects were neglected.
• The change in the pV term was neglected.
The total enthalpy term is
and assuming no phase change, we select an arbitrary reference temperature
(Tref) for enthalpyOften, we assume that the heat capacity is constant, or calculated at an average
temperature, so
We now write the energy balance (2.50) in the following fashion,
Expanding the derivative term and assuming that the density is constant, we
have
or from Equation (2.46)
Canceling common terms gives
but Tref is a constant, so d(T − Tref)/dt = dT/dt. Also, neglecting WS
 (which is
significant only for very viscous fluids), we can writewhich yields the two modeling equations
In order to solve this problem, we must specify the parameters ρ and cp
, the
inputs Fi
, F, Q, and Ti
 (as a function of time), and the initial conditions V(0)
and T(0).
Steady-State Behavior
The steady-state solution can be found by setting the derivative terms in
Equations (2.55) and (2.56) to 0. The resulting relationship between the
manipulated power and the outlet temperature is
where the subscript s is used to indicate a steady-state value. Notice that for a
given steady-state flow rate, the relationship between heater power and outlet
temperature is linear. Also, the volume of the vessel has no effect on the
steady-state temperature (volume has a solely dynamic effect).
2.6 Form of Dynamic Models
The dynamic models derived in this chapter consist of a set of first-order (only
first derivatives with respect to time), nonlinear, explicit, initial-value, ordinary
differential equations. A representation of a set of first-order differential
equations iswhere xi
 is a state variable, ui
 is an input variable, and pi
 is a parameter. The
notation is used to represent dxi
/dt. Notice that there are nx equations, nx
state variables, nu inputs, and np parameters.
Also included in these models is a set of algebraic equations, relating states,
inputs, and parameters to output variables:
State Variables
A state variable is a variable that arises naturally in the accumulation term of a
dynamic material or energy balance. A state variable is a measurable (at least
conceptually) quantity that indicates the state of a system. For example,
temperature is the common state variable that arises from a dynamic energy
balance. Concentration is a state variable that arises when dynamic component
balances are written.
Input Variables
An input variable is a variable that normally must be specified before a
problem can be solved or a process can be operated. Inputs are normally
specified by an engineer, based on knowledge of the process being considered.
Input variables typically include flow rates of streams entering or leaving a
process (notice that the flow rate of an outlet stream might be considered an
input variable!). Compositions or temperatures of streams entering a process
are also typical input variables. Input variables are often manipulated (by
process controllers) in order to achieve desired performance.
Parameters
A parameter is typically a physical or chemical property value that must be
specified or known to mathematically solve a problem. Parameters are often
fixed by nature, that is, the reaction chemistry, molecular structure, existing
vessel configuration, operation, and so forth. Examples include density,
viscosity, thermal conductivity, heat transfer coefficient, and mass-transfercoefficient. When designing a process, a parameter might be “adjusted” to
achieve some desired performance. For example, reactor volume may be an
important design parameter.
Output Variables
An output variable is often a state variable that is measured, particularly for
control purposes. Very often, the measured outputs are simply a subset of the
state variables. Other times, the outputs are a nonlinear function of the states
(or even inputs).
Vector Notation
The set of differential and algebraic Equations (2.58) and (2.59) can be written
more compactly in vector form:
where x is the vector of state variables, u the vector of input variables, p the
vector of parameters, and y the vector of output variables.
Numerical Solutions
Notice that dynamic models (2.58) can also be used to solve steady-state
problems, given that
That is,
for steady-state processes, resulting in a set of algebraic equations. In this case,
all inputs and parameters would be specified, leaving the nx state values to be
solved for; that is, nx equations in nx unknowns must be solved. The focus of
this text is not on the development of numerical methods, so we refer readers to
Module 1, where the MATLAB function fsolve is used for nonlinear algebraic
equations. Note that differential equation solvers can also be used to solve forthe steady state of stable systems, by simply integrating from an initial value
for the states for a long period of time, until a steady state is reached.
Numerical integration techniques are used to solve ordinary differential
equations:
given the initial condition, x(t = 0), and known inputs as a function of time.
The suite of MATLAB ode function files, including ode45, is covered in
Module 3, “Ordinary Differential Equations.”
2.7 Linear Models and Deviation Variables
Consider the stirred-tank heater model (Example 2.3), when the volume, flow
rate, and inlet temperature are constant at their steady-state values (indicated by
the subscript s):
Deviation Variable Formulation
Control engineers often think in terms of “deviation variables,” that is,
perturbations from a steady-state operating condition. The reader should show
that if we define the following deviation variables
then Equation (2.63) can be written in the form
orwhere the new parameters that appear are
Equation (2.66) is one of the most widely used models to describe the dynamic
behavior of chemical processes.
Linearization of Nonlinear Models
The material and energy balance models that describe the behavior of chemical
processes are generally nonlinear, while commonly used control strategies are
based on linear systems theory. It is important, then, to be able to linearize
nonlinear models for control system design and analysis purposes. The method
that we use to form linear models is based on a Taylor series approximation to
the nonlinear model. The Taylor series approximation is based on the steady￾state operating point of the process, as shown next.
One State, Input and Output
Consider the following single-state, single-input, single output system:
The value of this function can be approximated using a Taylor series expansion
of the form
where the subscript s is used to indicate the point of linearization (usually the
steady-state operating point). The quadratic and higher-order terms are
neglected, resulting in the following approximate equation:Because the steady-state operating point is chosen as the point of linearization,
then, by definition of a steady state, f(xs
, us
) = 0,
where x′ = x + xs
 represents a deviation variable, and and 
 are the derivatives of the function with respect to the state and
input, evaluated at the steady-state value.
Consider now the expression for an output variable
A Taylor series expansion about the state and input yields (after neglecting
higher order derivatives)
and because ys
 = g(xs
,us
),
y′ = cx′ + du′
where y′ = y – ys
, x′ = x – xs
, and u′ = u – us
 represent deviation variables, and 
 and are the derivatives of the function with
respect to the state and input, evaluated at the steady-state value.
Generalization
Consider the general nonlinear model with nx states, ny outputs, nu inputs, and
np parametersThe elements of the linearization matrices are defined as
where ij subscripts refer to the ith row and jth column of the corresponding
matrix. For example, element Bij refers to the effect of the jth input on the ith
state derivative.
The linear state space form is
where the deviation variables are defined as perturbations from their steady￾state values
In later chapters, we normally drop the prime (′) notation for deviation
variables and assume that a state space model is always in deviation variable
form.Figure 2–5 Jacketed stirred-tank heater
Example 2.4: Jacketed Heater
Consider the jacketed stirred-tank heater shown in Figure 2–5. A hot fluid
circulates through the jacket (which is assumed to be perfectly mixed), and
heat flow between the jacket and vessel increases the energy content of the
vessel fluid. The rate of heat transfer from the jacket fluid to the vessel fluid is
Q = UA[Tj
 − T]
where U is the overall heat transfer coefficient and A is the area for heat
transfer. Assuming that the volume and density are constant, Fi
 = F. Energy
balances on the vessel and jacket fluids result in the following equations:
Here, the outputs are the vessel and jacket temperatures, which are also the
states; the inputs are the jacket flow rate, feed flow rate, feed temperature, and
jacket inlet temperature. If the outputs, states, and inputs, in deviation variable
form, arethen, the linearized model is
Similarly, the reader should show thatExercise 8 is a numerical example for this problem. Jacketed vessels are often
used as chemical reactors, particularly if the reactions involved are exothermic
or endothermic; a heat-of-reaction term will then appear in the energy balance.
An exothermic reactor is the focus of Module 7; exothermic reactions, in
particular, can lead to very interesting steady-state and dynamic behavior, as
shown in Module 7.
2.8 Summary
We focused primarily on the development of ordinary differential equation
models that describe the dynamic behavior of processes where perfect mixing
can be assumed. The models have the form
where the states, inputs, outputs, and parameters are x, u, y, and p, respectively.
States appear in the “accumulation” (derivative with respect to time) term,
inputs can be either manipulated or disturbance variables, outputs are often asubset of the states, and parameters are often physical intensive variables, such
as density or kinetic rate parameters. The modeling equations are based on
material (component or total) and energy balances. States are often
concentrations (from the component balances), volume (total material balance
on liquids), pressure (total material balances on gases), or temperature (energy
balances).
The steady-state solution is , or f(x,u,p) = 0, which can be found
numerically, using MATLAB functions such as fzero and fsolve (which
require the optimization toolbox) as shown in the MATLAB tutorial module
(Module 1).
The ODE module (Module 3) provides a tutorial on the use of MATLAB to
integrate ordinary differential equations.
An understanding of dynamic behavior is obtained by using linear state-space
models, which have the form
where the prime notation (′) is used to indicate a deviation variable. In Chapter
3, “Dynamic Behavior,” we further analyze linear state-space models to obtain
an understanding of dynamic behavior. These state-space models are converted
to Laplace transfer function models, which are used later for control-system
design.
For the processes studied, some important characteristics were discussed. For
example, residence time (volume/flow rate) is often a good indicator of the
relative “speed” of the process dynamics, particularly for nonreacting systems.
For chemical reactors, the Damköhler number is an important parameter
because it is the ratio of a characteristic reaction time to residence time.
The concept of process gain is extremely important for process control design.
Process gain is the sensitivity of the process output to a manipulated input.
That is, process gain is the ratio of the long-term (steady-state) change in
process output to the change in process input.
Many process systems can be represented as single-state models, where the
output is the state. The resulting first-order model has the formor
where kp
 is the process gain and τp
 is the process time constant. The dynamic
behavior of first-order processes is discussed in Chapter 3.
The examples used in this chapter were
2.1 Gas Surge Drum
2.2 An Isothermal Chemical Reactor
2.3 Heated Mixing Tank
2.4 Jacketed Heater
While these are classic chemical process examples, many physiological and
biomedical systems have similar model structures. For example, an insulin￾glucose model for an individual with type 1 diabetes and composed of 10
differential equations is discussed in exercise 18 and presented in the appendix
to Module 12.
Suggested Reading
A nice introduction to chemical engineering calculations is provided by
Felder, R.M., R.W. Rousseau, and L. Bullard. (2015). Elementary Principles of
Chemical Processes, 4th ed. New York: Wiley.
Excellent discussions of the issues involved in modeling a mixing tank,
incorporating density effects and energy balances, is provided in the
following two books:
Denn, M.M. (1986). Process Modeling. New York: Longman.
Russell, T.R.F., and M.M. Denn. (1971). Introduction to Chemical Engineering
Analysis. New York: Wiley.
An introduction to chemical reaction engineering is
Fogler, H.S. (2011). Essentials of Chemical Reaction Engineering. Englewood
Cliffs, NJ: Prentice Hall.An excellent textbook for an introduction to chemical engineering
thermodynamics is
Smith, J.M., H.C. Van Ness, M.M. Abbott, and M.T. Swihart. (2017). Chemical
Engineering Thermodynamics, 8th ed. New York: McGraw-Hill.
A more detailed discussion of process dynamics is provided in
Bequette, B.W. (1998). Process Dynamics: Modeling, Analysis and Simulation.
Upper Saddle River, NJ: Prentice Hall.
Student Exercises
1. Consider the gas drum in Example 2.1. Often, the outlet flow relationship
is actually nonlinear, with the form
so the modeling equation is
Discuss whether this is now a self-regulating process. Also, sketch the
steady-state input (qis)-output (Ps
) curve, based on the flow coefficient, β
= 1 mol · s–1 · atm–1/2 and a constant outlet header pressure, Ph
 = 1 atm.
2. Consider the heated mixing tank example, which had the modeling
equations
For steady-state inlet and outlet flow rates of 100 liters/minute, a liquid
volume of 500 liters, and inlet and outlet temperatures of 20°C and 40°C,
respectively:
a. Find the steady-state heating rate, Q.
b. Consider a step inlet temperature change from 20°C to 22°C. Use Euler
integration with an integration step size of 0.5 minutes to find the vessel
temperature response for the first 2 minutes. Compare this with MATLAB
ode45 (see Module 3).3. Often, liquid surge tanks (particularly those containing hydrocarbons)
have a gas “blanket” of nitrogen or carbon dioxide to prevent the
accumulation of explosive vapors above the liquid, as depicted here.
Develop the modeling equations with gas pressure and liquid volume as
the state variables. Let qf
 and q represent the inlet and outlet gas molar
flow rates, Ff
 and F the liquid volumetric flow rates, V the constant (total)
volume, Vl
 the liquid volume, and P the gas pressure. Assume the ideal
gas law. Show that the modeling equations are
and state any other assumptions.
4. Consider the ethylene glycol problem (Example 2.2), with a reaction rate
constant of k = 0.311 min-1. Assume that it is desired to produce 100
million pounds per year of ethylene glycol. The feed-stream concentration
is 0.5 lbmol/ft3
 and an 80% conversion of ethylene oxide has been
determined to be reasonable.
a. What volume of reactor should be specified to meet the production rate
requirement? Given that process plants often have a shutdown period
every 18 months or so, assume 350 days/year of operation. Because
80% of the ethylene oxide is converted to ethylene glycol, the ethylene
glycol concentration is 0.4 lbmol/ft3
. Because the molecular weight is
62 lb/lbmol, the mass concentration is 24.8 lb/ft3
. The operating flow
rate is then
Solving for reactor volume, you should find that the required volume is
102.9ft3
 or 769 gallons.b. If two 800-gallon reactors are placed in series, what volumetric flow
rate is necessary to produce 100 million lb/year of ethylene glycol?
What percentage savings is this compared with using a single 800-
gallon reactor?
5. Consider the ethylene glycol problem (Example 2.2). First, solve for the
steady-state space velocity to achieve a conversion of 80% of the ethylene
oxide (result: 0.0778 min-1). Solve the dynamic equations, using ode45
(see the ODE module), for a step change in space velocity from 0.0778 to
0.0817 min−1
.
6. Semibatch reactors are operated as a cross between batch and continuous
reactors. A semibatch reactor is initially charged with a volume of
material, and a continuous feed of reactant is started. There is, however,
no outlet stream. Develop the modeling equations for a single first-order
reaction. The state variables should be volume and concentration of
reactant A.
7. A stream contains a waste chemical, W, with a concentration of 1
mol/liter.
To meet Environmental Protection Agency and state standards, at least
90% of the chemical must be removed by reaction. The chemical
decomposes by a second-order reaction with a rate constant of 1.5
liter/(mol hr). The stream flow rate is 100 liter/hour, and two available
reactors (400 and 2000 liters) have been placed in series (the smaller
reactor is placed before the larger one).
a. Write the modeling equations for the concentration of the waste
chemical. Assume constant volume and constant density. Let
Cw1
 = concentration in reactor 1, mol/liter
Cw2
 = concentration in reactor 2, mol/liter
F = volumetric flow rate, liter/hour
V1
 = liquid volume in reactor 1, liters
V2
 = liquid volume in reactor 2, liters
k = second-order rate constant, liter/(mol hr)
b. Show that the steady-state concentrations are 0.33333 mol/liter (reactor
1) and 0.09005 mol/liter (reactor 2), so the specification is met. (Hint:You need to solve quadratic equations to obtain the concentrations.)
c. Linearize at steady state and develop the state space model (analytical)
of the form
where
d. Show that the A and B matrices are
(also, show the units associated with each coefficient).
e. Assuming that each state is an output, show that the C and D matrices
are
f. Find the eigenvalues of A using the MATLAB eig function, and find the
eigenvalues by hand by solving det (λI − A) = 0.
g. Solve part a for the nonlinear differential equations, using ode45.
Compare the linear and nonlinear variables on the same plots (make
certain you convert from deviation to physical variables for the linear
results) for a step change in the flow rate from 100 liters/hour to 110
liters/hour. Assume the initial concentrations are the steady-state values
(0.3333 and 0.09005). Compare the linear and nonlinear responses of
the reactor concentrations. Is the removal specification still obtained?
h. Would better steady-state removal of W be obtained if the order of the
reaction vessels was reversed? Why or why not? (Show your
calculations.)
8. Consider Example 2.5, the stirred-tank heater example. Read and work
through the example. Use the following parameters and steady-state
values:a. By solving the steady-state equations, verify that the following values
obtained for UA (overall heat transfer coefficient * area for heat
transfer) and Fjs (steady-state jacket flow rate) are correct:
UA = 183.9 Btu/(°F · min)
Fjs = 1.5 ft3
/min
b. Find the values of the matrices in the state space model.
c. Write a function file (example shown in supplemental material), to be
used with ode45 (Module 3) to solve the two nonlinear ordinary
differential equations.
d. First, verify that the steady-state state variable values are correct by
simulating the process with no change in the jacket flow rate.
e. Now, perform simulations for small and large step changes in the jacket
flow rate. Use the MATLAB step command to solve for the linear state
space model. Realize that the step results are based on deviation
variables and for a unit step change in input one (jacket flow rate), and
convert the linear states to physical variable form.
We now consider the important issue of scale-up: pilot plants are small￾scale (intermediate between lab-scale and full-size manufacturing￾scale) chemical processes, used to understand process operating
behavior before the manufacturing process is designed. Here, we
discover the effect of vessel scale on the heat transfer removal
capability of a vessel.
f. Consider now a vessel that can handle 10 times the throughput of the
previous vessel (that is, 10 ft3
/min rather than 1 ft3
/min). Assume that
the same residence time is maintained (V/F = 10 minutes), so the
volume of the new vessel is 100 ft3
. Assume that the heat transfer
coefficient (U) remains constant but that the heat transfer area changes.
Assume that the vessel can be modeled as a cylinder, with the height
(L) = 2 * diameter (D). Find the value of UA for the larger vessel.g. For the larger vessel, find the new steady-state value of jacket
temperature that must be used to maintain the vessel temperature at T =
125°F. Also, find the new steady-state jacket flow rate. Hint: Solve the
two modeling equations at steady state to obtain these values. Discuss
the effect of process scale-up on the operating conditions. How large
can the vessel become before the jacket temperature is too high (it
approaches the inlet jacket temperature)?
h. For the larger vessel, find the new state space model, assuming that the
jacket volume is 0.25 times the vessel volume. Calculate the
eigenvalues of the A matrix. How do they compare with the smaller
vessel?
i. Find the step response for the nonlinear and linear (state space) systems
for a step increase of 0.1 ft3
/min in jacket flow rate. How do these
compare with the smaller vessel?
j. Find the step response for the nonlinear and linear (state space) systems
for a step increase of 10% in the jacket flow rate. How do these
compare with the smaller vessel?
9. Consider two noninteracting tanks in series, with a specified inlet
volumetric flow rate (Fin) to the first tank, and outlet flow rates
proportional to the square root of the tank height (flow coefficients β1
 and
β2
). Assume that the cross-sectional areas (A1
 and A2
) of the tanks are
constant but may differ for the two tanks.a. State your assumptions about fluid density, and write the modeling
equations using tank heights as the state variables.
b. Solve for the steady-state tank heights as a function of the parameters
and inlet flow rate.
c. Write a MATLAB function file to be used by ode45. Use the following
parameter values: A1
 = A2
 = 10 m2
, β1
 = β2
 = 1 m3
/min/m0.5
.
d. For the startup problem, assume the initial conditions for tank height
are 0 meters, and the inlet flow rate is 1 cubic meter/min. Plot both
heights as a function of time, for t = 0 to 60 minutes.
e. Solve (analytically) for the steady-state tank heights assuming the inlet
flow rate is 1 cubic meter/min, and use these heights at the initial
conditions for your next simulation. Change the inlet flow rate from 1
cubic meter/min to 1.4 cubic meters/min. Plot the tank heights as a
function of time. Are the heights at t = 0 and t = 60 minutes consistent
with steady-state solutions? Should the simulation time be longer to
achieve the steady state?
f. Linearize your model into state-space form. For the specified parameter
values, find the A, B, C, and D matrices, and calculate the eigenvalues
of the A matrix.g. For the linear model based on deviation variables, change the input
flow rate from 0 to 0.4 cubic meters/min, and plot the tank heights as a
function of time.
h. Convert the linear deviation variable results from part g into physical
variables by adding in the initial steady-state values. Compare these
tank heights with those from part e and describe the differences
between the nonlinear and linear simulation results.
10. Consider two interacting tanks in series, with a specified inlet volumetric
flow rate (Fin) to the first tank, the outlet flow rate from tank 1
proportional to the square root of the tank height differences, and the
outlet flow rate from tank 2 proportional to the square root of height of
liquid in tank 2 (flow coefficients β1
 and β2
). Assume that the cross￾sectional areas (A1
 and A2
) of the tanks are constant but may differ for the
two tanks.
a. State your assumptions about fluid density, and write the modeling
equations using tank heights as the state variables.
b. Solve for the steady-state tank heights as a function of the parameters
and inlet flow rate.
c. Write a Matlab function file to be used by ode45. Use the following
parameter values: A1
 = A2
 = 10 m2
, β1
 = β2
 = 1 m3
/min/m0.5
.
d. For the startup problem, assume the initial conditions for tank height
are 0 meters, and the inlet flow rate is 1 cubic meter/min. Plot both
heights as a function of time, for t = 0 to 60 minutes.e. Solve (analytically) for the steady-state tank heights assuming the inlet
flow rate is 1 cubic meter/min, and use these heights at the initial
conditions for your next simulation. Change the inlet flow rate from 1
cubic meter/min to 1.4 cubic meters/min. Plot the tank heights as a
function of time. Are the heights at t = 0 and t = 60 minutes consistent
with steady-state solutions? Should the simulation time be longer to
achieve the steady state?
f. Linearize your model into state-space form. For the specified parameter
values, find the A, B, C, and D matrices, and calculate the eigenvalues
of the A matrix.
g. For the linear model based on deviation variables, change the input
flow rate from 0 to 0.4 cubic meters/min and plot the tank heights as a
function of time.
h. Convert the linear deviation variable results from part g into physical
variables by adding in the initial steady-state values. Compare these
tank heights with those from part e, and describe the differences
between the nonlinear and linear simulation results.
11. Consider the process shown below, where a fraction (ı) of the feed stream
bypasses the mixer (there is no chemical reaction occurring in the mixer
or bypass piping). Assume that the volumetric flow rates and the volume
of the mixing vessel are constant.
a. Develop a component material balance model, where a state is the
concentration of A in the mixing vessel; this will be a linear model.
Write the complete modeling equations in state-space form, where the
output is the concentration of the exit stream after the mixing, and the
input is the concentration of A in the feed stream. Notice that the D
matrix in the state-space model will be nonzero; also, because themodel is inherently linear, it does not matter whether deviation or
physical variables are used in the model development.
b. Let the inlet flow rate, F, be 1 cubic meter/min, and the fraction
bypassing the mixing vessel be 0.5. The mixing vessel volume is 10
cubic meters, and the feed concentration of A, CAf, is 1 kmol/cubic
meter. What are the steady-state concentrations of A in the mixing
vessel and in the exit stream from the system?
c. For the parameter values in part b, find the numerical values of the state
space (A, B, C, D) matrices. Note: This exercise is used in Chapter 4,
“Empirical and Discrete-Time Models,” for transfer function analysis.
12. Consider a conical water tank, shown below. Write the dynamic material
balance equation if the flow rate out of the tank is a function of the square
root of height of water in the tank ( ). List state variables, input
variables, and parameters. (Hint: Use height as a state variable.)
13. A car tire has a slow leak. The flow rate of air out of the tire is
proportional to the difference between the pressure of air in the tire and
the ambient pressure. Write the modeling equation with tire pressure as a
state variable. Remember that the ideal gas law density is based on
absolute pressure. The initial pressure is 30 psig, and after 5 days, the
pressure is down to 20 psig. How long will it take to reach 10 psig?
14. A car tire has a slow leak. The flow rate of air out of the tire is
proportional to the square root of the difference between the pressure of
air in the tire and the ambient pressure. Write the modeling equation with
tire pressure as a state variable. Remember that the ideal gas law density is
based on absolute pressure. The initial pressure is 30 psig, and after 5days, the pressure is down to 20 psig. How long will it take to reach 10
psig?
15. Consider Example 2.2, the isothermal CSTR. Laboratory chemists have
found that the reaction rate constant at 55°C is k = 0.311 min−1. For a
range of steady-state residence times (V/F) from 0 to 20 minutes, plot the
concentrations of A and P as a function of residence time.
16. Most chemical process plants have a natural gas header that circulates
through the process plant. A simplified version of such a header is shown
here.
Here, the natural gas enters the process plant from a source (the natural
gas pipeline) through a control valve. It flows through the plant piping,
which we have represented as a perfectly mixed drum for simplicity.
Another valve connects the plant piping to the gas drum for a boilerhouse
unit. Gas passes through another valve to the boilerhouse furnaces.The
objective of this problem is to develop a linear model that relates changes
in valve position to changes in drum pressures.
a. Write modeling equations assuming that the pressures in drums 1 and 2
are the state variables. Let the input variables be (1) valve position 1,
(2) valve position 2, and (3) source pressure.
b. Solve for the steady-state conditions and write the modeling equations
in linear, deviation variable form.c. Study the effect of step changes in each input on each tank pressure.
Hints: For simplicity, assume that the following equations can be used for
the flow through the valves
where the flow rate is in lbmol/min, h is the fraction that a valve is open
(varies between 0 and 1), and α is a valve coefficient.
Steady-State Data
Gas flow rate = 1000 std ft3
/min
Pis = 250 psig, P1s
 = 50 psig, P2s
 = 30 psig, P3s
 = 5 psig
Assume that each valve is half open under these conditions (his = h1s
 = h2s
= 0.5)
Constants
V1
 = 1135 ft3
, V2
 = 329 ft3
, Temperature = 32°F
Magnitude of step changes
Make separate step changes of 0.1 (10%) in the valve openings, and 10
psia in the inlet pressure. Simulate for t = 0 to t = 15 minutes.17. Consider a constant volume CSTR with a second-order reaction, which
has the following model:
Here, the state variable is CA
, the output variable is also CA
, and the input
variable is F. Develop the linear state-space model for this process, using
a Taylor series expression, for the following parameter values:
18. Individuals with type 1 diabetes must inject insulin to maintain desired
blood glucose values, particularly when eating. A 10-state (10 equation)
dynamic model to relate insulin and meals to blood glucose and interstitial
fluid (underneath the skin) glucose is presented in the appendix to Module
12. Use the MATLAB files from this appendix to generate the following two
plots. The first plot is a the steady-state relationship between insulin
infusion rate (U/hr) and blood glucose (mg/dL) for an individual with
three different insulin sensitivities. Note that 1.06 U/hr must be infused to
achieve a blood glucose of 120 mg/dL for an individual with the nominal
sensitivity. A reduced sensitivity would require 1.28 U/hr, and an
increased sensitivity would require 0.91 U/hr, to achieve the same desired
120 mg/dL in blood glucose.The next plot illustrates the importance of providing an insulin bolus
(shot) at mealtime. If no meal insulin bolus is provided, the blood glucose
is much higher than when a meal insulin bolus is provided. The dashed
lines at 70 and 180 mg/dL represent the desired range of blood glucose
concentrations.Chapter 3. Dynamic Behavior
The goal of this chapter is to understand dynamic behavior. We begin by
working with linear state-space models, often obtained by linearizing a
nonlinear model, such as those developed in Chapter 2, “Fundamental Models.’
We then introduce Laplace transforms. The main advantage to Laplace
transforms is that they allow us to analyze behavior exhibited by linear
differential equations by using simple algebraic manipulations. Laplace
transforms are used to create transfer function models, which are the basis for
many control-system design and analysis techniques.
• After studying this chapter, the reader should be able to
• Apply the initial and final value theorems of Laplace transforms.
• Understand first-order and integrating system step responses.
• Understand second-order underdamped behavior.
The major sections of this chapter are as follows:
3.1 Background
3.2 Linear State-Space Models
3.3 Laplace Transforms
3.4 Transfer Functions
3.5 First-Order Behavior
3.6 Integrating System
3.7 Second-Order Behavior
3.8 Summary
3.1 Background
One of the major goals of this chapter is to obtain an understanding of process
dynamics. Assume that the process is initially at steady state, then apply a stepchange to an input variable. The majority of chemical processes exhibit one of
the responses shown in Figure 3–1. In this plot, we assume that a positive step
increase has been made to an input variable. The solid curves are examples of
positive gain processes; that is, the process output increases for an increase in
the input. The dashed lines are those of negative gain processes. The curves in
Figure 3–1a show a monotonic change in the output; this behavior is generally
known as over-damped. The curves in Figure 3–1b are indicative of integrating
processes; a prime example is a liquid surge vessel, where the level continues
to change when there is an imbalance in the inlet and outlet flow rates. The
curves in Figure 3–1c are known as underdamped or oscillatory responses.
This type of behavior may occur in exothermic chemical reactors or
biochemical reactors. It more often occurs in processes that are under feedback
control, particularly if the controller is poorly tuned. The behavior shown in
Figure 3–1d is known as inverse response and is seen in steam drums,
distillation columns, and some adiabatic plug flow reactors.
In the sections that follow, we discuss the characteristics of process models that
lead to each of the behaviors shown in Figure 3–1.
3.2 Linear State-Space Models
In Chapter 2, we developed fundamental models, which were normally
nonlinear in nature. We then developed state-space models that were based on
linearizing the fundamental models at a steady-state solution. This led to the
notion of a perturbation or deviation variable, which is simply the perturbation
of a variable from its steady-state value.Figure 3–1 Common responses of process outputs to positive step
changes in process inputs. Assuming a positive step change, the solid
curves are illustrative of positive gain processes, and the dashed curves
are indicative of negative gain processes. (a) Overdamped or first order,
(b) integrating, (c) underdamped or oscillatory, and (d) inverse response.
State-space models have the following form, where the states (x), inputs (u),
and outputs (y) are all perturbation or deviation variables:
Recall that in matrix notation, the first subscript refers to the row and the
second subscript refers to the column. When matrices multiply vectors, each
row corresponds to a particular output of the multiplication, while the column
corresponds to a particular input of the operation. Consider the C matrix, which
relates the states to the outputs. Element cij relates the effect of state xj
 on
output yi
.The shorthand notation for Equation (3.1) is
It is important to always check for dimensional consistency in matrix
operations. In a matrix-vector operation y = Cx
, the number of rows in C must
be equal to the number of elements in y. Also, the number of columns in C
must be equal to the number of elements in x.
Stability
Consider a process where one or more states have been perturbed from the
steady-state solution or operating point. The process is stable if, after a period
of time, the variables return to the steady-state values. This means that the state
variables, because they are deviation variables, return to zero.
Numerically, we can determine the stability of a state-space model by finding
the eigenvalues of the state-space A matrix. Remember that the A matrix is
simply the matrix of derivatives of the dynamic modeling equations with
respect to the state variables.
If all of the eigenvalues are negative, then the system is stable; if any single
eigenvalue is positive, the system is unstable. A system with all but one
eigenvalues negative and with one eigenvalue equal to zero is called an
integrating system and is characteristic of processes with liquid levels or gas
drum pressures that can vary.
Examples of unstable systems are shown in Figure 3–2. If an eigenvalue is real
and positive, the system response is that shown in the top curves. If there are
complex conjugate eigenvalues, with positive real portions, the system
oscillates (with ever increasing amplitude), as shown at the bottom.
Mathematically, the eigenvalues of the A matrix are found from the roots of the
characteristic polynomial
where λ is known as an eigenvalue, and I is the identity matrix. For a state￾space model with n states, A is an n × n matrix, and there will be n solutions(eigenvalues) of Equation (3.3). There are analytical solutions for two- and
three-state systems; the two-state solution is shown here.
In two-state systems,
Figure 3–2 Unstable responses. (a) Monotonic and (b) oscillatory.
The determinant can be found by
and the eigenvalues are found as the two solutions (roots) to
The roots can be found using the quadratic formulaIt is easy to show that if a11
 + a22 < 0 and a11a22 > a12a21, the roots
(eigenvalues) are negative and the system is stable. A more general method of
qualitatively checking the stability, known as the Routh stability criterion, is
shown in Chapter 6, “PID Controller Tuning.”
Example 3.1: Exothermic CSTR
Models for an exothermic continuously stirred-tank reactor (CSTR) are
detailed in Module 7. For a two-state representation, the first state is the
concentration, and the second state is the reactor temperature. For a particular
reactor with two different operating conditions, the A matrix is (the time unit is
hours).
and the eigenvalues for operating condition 1 can be found using the following
steps:
with the solutions, using the quadratic formula (3.5),
λ= – 0.8955 hr–1 and λ = – 0.5168 hr–1
Because both eigenvalues are negative, operating condition 1 is stable.
The reader should show that the eigenvalues of A2
 are
λ= – 0.8366 hr–1 and λ = – 0.4939 hr–1
where the positive eigenvalue indicates that operating condition 2 is unstable.Matlab Eigenvalue Function
The MATLAB eig command can be used to quickly find eigenvalues of a
matrix. The reader should use the MATLAB command window to verify the
following results for the second operating condition:
>> a2 = [-1.8124 -0.2324;9.6837 1.4697];
>> eig(a2)
ans =
 -0.8366
 0.4939
Again, the positive eigenvalue indicates that the second operating condition is
unstable.
Generalization
Notice that a solution of a second-order polynomial was required to find the
eigenvalues of the two-state example; this resulted in two eigenvalues. For the
general case of a n × n matrix, there will be n eigenvalues. It is too complex to
find these analytically for all but the simplest low-order systems. The simplest
way to find eigenvalues is by using existing numerical analysis software; for
example, in MATLAB, the eig function can be used to find eigenvalues.
The values of the eigenvalues are related to the speed of response, and the
eigenvalue unit is inverse time. If the unit of time used in the differential
equations is minutes, for example, then the eigenvalues have min−1 as the unit.
For stable systems (where all eigenvalues are negative), the larger magnitude
(more negative) eigenvalues are faster.
For matrices that are 2 × 2 or larger, some eigenvalues may occur in complex
conjugate pairs. In this case, the stability is determined by the sign of the real
portion of the complex number. As long as all real portions are negative, the
system is stable.
3.3 Laplace Transforms
Most control-system analysis and design techniques are based on linear
systems theory. Although we could develop these procedures using the state-space models, it is generally easier to work with transfer functions. Transfer
functions allow us to make algebraic manipulations rather than working
directly with linear differential equations (state-space models). To create
transfer functions, we need to use Laplace transforms.
The Laplace transform of a time-domain function, f(t), is represented by L[f(t)]
and is defined as
The Laplace transform is a linear operation, so the Laplace transform of a
constant (C) multiplying a time-domain function is just that constant times the
Laplace transform of the function,
The Laplace transforms of a few common time-domain functions are shown
next.
Exponential Function
Exponential functions appear often in the solution of linear differential
equations. Here,
f(t) = e
–at
The transform is defined for t > 0 (we also use the identity that e
x+y
 = e
xe
y
):
We now have the following relationship:
DerivativesThis will be important in transforming the derivative term in a dynamic
equation to the Laplace domain (using integration by parts),
so we can write
where f(0) is the initial condition (time, t = 0) of the function. For an nth
derivative, we can derive
n initial conditions (the function value and the first n − 1 derivatives evaluated
at t = 0 are needed: f(0),..., f
(n–1) (0).
One reason for using deviation variables is that all of the initial condition terms
in Equation (3.9) are 0 if the system is initially at steady state.
Time Delays (Dead Time)
Time delays often occur owing to fluid transport through pipes, or
measurement sample delays. Here, we use θ to represent the time delay. If f(t)
represents a particular function of time, then f(t – θ) represents the value of the
function θ time units in the past.We can use a change of variables, t
*
 = t – θ, to integrate the function. Notice
that the lower limit of integration does not change, because the function is
defined as f(t) = 0 for t < 0.
So, the Laplace transform of a function with a time delay (θ) is simply e
–θs
times the Laplace transform of the non-delayed function.
Step Functions
Step functions are used to simulate the sudden change in an input variable (say
a flow rate being rapidly changed from one value to another). A step function
is discontinuous at t = 0. A “unit” step function is defined as
and using the definition of the Laplace transform,
so
Similarly, the Laplace transform of a constant, C, is
Pulse Functions
Consider a pulse function, where a total integrated input of magnitude P is
applied over tp
 time units, as shown in Figure 3–3.Figure 3–3 Pulse function
The function is f(t) = P/tp
 for 0 < t < tp
 and f(t) = 0 for t > tp
. The Laplace
transform is
An example of a pulse input is 1 kg of material delivered continuously over a
10- second interval. The mass flow rate (P/tp
) is 0.1 kg/s, while the total
material delivered is P = 0.1 kg/s * 10 s = 1 kg.
Notice that a pulse input can be considered as a positive step input applied at
time t = 0, followed by a negative step input applied at time t = tp
.
Impulse Functions
An impulse function can viewed as a pulse function, where the pulse period is
decreased while maintaining the pulse area, as shown in Figure 3–4. For
example, a broad pulse could be 0.1 kg/s delivered for 10 seconds, while the
narrow pulse might be 1 kg/s delivered for 1 second; in both cases, 1 kg is
delivered. In the limit, as tp
 approaches 0, the pulse function becomes (using
L’Hopital’s rule)
If we denote a unit impulse as f(t) = δ, then the Laplace transform is
Examples of common impulse inputs include a bolus (shot or injection) of a
drug into a physiological system, or dumping a bucket of fluid or bag of solids
into a chemical reactor.Other Functions
It is rare for one to derive the Laplace transform for a function; rather, a table
of known transforms (and inverse transforms) can be used to solve most
dynamic systems problems. Table 3–1 presents solutions for most common
functions. If you desire to transform a function from the time domain to the
Laplace domain, then look for the time-domain function in the first column and
write the corresponding Laplace domain function from the second column.
Similarly, if your goal is to invert a Laplace domain function to the time
domain, then look for the Laplace domain function in the second column and
write the corresponding time-domain function from the first column. This
notion of the inverse Laplace transform can be written as
Figure 3–4 Concept of an impulse function. An impulse is the limit of a
pulse with the pulse time (tp
) approaching 0.
For example, the exponential decay is f(t) = e
−at, so
Another example is a unit ramp function, f(t) = t. Then, from Table 3–1 we find
Initial- and Final-Value TheoremsThe following theorems are very useful for determining limiting values in
dynamics and control studies. The long-term behavior of a time-domain
function can be found by analyzing the Laplace domain behavior in the limit as
the s variable approaches zero. The initial value of a time-domain function can
be found by analyzing the Laplace domain behavior in the limit as s
approaches infinity.
Table 3–1 Laplace Transforms for Common Time-Domain FunctionsThe final-value theorem is
The initial-value theorem is
It should be noted that these theorems hold only for stable systems.
Example 3.2: Application of Initial- and Final-Value Theorems
Find the long-term and short-term behaviors of the time-domain function, y(t),
using the final- and initial-value theorems on the Laplace domain function Y(s)
(we see later that this arises from a step input applied to a second-order
process):
The long-term behavior, y(t → ∞), is found using the final-value theorem,
The short-term behavior, y(t → 0), is found using the initial-value theorem,
The reader should verify that the time-domain function, y(t), can be found by
applying Table 3–1 to find
y(t) = 4 ·[1 – 3e
–t/3 + 2e
–t/2]
and that the values of y(t → ∞) and y(t → 0) are consistent with the final- and
initial-value theorems.
General Solution Procedure
To obtain analytical solutions for differential equation-based models, the
general procedure is composed of several steps.1. Start with an nth-order linear differential equation,
and known initial conditions,
2. Transform each element of the differential equation to the Laplace
domain,
3. Use algebraic manipulations to solve for the transformed variable.
where N(s) and D(s) are polynomials in s.
4. Perform a partial fraction expansion to isolate the individual elements:
where −a, −b, and so forth are the roots of D(s). If roots are repeated, the
partial fraction expansion has the form (for an example where three roots
all have a value of −a).
5. Invert each element back to the time domain to find the final solution for
y(t).
y(t) = C1e
–at + C2e
–bt + ...
For the case of repeated roots (say, three that have a value of −a), the
solution has the formIt should be noted that chemical process systems are rarely described by an
nth- order differential equation. Usually, a set of n first-order differential
equations is transformed to a single nth-order equation, as shown in Example
3.3.
Example 3.3: Second-Order Differential Equation
Consider the following state-space model of an isothermal CSTR (Module 5,
“Isothermal Chemical Reactor”):
where x1
 and x2
 represent the concentrations of two components (in deviation
variable form) in an isothermal reactor; the initial conditions are x1
(0) = x2
(0) =
0. Solve for the output (concentration of component 2) response to a unit step
input.
1. The reader should show (see Exercise 6) that this can be arranged to a
second-order differential equation,
with the initial conditions y(0) = dy(0)/dt = 0, and the input is initially u(0)
= 0.
2. Taking the Laplace transform of each element,and substituting back into the differential equation, we find1
1
 Alternatively, one could take the Laplace transform of each equation in (3.19)
and use algebraic substitution to find this second-order equation in s.
s
2Y(s) + 4.6429(s) + 5.3821Y(s) = –1.1170sU(s) + 3.1472U(s)
3. Solving for Y(s), we find
Here, we consider a unit step input, U(s) = 1/s
4. Performing a partial fraction expansion using the roots of the denominator
polynomial,
Solve for C1
 by multiplying by s,
Setting s = 0 to find
Similarly, solve for C2
 by multiplying Equation (3.20) by s + 2.4053 and
setting s = −2.4053
C2
 = 14.4630
Also, solve for C3
 by multiplying Equation (3.20) by s + 2.2376 and
setting s = −2.2376
C3
 = –15.0478
which yields5. Inverting each element back to the time domain,
y(t) = 0.5848 +14.4630exp(–2.4053t) –15.0478exp(–2.2376t)
Although it is nice to have an analytical solution, it is generally more
pleasing to engineers to view a plot of a variable as it changes with time,
as shown in Figure 3–5. In this plot, we notice that the concentration
initially decreases before increasing to a new steady-state value; this is
known as an inverse response and is further discussed in Chapter 4,
“Empirical and Discrete-Time Models.”
Figure 3–5 Response of the concentration as a function of time.
In Example 3.3, we solved for the coefficients (C1
, C2
, C3
) by selecting values
of s to minimize the multiplications performed during each step. An alternative
is to solve for three equations in three unknowns by using various values of s
(say, s = 1, 2, and 3, for example) in Equation (3.20).
Differential equations textbooks present many examples of applications of
Laplace transforms to solve differential equations. In practice, it is rare for
process engineers to seek analytical solutions to differential equations; it is far
easier to solve these numerically. The primary goal of this section was to
provide background material to understand the transfer functions and dynamic
responses shown in the next section.3.4 Transfer Functions
A transfer function relates inputs to outputs in the Laplace domain. In
particular, the Laplace domain relationship between a manipulated input and
output is called a process transfer function.
Consider an nth-order differential equation,
Because we are assuming that the model is based on deviation variables and
that the system is initially at steady state, the initial conditions are
Taking the Laplace transform of each term,
Solving for Y(s), we find (often, b0
 = 0)
The ratio of polynomials is called the transfer function. When it relates a
manipulated input to an output, it is commonly called a process transfer
function. In general, we will use gp
(s) to represent the process transfer function.In this case, the process transfer function is
The roots of the numerator polynomial are known as zeros, and the roots of the
denominator polynomial are called poles. The significance of poles and zeros
are discussed in detail in Chapter 4.
We have used capital letters to distinguish Laplace domain variables from the
time-domain variables. In the rest of this text, we generally use lowercase
letters for all input and output variables. If the argument is s, then we assume
that we are referring to the Laplace domain.
Transfer functions are often used in block diagrams. For example, the
relationship between an input and output is shown as
In the rest of this chapter, we study the dynamic behavior of some commonly
used process transfer functions, given different types of input changes, such as
steps and impulses.
3.5 First-Order Behavior
Many chemical processes can be modeled as first-order systems. The
differential equation for a linear first-order process is often written in the
following form:
This equation can also be written aswhere the parameters (τp
 and kp
) and variables (y and u) have the following
names: τp
 is the process time constant (units of time), kp
 the process gain (units
of output/input), y the output variable, and u the input variable. Taking the
Laplace transform of each term (notice that we are now using lowercase
variables to represent the Laplace domain input and output), and assuming that
the initial condition is y(0) = 0,
So, the Laplace transform of Equation (3.25a) can be written
(τps +1)y(s) = kpu(s)
or, solving for y(s), we find a first-order transfer function
that is, 
Step Response
Consider the case where the output is initially zero (steady state in deviation
variable form), and the input is suddenly step changed by an amount Δu. The
Laplace transform of the input is
So, Equation (3.26) can be writtenUsing a partial fraction expansion and inverting to the time domain, you should
find (see Exercise 1)
Here, the notion of a process gain is clear. After a substantial amount of time (t
>> τp
), we find, from Equation (3.29),
y(t → ∞) = kpΔu
That is,
and, because y(0) = 0, we can think of y(t → ∞) as Δy, so
We can think of the process time constant as the amount of time it takes for
63.2% of the ultimate output change to occur, because when t = τp
,
Remember that this holds true only for first-order systems.
Impulse Response
Consider now an impulse input of magnitude P, which has units of the input *
time; if the input is a volumetric flow rate (volume/time), then the impulse
input is a volume. The output response is
You should find that the time domain solution iswhich has an immediate response of Pkp
/βp
 followed by a first-order decay
with time. Indeed, any process that is relative order one (denominator
polynomial in s is one order higher in s than the numerator polynomial) will
have the characteristic of an immediate response to an impulse. The initial
value theorem can be used to easily determine the initial response, and the final
value theorem can be used to determine the long-term response.
Pulse Response
Consider now a pulse input of magnitude P, which has units of the input * time;
if the input is a volumetric flow rate (volume/time), then the impulse input is a
volume (see Figure 3–3).
The Laplace domain pulse input (from 3.12) is
The output response is
which, when inverted to the time-domain, is
Dimensionless Analysis
The step and impulse responses can be put into nondimensional form by
scaling time by the time constant and the output by the long-term change kpΔu.
The dimensionless step response isand the dimensionless impulse response is
These responses are shown in Figure 3–6.
Figure 3–6 Dimensionless step and impulse responses, first-order process.
Example 3.4: Stirred-Tank Heater
Recall that an energy balance on a constant-volume stirred-tank heater
(Example 2.3) yielded
where the subscript s is used to indicate that a particular variable remains at its
steady-state value. Defining the following deviation variables,
the equation can be written in the formor
where the parameters of this first-order model are
The gain and time constants are clearly a function of scale. A process with a
large steady-state flow rate will have a low gain, compared to a process with a
small steady-state flow rate. This makes physical sense, because a given heat
power input will have a larger effect on the small process than on the large
process. Similarly, a process with a large volume-to-flow-rate ratio is expected
to have a slow response compared to a process with a small volume-to-flow￾rate ratio.
Consider a heater with a constant liquid volume of Vs
 = 50 liters and a constant
volumetric flow rate of Fs
 = 10 liters/minute. For liquid water, the other
parameters are ρCp
 = 1kcal /liter°C. The process gain and time constant are
then
Step Response
If a step input change of 10 kW is made, the resulting output change [from
Equation (3.29)] isA plot of the step input and the resulting output are shown in Figure 3–7.
Remember that the inputs and outputs in this expression are in deviation
variable form. If the steady-state values are (for an inlet temperature of 20°C)
Then, the physical temperature response is
T = Ts
 + y = 20 + 14.34(1 – e
–t/5)
Impulse Response
If an impulse input of 30 kJ is made, you should be able to show that the
temperature changes immediately by 0.143°C (see Exercise 9).Figure 3–7 Step response of a stirred-tank heater, characteristic of a first￾order system. Deviation variables.
3.6 Integrating Behavior Purely Integrating
Systems
We found in the previous chapter that material balances on liquid surge vessels
or gas drums often yield models with the following form:
In the Laplace domain, this isConsider an integrating process initially at steady state, with y(0) = 0.
Step Response
If a step input change of Δu is made at t = 0,
and we find the time-domain value
That is, the output ramps with a constant slope of kΔu. Note that any process
transfer function with a pole at 0 (integrator) will have a continuously
integrating response to a step input change—that is, the output will not go to a
steady-state value.
Impulse Response
If an impulse input of magnitude P is made at t = 0,
then the output immediately changes to a new steady-state value of
y(t) = kP
Note that a pure integrator is a relative order-one system, because the order of
the denominator polynomial in s is 1, while the order of the numerator
polynomial in s is 0. The immediate change in the output when given an
impulse input is consistent with the previous result for a first-order system,
which is also relative order one.
Example 3.5: Tank-Height Problem
The mathematical model for a liquid surge tank is (see Example 1.3)where h is the liquid height, A is the constant cross-sectional area of the tank,
F1
 is the inlet flow rate, and F2
 is the outlet flow rate. Assume that the outlet
flow rate remains constant at a steady-state value of F2s
. Defining the output
and input in deviation variable form as
for a constant cross-sectional area of 10 m2
, the model is
Step Response
For a step input change of 0.25 m3
/min, the output response [from Equation
(3.34)] is
y(t) = k · t · Δu = 0.025t
which is shown in Figure 3–8. If the steady-state height is 2 meters, then the
height as a function of time is
h(t) = hs
 + y(t) = 2 + 0.025tFigure 3–8 Step response of a liquid surge tank. Deviation variables.
Impulse Response
For an impulse input of 1 m3
, the output response is
y(t) = 0.1·1 = 0.1m
which makes intuitive sense, because the cross-sectional area is 10 m2
.
First-Order + Integrating Systems
Integrating systems sometimes appear in series with self-regulating processes
or systems. A simple example is a first-order + integrating system, which has
the following transfer function modelNote that this type of transfer function arises from a two-state linear model
where one eigenvalue is 0. For example,
or
Step Response
For a step input of Δu at time t = 0,
the reader should show that the analytical solution iswhich is the same solution as for a ramp with a slope Δu applied to a first-order
process. Notice that the exponential portion decays with time, so the long-term
solution is y(t) = kp
 Δu[t – τp
], which is a ramp shifted in time by τp
 (as
illustrated in Example 3.6, Fig. 3–9a).
Impulse Response
For an impulse input of P at t = 0, given that u(s) = P
the solution is
Note that this is the same response as a step input of magnitude P applied to a
first-order process without an integrator (see Equation 3.29).
Example 3.6: First-Order + Integrator
Consider a first-order + integrator model with the following parameter values:
Figure 3–9a compares the unit step response with that of a pure integrator,
for a unit step input (u(s) = 1/s). The first-order + integrator response is similar
to that of the pure integrator, with an additional lag. This can be seen from
equation (3.36), where, after a long period of time, the response is that of an
integrator, shifted in time by τp
.
Now consider a unit impulse (u(s) = P = 1, that is, u(t) = P = 1) applied to both
the first-order + integrator process and the pure integrator process, with the
results shown in Figure 3–9b. As shown in Example 3.5, the output of the pure
integrating system changes immediately; you can visualize this as 1 m3
 ofliquid being dumped into a vessel with a cross-sectional area of 1 m2
, for
example.
Figure 3–9 Comparison of first-order + integrator with pure integrator
behavior for (a) unit step and (b) unit impulse input changes. Notice that a
step input applied to an integrating system results in an output that does
not come to a steady-state value.3.7 Second-Order Behavior
Second-order models arise from systems that are modeled with two differential
equations (two states). In this section, we separately consider transfer functions
that do not have numerator dynamics and those that do.
Pure Second-Order Systems
Consider a linear second-order ODE,
where k is the gain (units of output/input), ζ the damping factor
(dimensionless), and τ the natural period (units of time).
The second-order model generally arises by changing a set of two first-order
equations (state-space model) to a single second-order equation. For a given
second-order ODE, there are an infinite number of sets of two first-order (state￾space) models that are equivalent.
Taking the Laplace transform of Equation (3.38),
where y(s) indicates the Laplace transformed variable.
Assuming initial conditions are zero, that is, dy/dt|
t = 0 = y(0) = 0, we find
The characteristic equation of the second-order transfer function is τ2s
2
 + 2ζτs
+ 1. We can find the roots (known as the poles) by using the quadratic formula
which yields the following values for the roots:The following analysis assumes that ζ > 0 and τ > 0. This implies that the real
portions of p1
 and p2
 are negative and, therefore, the system is stable. The three
possible cases are shown in Table 3–2.
Step Responses
Now, we consider the dynamic response of second-order systems to step inputs
(u(s) = Δu/s),
where Δu represents the magnitude of the step change.
Case 1: Overdamped (ζ > 1) For ζ > 1, the denominator polynomial, τ2s
2
 + 2ζτs
+ 1, can be factored into the form
τ
2s
2
 + 2ζτs + 1 = (τ1s + 1)(τ2s + 1)
where the time constants are
Table 3–2 Characteristic Behavior of Second-Order Transfer Functions
That is, a second-order overdamped process has the transfer function modeland we can derive the following response to a step input change, Δu:
Note that, as in the case of first-order systems, we can divide by kΔu to develop
a dimensionless output. Also, the dimensionless time is t/τ and we can plot
curves for dimensionless output as a function of ζ. This is done in Figure 3–10,
which includes the critically damped case, as discussed next. Most chemical
processes exhibit overdamped behavior.
Case 2: Critically damped (ζ = 1) The transition between overdamped and
underdamped is known as critically damped. We can derive the following for
the step response of a critically damped system:
Notice that the main difference between overdamped (or critically damped)
step responses and first-order step responses is that the second-order step
responses have an S shape with a maximum slope at an inflection point,
whereas the first-order responses have their maximum slope initially.Figure 3–10 Step response of a second-order overdamped system.
The initial behavior for a step change is really dictated by the relative order of
the system. The relative order is the difference between the orders of the
numerator and denominator polynomials in the transfer function. If the relative
order is 1, then output response has a nonzero slope at the time of the step
input; the step response of a system with a relative order greater than 1 has a
zero slope at the time of the step input. Further, if the relative order is 1, there
will be an immediate change in the output when an impulse input is applied.
Case 3: Underdamped (ζ < 1) For ζ < 1, we find that the poles are complex,
with real (Re) and imaginary (Im) contributions:
We can derive the step response for an underdamped system,where
Again, dividing Equation (3.44a) by kΔu, and representing the dimensionless
time as t/τ we can produce the dimensionless plot shown in Figure 3–11, where
the dimensionless output is y/kΔu.
A number of insights can be obtained from Figure 3–11 and from an analysis
of the step response equations. For ζ < 1, the ratio of the imaginary portion to
the real portion of the pole [from Equation (3.39)] is
As the imaginary/real ratio gets larger, the response becomes more oscillatory
(ζ becomes smaller). We also notice that a decreasing ratio corresponds to a
larger negative value for the real portion. As the real portion becomes larger in
magnitude (more negative), the response becomes faster. We use these insights
to interpret pole/zero plots in Chapter 4, Section 4.3.Figure 3–11 Step response of a second-order underdamped system as a
function of the damping factor (ζ). Interpolate between the curves for the
behavior of other damping factor values.
Underdamped Step Response Characteristics
The following common measures of underdamped second-order step responses
are shown in Figure 3–12 and defined next: (1) rise time, (2) time to first peak,
(3) overshoot, (4) decay ratio, and (5) period of oscillation.
Rise time is the amount of time it takes to first reach the new steady-state value.
Time to first peak is the time required to reach the first peak. Overshoot is the
distance between the first peak and the new steady state. This is usually
expressed as the overshoot ratio, as shown in Figure 3–12. Decay ratio is a
measure of how rapidly the oscillations are decreasing. A b/a ratio of 1/4 is
commonly called quarter wave damping. Period of oscillation is the time
between successive peaks.Figure 3–12 Underdamped step response characteristics.
Impulse and Pulse Responses
We have derived step responses for second-order processes. It is left as an
exercise for the reader to derive impulse responses; see Exercises 10 through
13. For example, the impulse response for a dimensionless second-order
underdamped process is shown in Figure 3–13.Figure 3–13 Impulse response of a second-order underdamped system as
a function of the damping factor (ζ). Interpolate between the curves for the
behavior of other damping factor values.
Interacting and Non-interacting Tank Examples
Most chemical processes naturally exhibit overdamped behavior; underdamped
behavior most often occurs due to feedback control. In Figure 3–14, we show
two different types of second-order overdamped systems: non-interacting and
interacting tanks (see Exercises 9 and 10 in Chapter 2 for the models based on
material balances). Notice that tank height 1 is not affected by the level in tank
2 in the non-interacting tank system. The relationship between the inlet flow
rate and tank height 1 is then first-order:
On the other hand, consider the interacting tank system. Because the flow
between tanks 1 and 2 is proportional to the difference in the tank heights, tank
level 2 does affect tank level 1. Assuming that tank level 1 is the output and the
inlet volumetric flow rate is the input, the transfer function for the interacting
tank model has numerator dynamics, with the formThe behavior of processes with numerator dynamics is discussed in Chapter 4.
Figure 3–14 Non-interacting and interacting tanks.
3.8 Summary
The main objective of this chapter was to develop an understanding of dynamic
process behavior. Although Laplace transforms can be used to obtain analytical
solutions to differential equations, we will not be using them for this purpose
during the rest of this book. The concept of a transfer function is very useful
for control-system design and analysis. In later chapters, we find that transfer
functions allow the use of algebra rather than differential equations when
analyzing control systems composed of a number of components (controller,
valve, process, sensor, etc.).
The stability of a process is determined by the eigenvalues of the state-space A
matrix or the poles of the Laplace transfer function: if all are negative, the
system is stable. Complex eigenvalues (poles) correspond to underdamped
(oscillatory) behavior, characterized by damping factors less than 1.The initial- and final-value theorems of Laplace transforms can be used to find
the limiting behavior of transfer functions without having to obtain a full
solution. The process gain is a measure of the long-term change in a process
output for a given step input change.
This chapter covered low-order process examples—integrators, first-order and
second-order processes—with a focus on step and impulse responses. Periodic
inputs are covered in Chapter 9, “The IMC-Based PID Procedure,” and ramp
inputs are used in Exercises 14 and 15. An impulse input to a process with an
integrator yields the same response as a step input into the same process
without an integrator. Also, impulse inputs applied to first-order or integrating
processes yield an immediate output response. Second-order processes with
complex-conjugate roots (damping factor between 0 and 1) have underdamped
behavior, with a decaying oscillation. In the Chapter 4, we cover more complex
process examples, including time-delays and inverse response.
References
For more details on analytical mathematical methods (including Laplace
transforms) to solve differential equations, see
Boyce, W., and R. DiPrima. (2017). Ordinary Differential Equations and
Boundary Value Problems, 11th ed. New York: Wiley.
Student Exercises
1. Consider the constant-volume stirred-tank heater (Example 3.4), which
had the modeling equation
where the subscript s is used to indicate that a particular variable remains
at its steady-state value. Defining the deviation variables
Show that the equation can be written in the formFor a constant liquid volume of Vs
 = 50 liters, consider volumetric flow
rates of Fs
 = 5, 10, and 20 liters/minute. For liquid water, the other
parameters are ρCp
 = 1 kcal /liter °C
a. Find the process gain and time constant for each of the flowrates.
Assume the initial steady-state has an inlet temperature of 20 deg C and
that the heat input is 0.
b. For a step input change of 10 kW is made, compare the resulting output
temperature changes for the three different steady-state flowrates on a
single plot.
2. A second-order process with one pole at the origin has the transfer
function
Find the output as a function of time, for a unit step input change. Sketch
the expected behavior.
3. Use the initial-value theorem to find the immediate response of a lead-lag
transfer function to a step input change at t = 0.
Also, use the final-value theorem to find the long-term response of a lead￾lag transfer function to a step input change.
4. Consider the state-space modelFind the second-order differential equation in y. Hint: First solve for x1
from the second equation, then take the derivative and substitute into the
first equation.
5. Consider the following state-space model:
which has the following input-output transfer function relationship:
For a unit step change in the input, u(s) = 1/s:
a. Find the output at t = 0 and as t approaches infinity, using the initial and
final value theorems.
b. Find the time domain solution, y(t).
c. Sketch the time domain behavior of y(t).
d. Are your results for i, ii, and iii consistent?
6. As a process engineer with the Complex Pole Corporation, you are
assigned a unit with an exothermic chemical reactor. In order to learn
more about the dynamics of the process, you decide to make a step change
in the input variable, the coolant temperature, from 10°C to 15°C. Assume
that the reactor was initially at a steady state. You obtain the following
plot for the output variable, which is reactor temperature (notice that the
reactor temperature is in °F). Use Figure 3–11 to help answer the
following questions.
a. What is the value of the process gain? (show units)
b. What is the value of τ? (show units)
c. What is the value of ζ? (show units)d. What is the decay ratio?
e. What is the period of oscillation? (show units)
f. Write the second-order transfer function.
Hint: Use Figures 3–11 and 3–12 to assist you.
7. Consider the following response to a step input change in a heat transfer
fluid valve position of +5% at t = 0 minutes. Please estimate the
parameters for a second-order model, with the form (and show the units
with each parameter)
Solve this using the dimensionless plot in Figure 3–11, stating clearly how
you find the value of each parameter.8. Use the initial- and final-value theorems of Laplace transforms to
determine the initial and final values of the process output for a unit step
input change to the following transfer functions:
a.
b.
c.
9. Consider Example 3.4. For an impulse input of 30 kJ, find the value of the
vessel temperature immediately after the impulse input is applied.
10. Consider the following second-order transfer function:For a unit impulse input, find the output response as a function of time.
What is the peak change and when does it occur?
11. People with type 1 diabetes must inject insulin to maintain their blood
glucose levels. In general, the dynamic relationship between a drug
infused and its concentration in the blood is known as pharmacokinetics
(PK). In some studies, the relationship between u, the insulin infusion
rate, and y, the blood plasma insulin concentration, is modeled as a
second-order transfer function with the following form:
where y(s) = gp
(s) u(s). The insulin input has units of U/min (usually
reported as U/hour, but we will use U/min in this analysis; also, U means
international units of insulin), and plasma insulin concentration output has
units of mU/liter.
a. Find the analytical solution for the plasma concentration of insulin, y(t)
(mU/L), for an impulse, P (10 U), of insulin delivered.
b. Find the time that the maximum of plasma insulin concentration occurs,
in terms of the time constant, by differentiating your analytical solution
(part a) with respect to time.
c. Find the maximum plasma insulin concentration analytically.
d. For the parameters kp
 = 50 (mU/L)/U, τ = 30 minutes, and insulin
impulse of P = 10 U of insulin, find the time (from problem b) that the
plasma insulin concentration is a maximum, and the maximum plasma
insulin concentration (from problem c). Also, plot the solution, y(t);
remember to label the x-axis with time units of minutes and the y-axis
with units of mU/liter. Your plot should be similar to the following:e. Use SIMULINK to simulate an insulin infusion of 10 U, delivered over a
10-minute period (so the input is 1 U/min for 10 minutes), and compare
the output with the analytical result (that is, plot y(t) and compare with
the result from problem d on the same plot). Further, observe the effect
of reduced pulse times (say, 2 U/min for 5 minutes and 10 U/min for 1
minute) by comparing these on the same plot.
12. In some physiology studies, the relationship between carbohydrate intake,
u, and the net rate of glucose entering the circulation, y, is modeled as a
second-order transfer function with the following form:
where y(s) = gp
(s) u(s). The carbohydrate input and glucose output are
rates that have units of g/min. The process gain represents the net fraction
of carbohydrate available as glucose, and identical time constants are used
to represent two stages of digestion.
a. Find the analytical solution for the net rate of glucose entering the
circulation, y(t)(g/min), for an impulse, P (grams), of carbohydrate
consumed in a meal.
b. Find the time that the maximum of the rate of glucose entering the
circulation occurs, in terms of the time constant, by differentiating youranalytical solution (part a) with respect to time.
c. Find the maximum rate of glucose entering the circulation analytically.
d. For the parameters kp
 = 0.8 g glucose/g carbohydrate, τ = 40 minutes,
and a meal pulse of P = 100 grams of carbohydrate, find the time (from
problem b) that the rate of glucose entering the circulation is a
maximum, and the maximum rate (from problem c) of glucose entering
the circulation (in grams/minute). Also, plot the solution, y(t);
remember to label the x-axis with time units of minutes and the y-axis
with units of g/min.
e. Use SIMULINK to simulate a meal of 100 grams, consumed over a 20-
minute period (so the input is 5 g/min for 20 minutes), and compare the
output with the analytical result (that is, plot y(t) and compare with the
result from problem d on the same plot). Further, observe the effect of
reduced pulse times (say, 10 g/min for 10 minutes and 20 g/min for 5
minutes) by comparing these on the same plot.
13. Find the dynamic response of an underdamped second-order system to an
impulse input with magnitude P (u(s) = P). The analytical solution is
where
Construct a dimensionless plot similar to Figure 3–12 for the same values
of ζ.
14. Consider a pure integrating process with a model
If a ramp input with slope b is applied, that is, u(t) = bt and u(s) = b/s
2
,
find the output response, y(t). For k = b = 1, plot the output response as a
function of time from t = 1 to t = 5.
15. Consider a first-order process with a modelIf a ramp input with slope b is applied, that is, u(t) = bt and u(s) = b/s
2
,
find the output response, y(t). Is this response any different than a step
input applied to an integrating + first-order process? Why or why not?Chapter 4. Dynamic Behavior:
Complex Systems
The goal of this chapter is to further understand dynamic behavior of higher￾order systems.
• After studying this chapter, the reader should be able to
• Understand the effect of pole and zero values on step responses.
• Understand the effect of time-delay on step responses.
• Perform a Padé approximation for time-delays.
• Convert state-space models to transfer functions.
• Convert transfer function models to state-space models.
The major sections of this chapter are as follows:
4.1 Introduction
4.2 Poles and Zeros
4.3 Lead-Lag Behavior
4.4 Processes with Deadtime
4.5 Padé Approximation for Deadtime
4.6 Converting State-Space Models to Transfer Functions
4.7 Converting Transfer Functions to State-Space Models
4.8 Matlab and Simulink
4.9 Summary
4.1 Introduction
Chapter 3, “Dynamic Behavior,” introduced the use of Laplace transforms and
the notion of process transfer functions. Characteristic responses for low-ordertransfer functions were presented. The goal of this chapter is to present more
complex transfer functions and dynamic behavior, converting between transfer
function state-space models, and using MATLAB functions to analyze and
simulate transfer function models.
4.2 Poles and Zeros
Process transfer functions can be represented in a number of different ways.
The polynomial form is
The values of s that cause the numerator of Equation (4.1) to equal zero are
known as the zeros of the transfer function. The values of s that cause the
denominator of Equation (4.1) to equal zero are known as the poles of the
transfer function. The difference between the number of poles (n) and the
number of zeros (m), n − m, is known as the relative order of the system.
The pole-zero form of the transfer function is written
and complex poles (or zeros) must occur in complex conjugate pairs.
The gain-time constant form is the one that we use most often for control
system design:
where τni is a numerator time constant and τpi is a denominator time constant.
This form is normally used when the roots (poles) of the denominator
polynomial are real.
Example 4.1: Second-Order with Numerator Dynamics
Consider a second-order process with numerator dynamics written in the gain￾time constant formwhich has relative order one. The reader should show that the pole-zero form is
where the parameters are
The gain-time constant form has the following time-domain response to a step
input of magnitude Δu (see Exercise 1):
The reader should show that, if τn
 = τ2
, the response is the same as a first-order
process.
Example 4.2: Effect of Transfer Function Zero
Consider the input-output transfer function
for a number of different values of τn
, from −15 to 20. The unit step responses
are shown in Figure 4–1. Notice that negative numerator time constants
(corresponding to positive zeros) yield a step response that initially decreases
before increasing to the final steady state. This type of response is known as
inverse response and causes challenges for process control systems. Inverse
response can be found, for example, in level problems involving two phases
(steam drums and reboilers) and in chemical reactors. Positive zeros are often
caused by two first-order transfer functions, with gains of opposite sign, acting
in parallel (see Exercise 2).Notice also that a numerator time constant that is greater than the denominator
time constant causes overshoot before settling to the final steady state. Also
notice that the inverse response becomes “deeper” as the numerator zero (−1/
τn
) approaches a value of 0 from the positive side.
Also notice that the poles are negative (left half-plane), indicating a stable
process. Right half-plane (RHP; positive) poles are unstable. Recall that
complex poles will yield an oscillatory response. A pole-zero plot of the
transfer function in Example 4.2 is shown in Figure 4–2, for τn
 = −10 [the pole
locations are (−1/3,0) and (−1/15,0) and the zero location is (1/10,0), with the
coordinates (real,imaginary)]. For this system, there is no imaginary
component, and the poles and zeros lie on the real axis.
Figure 4–1 Step responses of a second-order system with numerator
dynamics
As poles move further to the left, they yield a faster response, and increasing
the magnitude of the imaginary portion makes the response more oscillatory.
This behavior is summarized in Figure 4–3. Recall also that a process with apole at the origin (and none in the RHP) is known as an integrating system;
that is, the system never settles to a steady state when a step input change is
made.
Multiple RHP zeros cause multiple changes in direction; for example, with two
RHP zeros, the step response, initially going in one direction, switches
direction, then switches back to the initial direction.
Figure 4–2 Pole-zero location plot for Example 4.2 (x, poles; o, zero)
Figure 4–3 Effect of pole-zero location on dynamic behavior (x, poles; o,
zero). As poles become more negative, the response is faster. As the
imaginary/real ratio increases, the response becomes more oscillatory.4.3 Lead-Lag Behavior
Lead-lag transfer functions have the same order numerator polynomial as
denominator polynomial. This occurs when the input has a direct effect on the
output variable. In terms of the state-space model [Chapter 3, Equation (3.2)],
this means that D ≠ 0.
Consider a lead-lag transfer function where the numerator and denominator
polynomials are first order:
For a step input of magnitude Δu, the output response is
A dimensionless output can be defined by dividing Equation (4.8) by kpΔu, and
t/τp
 is a natural dimensionless time. The responses to a step input at t = 0 are
shown in Figure 4–4. Notice that there is an immediate response that is equal to
the τn
/τp
 ratio. This can also be found by applying the initial value theorem to
Equation (4.7) for a step input change.
It is rare for processes to exhibit lead-lag behavior, but many controllers exhibit
such behavior.Figure 4–4 Step responses of the lead-lag example
4.4 Processes with Deadtime
Many processes have a delayed response to a process input, either due to
transport lags (such as flow through pipes) or high-order effects. In Section 3.3
we found that a time- delay of θ time units had a transfer function of e
−θ
s
.
First-Order + Deadtime
A first-order process combined with a time-delay has the transfer function
The response of the output to a step input change of Δu at t = 0 is the same as
for a first- order process but with a time shift of the deadtime
Consider the process transfer function, . A unit step input change
at t = 0 yields the response shown in Figure 4–5. We see that the time-delay
simply shifts the first-order response of the output.
First-Order + Integrator + Deadtime
A first-order + integrator + deadtime model, which includes a pole at 0 (the
integrator), isFigure 4–5 Response of a first-order + deadtime process.
A step input would result in a continuous increase in the output due to the pole
at 0 (integrator); thus it is more common to develop these models based on an
impulse input. Recall that the impulse response (u(s) = P) of a process with an
integrator is the same as the step response as an equivalent process without the
integrator.
Thus, we know that 63.2% of the long-term response (y(t → ∞) = kpP) occurs
τp
 time units after the time-delay (θ).
An example application to type 1 diabetes is shown in Example 5.2 in Chapter
5, “Introduction to Feedback Control.”Second-Order + Deadtime
A second-order + deadtime model with distinct real roots has the form
For a step input change, u(s) = Δu/s, the output response (Equation 3.41,
shifted by θ) is
Second-Order + Integrator + Deadtime
A second-order + integrator + deadtime model, which includes a pole at 0 (the
integrator), is
Here, we consider an impulse input of magnitude P, the output is
as noted in Chapter 3, an impulse input to a transfer function with an integrator
has the same result as a step input to the equivalent transfer function without an
integrator. So, the output response to an impulse of magnitude P is
where we see that the long-term response is (y(t → ∞) = kpP).
Example 4.3: Insulin-Glucose Model for Type 1 DiabetesAn individual with type 1 diabetes must inject insulin to reduce their blood
glucose levels or to compensate for the carbohydrates in a meal.
For the following model relating insulin to blood glucose, where the time unit
is minutes
the response of the output (blood glucose concentration, mg/dL) to a bolus
(impulse) of P = 1 unit of insulin is shown in Figure 4–6 (see Exercise 12).
Note that the long-term decrease is 35 mg/dL. If an individual had a blood
glucose concentration of 200 mg/dL and desired to decrease it to 130 mg/dL (a
change of −70 mg/dL), they would need to inject 2 units of insulin.
Figure 4–6 Response of blood glucose concentration to a 1-unit bolus of
insulin at t = 0. The long-term decrease is 35 mg/dL.
See Module 12, “Automated Insulin Delivery,” for a detailed example of
model development and control-system design to regulate the blood glucose of
an individual with type 1 diabetes.
4.5 Padé Approximation for Deadtime
As discussed in the previous section, the transfer function for a pure time delay
is e
−θ
s
, where θ is the time delay. Some control-system design techniquesrequire a rational transfer function; the Padé approximation for deadtime is
often used in this case.
A first-order Padé approximation is
A second-order Padé approximation is
A first-order Taylor series approximation for a time-delay is
Example 4.4 presents an application of the Padé approximations, and Exercise
17 involves the Taylor series approximation.
Example 4.4: Application of the Padé Approximations for
Deadtime
Consider the first-order + deadtime transfer function, where the time delay
dominates the time constant
The first-order Padé approximation yields the transfer function
and the second-order Padé approximation yieldsA comparison of the step responses of g(s), g1
(s), and g2
(s) is shown in Figure
4–7. Notice that the first-order approximation has an inverse response, while
the second-order approximation has a double inverse response. The reader
should find that there is a single positive zero for g1
(s), and there are two
positive, complex-conjugate zeros of the numerator transfer function of g2
(s).
Most ordinary differential equation numerical integrators require pure
differential equations (with no time delays). If you have a system of differential
equations that has time delays, the Padé approximation can be used to convert
them to delay-free differential equations, which can then be numerically
integrated.
One of the many advantages to using Simulink is that time delays are easily
handled so that no approximation is required.
4.6 Converting State-Space Models to
Transfer Functions
A general state-space model can be converted to transfer function form using
the following steps. Starting with the state-space modelFigure 4–7 Comparison of first-order + deadtime response with first- and
second-order Padé approximations for deadtime.
Take the Laplace transform of each term, assuming zero initial conditions:
Solving for x(s), then y(s) (it should be noted that often D = 0),
where G(s) is a transfer function matrix. For example, the transfer function
relating input j and output i is
yi
(s) = gij(s)uj
(s)
or in matrix form (with m inputs and r outputs),Example 4.5: Isothermal CSTR
Consider the isothermal continuously stirred-tank reactor (CSTR) shown in
Example 3.3 and Module 5, “Isothermal Chemical Reactor.” The state-space
model is
The first input (u1
, manipulated) is the dilution rate (F/V), the second input (u2
,
disturbance) is the feed concentration (CAf), and the output is the concentration
of the intermediate component, B. The eigenvalues of A (obtained by solving
det(λI − A) = 0) are −2.4048 and −2.2381 min−1
.
The sequence of steps used to find the transfer function matrix is
and multiplying,Also,
The manipulated input-output process transfer function is
and the disturbance input-output transfer function is
The transfer function poles (−2.2381 and −2.4048) are equal to the eigenvalues
of the A matrix. Notice that g11
(s) is relative order 1, while g12(s) is relative
order 2. Also, the positive zero (1/0.3549) in g11
(s) indicates an inverse
response.
We see that it is straightforward to convert state-space models to transfer
function models. An n-state system results in transfer functions that have a
denominator polynomial that is nth order in s, that is, with n poles. Sometimes
the resulting transfer functions can be factored into lower-order transfer
functions because of pole-zero cancellation (a value of a pole is equal to a
value of a zero). An example of pole-zero cancellation is shown in Exercise 6.4.7 Converting Transfer Functions to State￾Space Models
Thus far we have used transfer function analysis to understand the dynamic
behavior of processes subject to step, impulse, or ramp inputs. Often, it is
desirable to convert the transfer functions to sets of ordinary differential
equations (state-space models) to simulate more complex or sequences of
inputs, or systems under feedback control. For example, while SIMULINK allows
you to specify transfer function blocks, the simulation model is actually solved
as a set of ordinary differential equations; thus, the transfer functions are
converted to state-space models, then integrated numerically.
The mapping from transfer functions to state-space models is not one-to-one;
that is, there are an infinite number of state-space models that will yield the
same input-output transfer function model. Thus, certain realizations are used
to convert from transfer functions to state-space models. One is known as the
controllable canonical form and involves the following procedure.
Given a transfer function with the following form
Often, the numerator polynomial is of lower order than the denominator
polynomial (so, b0
 = 0), and it assumed that a0
 = 1; if not, first divide the
polynomials by a0
. The controllable canonical realization of the state-space
model isTo simulate a unit step response at time 0, a state vector initial condition of all
zeros would be assumed, along with a value of u = 1.
Exercise 15 illustrates the use of the observable and canonical forms.
4.8 Matlab and Simulink
MATLAB and SIMULINK are ideal for analyzing and simulating dynamic
behavior. The Control Toolbox uses LTI (linear, time invariant) objects to
represent dynamic models. These objects can be state-space or transfer
function models; details on how to use them are presented in Module 4,
“MATLAB LTI Models.”
We first present some useful MATLAB functions not covered in other modules.
conv and roots
Often, it is necessary to multiply polynomials in s together. Although the
multiplication (5s + 1)(3s +1) = 15s
2
 + 8s + 1 is quite simple, a more complex
multiplication, such as (2s
2
 + 1.5s + 1)(3s
3
 + 8s
2
 + 4s + 1), could be quite time
consuming. The following conv (convolve) command makes this
straightforward. Also, the roots of the resulting polynomial are easily
calculated using the roots command.>> g = conv([2 1.5 1],[3 8 4 1])
g =
 6.0000 20.5000 23.0000 16.0000 5.5000 1.0000
>> p = roots(g)
p =
 -2.1095
 -0.3750 + 0.5995i
 -0.3750 - 0.5995i
 -0.2786 + 0.2836i
 -0.2786 - 0.2836i
 step and impulse
First, define an object, such as one of the transfer functions in Example 4.2:
>> num = [-10 1]; den = [45 18 1];
>> sysc = tf(num,den)
Transfer function:
 -10 s + 1
 -----------------
45 s^2 + 18 s + 1
Then plot the step and impulse responses (use help step to view other
options):
>> step(sysc)
>> impulse(sysc)
To add a time delay to the model, consider the following implementation of
Example 4.3, which includes the specification of the time vector, rather than
using the default MATLAB result:
kp = 1; taup = 5; theta = 10; tbeg = -5; tend = 50
fodtsys = tf([kp],[taup 1],'IODelay',theta);
time = 0:delt:tend;[yfodt]=step(fodtsys,time);
plot(time,yfodt)
A number of other useful functions, such as pole and tzero, are shown in
Module 4.
ss2tf and tf2ss
The MATLAB function ss2tf is used to convert state-space models to
transfer functions while tf2ss is used to convert transfer function models to
state-space. Details on how to use them are provided in Module 4.
SImulink
It is highly recommended that you interactively work through the initial
sections of Module 2, “Introduction to SIMULINK,” to understand how SIMULINK
can be used to simulate dynamic systems.
4.9 Summary
A goal of this chapter was to develop an understanding of more complex
dynamic process behavior than covered in Chapter 3.
The stability of a process is determined by the eigenvalues of the state-space A
matrix or the poles of the Laplace transfer function: if all real portions are
negative, the system is stable. Complex eigenvalues (poles) correspond to
underdamped (oscillatory) behavior, characterized by damping factors less than
1. Dynamic responses are also affected by the values of the zeros (roots of the
numerator polynomial in s) of a transfer function. If zeros are positive (in the
RHP), step responses have a characteristic inverse response.
A first-order + deadtime model is the most common process representation.
Time delays are represented by an irrational term (e
−θ
s
) in the Laplace domain.
First- and second-order Padé approximations are sometimes used for controller
design; the approximations lead to RHP zeros and inverse response.
State-space models are easily converted to transfer function models. Transfer
function models can be converted to different state-space models, with two
common ones being the controllable and observable canonical forms. The useof LTI objects (see Module 4) allows easy interconversion of models in
MATLAB.
Student Exercises
1. For the following second-order process with numerator dynamics, solve
for the time-domain output response to a step input change of magnitude
Δu at t = 0. Show that your analytical solution results in Equation (4.6).
For the specific problem, kp
 = 1°C/Lpm, τ1
 = 3 min, τ2
 = 15 min, τn
 = 20
min, find the peak temperature and the time that it occurs.
2. Consider an input-output transfer function that mimics two first-order
processes in parallel,
y(s) = gp
 (s)u(s)
where
gp
(s) = g1
(s) + g2
(s)
If the gain of g1
 is positive and the gain of g2
 is negative, find the
conditions (relationship between gains and time constants for the two
transfer functions) that cause a right-half-plane zero (resulting in inverse
response to a step input change) in gp
(s).
3. Match the transfer functions with the responses to a unit step input, shown
in the figure.
i.
ii.
iii.
iv.v.
4. Consider the following state-space model, where the time unit is minutes:
i. Find the transfer function model.
ii. Find the poles and zeros of the transfer function. What type of response
do you expect?
iii. Find (analytically) the time-domain output response to a unit step input
change.
iv. Plot the output response to a unit step input change. Be certain to show
the short-time (first 5 minutes). Are your results consistent with what
you expected in part ii?
5. As a process engineer, you decide to develop a first-order + time delay
model of a process using a step test. The process is initially at steady state,with an input flow rate of 5 gpm and an output of 0.75 mol/L. You make a
step increase of 0.5 gpm at 3:00 p.m. and do not observe any changes until
3:07 p.m. At 3:20 p.m., the value of the output is 0.8 mol/L. You become
distracted and do not have a chance to look at the output variable again,
until you leave for happy hour at a local watering hole at 6:30 p.m. You
note that the output has ceased to change and has achieved a new steady￾state value of 0.85 mol/L.
What are the values of the process parameters, with units? Show your
work.
6. Consider the following state-space model for a biochemical reactor.
Because there are two states (the A matrix is 2 × 2), we expect that the
process transfer function will be second-order. Show that pole-zero
cancellation occurs, resulting in a first-order transfer function. Find the
values of the gain and time constant.
7. Match the transfer functions with the responses to a unit step input, shown
in the figure.
i.
ii.
iii.
iv.
v.8. Convert the following state-space model to a transfer function using ss2tf
Find the poles of the transfer function and the eigenvalues of the A matrix.
What do you observe?
9. Convert the following transfer function model to state-space form using
tf2ss.
Is the resulting state-space model the same as that presented in Example
4.4? Why or why not?
10. a. Convert the following transfer function model to state space:b. Convert the following state-space model to a transfer function using
ss2tf:
Compare and contrast your results from parts (a) and (b).
11. Convert the following transfer function model to state space using
tf2ss.
Find the poles of the transfer function, and the eigenvalues of the A
matrix. What do you observe?
12. Individuals with type 1 diabetes often give themselves a bolus (shot) of
rapid- acting insulin to reduce their blood glucose levels. Assume that an
individual has a steady-state blood glucose level of 150 mg/dL and
administers a 1-unit bolus (impulse) of insulin. Using the following
transfer function model (the time unit is minutes), plot the response of the
blood glucose:
a. Show your simulation results for a 10-hour (600-minute) period.
b. Perform the same simulation study for the following approximate
model (see Example 5.2 from the next chapter).
13. The blood glucose concentration of an individual with type 1 diabetes
can increase substantially due to a meal if they do not provide insulin to
compensate for the meal. The following “disturbance” transfer functionmodel describes the response of blood glucose to meal carbohydrates
(time unit = minutes, gain units = (mg/dL)/(g/min carbs):
Assuming that the initial blood glucose steady state is 120 mg/dL,
simulate the response to a meal carbohydrate impulse of 50 g. Compare
with a pulse of carbohydrates, where 5 g/min is given over a 10-minute
period, for a total of 50 g. Perform your simulation for a 10-hour (600-
minute) period.
14. Use MATLAB tf2ss to convert the following lead-lag transfer function
model to a state-space model:
15. For a transfer function written in the following form,
the observable canonical realization for the state-space model isWrite the following transfer function in both the (i) controllable and (ii)
observable canonical forms:
(iii)Use MATLAB tf2ss to find the resulting state-space model. How does
this compare with (i) and (ii)?
16. Consider the process shown below, where a fraction (ı) of the feed stream
bypasses the mixer (there is no chemical reaction occurring in the mixer
or bypass piping). Assume that the volumetric flow rates and the volume
of the mixing vessel are constant.
a. Develop a component material balance model, where a state is the
concentration of A in the mixing vessel; this will be a linear model.
Write the complete modeling equations in state-space form, where the
output is the concentration of the exit stream after the mixing, the input
is the concentration of A in the feed stream. Notice that the D matrix in
the state-space model will be nonzero; also, because the model is
inherently linear, it does not matter whether deviation or physical
variables are used in the model development.
b. Let the inlet flow rate, F, be 1 cubic meter/min and the fraction
bypassing the mixing vessel be 0.5. The mixing vessel volume is 10
cubic meters, and the feed concentration of A, CAf, is 1 kmol/cubic
meter. What are the steady-state concentrations of A in the mixing
vessel and in the exit stream from the system?
c. For the parameter values in part b, find the numerical values of the
state-space (A,B,C,D) matrices.d. For the state-space model in part c, find the transfer function model.
What type of transfer function model is this?
e. Consider a step change in the feed concentration of A from 1
kmol/cubic meter to 1.5 kmol/cubic meter. Find, analytically, the
concentration of A in the exit stream as a function of time. Plot the
concentration, in physical variables, as a function of time. What do you
observe?
f. What happens as the fraction bypassed is decreased from 0.5 to 0.0?
Compare the step responses for the two cases (bypass = 0.5 and 0) on
the same plot.
17. In Example 4.4 and Figure 4–7, the step responses of a first order +
deadtime (FODT) model were compared with the first- and second-order
approximations for deadtime. A Taylor series approximation for deadtime
is
e
–θs ≈ –θs + 1
so the FODT example model can be approximated as
which is a lead-lag model. Compare and contrast the results for a unit step
change using this approximate model with those shown in Figure 4–7. Use
the initial- and final-value theorems as validation of your results.
18. Consider the noninteracting and interacting tank examples previously
shown in Figure 3–14 and reproduced here:For the parameter values given in student exercises 9 and 10 from Chapter
2, we can find the following state-space models (output 1 = tank height 1,
output 2 = tank height 2):
Noninteracting
Interacting
a. Show that the transfer function relationship between the inlet
volumetric flow rate and tank height 1 for the noninteracting tank
model is first-order,
while that for the interacting tank is
That is, provide the parameter values for each transfer function. Hint: If
you directly convert the state-space model to transfer function form using
the MATLAB function ss2tf, you should find pole-zero cancellation for
the noninteracting tank model.
b. Compare the step responses for input 1 to each of the 2 outputs for both
the noninteracting and interacting tanks. What do you observe?Chapter 5. Empirical and Discrete￾Time Models
The previous three chapters focused on (i) the development of fundamental
models based on material and energy balances and (ii) understanding dynamic
behavior, with an emphasis on linear systems. In this chapter, we discuss the
development of empirical models, that is, developing models based on plant
tests. For continuous control-system design (most of the focus of this text), a
study of Sections 5.1, 5.2, and 5.3 will be sufficient. The discrete models
developed in Sections 5.4 and 5.5 will be useful when model predictive control
(MPC) techniques are presented in Chapter 16, “Model Predictive Control,”
and when digital control is studied in Module 16, “Digital Control.”
After studying this chapter, the reader should be able to
• Develop continuous first-order and integrator + deadtime models from step
tests.
• Estimate parameters for discrete-time autoregressive models based on
input- output data.
• Calculate poles and zeros of discrete-time models.
• Develop finite step and impulse response models.
• Implement a first-order digital filter.
The major sections of this chapter are as follows:
5.1 Introduction
5.2 First-Order + Deadtime
5.3 Integrator + Deadtime
5.4 Other Model Forms
5.5 Discrete-Time Autoregressive Models
5.6 Parameter Estimation5.7 Discrete Step and Impulse Response Models
5.8 Converting Continuous Models to Discrete
5.9 Digital Filtering
5.10 Summary
5.1 Introduction
For many processes, there is not enough time, or it is not worth the effort, to
develop fundamental process models. Particularly if your main interest is
tuning a specific control loop, it is likely that you will develop a transfer
function–based model by performing a plant test. The most common plant test
is to make a step change in the manipulated input (controller output) and
observe the measured process output response. Then a model is developed to
provide the best match between the model output and the observed plant
output.
There are a number of important issues in developing an input-output model.
Foremost is the selection of the proper input and output variables. For many
processes, this selection is not trivial, because a particular manipulated input
may affect a number of measured outputs. Similarly, a measured output may be
affected by a number of manipulated inputs. In this chapter, we assume that the
manipulated input and measured output have already been selected.
It is common to base an input-output model on step responses. In this
procedure, we first bring the process to a consistent and desirable steady-state
operating point, then make a step change in the input variable. An important
decision is the magnitude of the step change to make:
• If the step change in input is too small, the measured output may not
change enough to develop a reliable model. This is particularly true if the
measured output is “noisy.” Clearly, the magnitude of step input must be
enough so that the output signal-to-noise ratio is high enough to obtain a
good model.
• If the step change in the input is too large, the output variable may change
too much and produce product that is off-specification. This is not
desirable because of the severe economic penalty (i.e., the plant loses too
much money while the step test is being performed). Also, if the stepinput change is too large, nonlinear effects may dominate. That is, the
operating condition may become significantly different than the desired
condition.
Clearly there is a trade-off here. The input must be changed enough to observe
a change in the output variable (it must increase above the noise level), yet not
so much that the output variable change is too great (causing an economic
penalty).
As a process engineer conducting a plant step test, you will usually have some
basic knowledge of (or experience with) the input-output pair under
consideration. Observations of the measured output with time will provide an
estimate of the standard deviation or variance of the measurement noise. A
rough estimate of the process gain will enable you to select an input change
magnitude so that the output change is above the noise level. An estimate of
the process gain can often be obtained through steady-state material and energy
balances.
In the following sections, we show how to estimate parameters for some
common simple models. By far the most commonly used model, for control￾system design purposes, is the first-order + time-delay model discussed in the
next section.
5.2 First-Order + Deadtime
Recall that a first-order + deadtime (FODT) process, represented by the
transfer function relationship
has the following output response to a step input change,
where the measured output is in deviation variable form. The three process
parameters can be estimated by performing a single step test on the processinput.
The gain is found as simply the long-term change in process output divided by
the change in process input. Also the time delay is the amount of time, after the
input change, before a significant output response is observed. There are
several easy ways to estimate the time constant for this type of model.
Time for 63.2% Approach to New Steady State
In Equation (5.2), if we set t = τp
 + θ, we find y(t = τp
 + θ) = kpΔu(1 − exp(−1))
= 0.632kpΔu. Now, because kpΔu is simply the long-term change in the process
output, Δy, then t63.2% = τp
 + θ is the amount of time it takes for the output to
make 63.2% of its ultimate change. This method of estimating the time
constant τp
 = t63.2% − θ is illustrated in Figure 5–1.
Figure 5–1 Estimating the time constant from a response to a step input
Example 5.1: Numerical Application of 63.2% Method
Consider the response to a step input change at t = 1 minute, shown in Figure
5–2. The measured output is shown as the noisy solid curve, and a “best fit”
first-order + time-delay model is shown as the dashed curve. Here, we find the
process gain fromFigure 5–2 Example of the step response with measurement noise
The time delay is observed to be 1 minute, and the time constant is the time it
takes (after the time delay) for the output to change by 0.632(−2) = −1.3°C,
that is, the time when y = 23.7°C. In this case,
τp
 = 2.5 minutes
and the process transfer function is
Maximum Slope Method
We can also find (see Exercise 1) that the maximum slope of the output
response to a step input change at t = 0 occurs at t = θ and isThe time constant, then, can be estimated from
A major disadvantage is that the slope estimate may not be accurate if there is
significant measurement noise. This approach is particularly useful for higher￾order responses that are approximated as a first-order + time-delay response.
Two-Point Method for Estimating Time Constant
A technique similar to the first one, but using two points on the output
response, is shown in Figure 5–3. Here, the time required for the process output
to make 28.3% and 63.2% of the long-term change is denoted by t28.3% and
t63.2%, respectively. The time constant and time delay can be estimated from
(see Exercise 2)
τp
 = 1.5(t63.2% – t28.3%)
θ = t63.2% – τpFigure 5–3 Example of the two-point method for estimation of time
constant
Limitation to FODT Models
The primary limitation to using step responses to identify FODT transfer
functions is the amount of time required to assure that the process is
approaching a new steady state. That is, the major limit is the time required to
determine the gain of the process. For large time constant processes, it is often
desirable to use a simpler model that does not require a long step test time. The
integrator + deadtime model shown next will often be good enough for control￾system design.
5.3 Integrator + Deadtime
An integrator + deadtime process has the input-output transfer function
relationshipand the output response to a step input
with the response shown in Figure 5–4. The gain, k, can be found from the
slope by solving
and the time delay is clearly identified by the time required for a change in
output.
Figure 5–4 Estimating parameters for an integrator + time-delay model
from a step input test
Integrator + deadtime models are good for describing the behavior of
“integrating processes,” such as vessel liquid levels or gas drum pressures.
They can provide a good short-term approximation to the step response
behavior of a FODT process. Consider the step response of a distillation
column, which has a fairly long time constant. We see from Figure 5–5a that ittakes roughly 5 to 6 hours to obtain good estimates for a FODT model. The
short time scale (first 30 minutes) response is shown in Figure 5-5b.
The reader should be able to show that the transfer function based on the long
time scale response is approximately
where the gain has units of mol%/(kmol/min) and the time unit is minutes.
Notice that fewer than 20 minutes (the step change is made at t = 10 minutes)
is required to obtain a satisfactory integrator + time-delay model. Clearly, plant
operators (and managers) will be much more willing to tolerate a 20-minute
test than a 4- to 5-hour test. The reader should be able to show that the
estimated transfer function from the initial response in Figure 5–5b is
approximatelyFigure 5–5 Distillation column overhead composition response to a step
change of 0.01 kmol/min in reflux rate at t = 10 minutes. a. Long time
scale. b. Short time scale.
5.4 Other Continuous Models
Second-Order + Deadtime
In Chapter 4, “Empirical and Discrete-Time Models,” we discussed how to
estimate parameters for a second-order underdamped model based on the
overshoot (determines ζ), time to peak (determines τ), and the long-term
change (determines kp
). Similarly, an underdamped second-order model with a
time delay with the form
can be developed by simply time-shifting by the delay (θ). See Exercise 5 for
an example.
First-Order + Integrator + Deadtime
A first-order + integrator + deadtime model, which includes a pole at 0, is
A step input would result in a continuous increase in the output due to the pole
at 0 (integrator); thus, it is more common to develop these models based on an
impulse input. Recall that the impulse response (u(s) = P) of a process with an
integrator is the same as the step response as an equivalent process without the
integrator.
An example application to type 1 diabetes is shown in Example 5.2.Example 5.2: Insulin-Glucose Model for Type 1 Diabetes
Individuals with type 1 diabetes must inject insulin to reduce their blood
glucose levels or to compensate for the carbohydrates in a meal. Further details
are presented in Module 12, “Automated Insulin Delivery.” Here, the
interstitial glucose concentration, measured just beneath the skin using a
continuous glucose monitor (CGM), is initially at 150 mg/dL. A 1-unit bolus
(impulse, P = 1) of insulin is provided at t = 0, resulting in the glucose change
shown as the solid line in Figure 5–6. The dashed line is an approximate fit to
the response. You should show that the approximate model is (the time unit is
minutes)
Figure 5–6 Example diabetes application—the response of blood glucose
(measured using a continuous glucose monitor, CGM) to a 1-unit bolus of
insulin
Indeed, as shown in Module 12, an even better fit can be obtained with a
second-order + integrator + deadtime model.5.5 Discrete-Time Autoregressive Models
Most of the models developed and used in this text are based on continuous
time. In the most general case of fundamental models, these are nonlinear
ordinary differential equations. State-space models consist of sets of linear
ordinary differential equations, where the states and inputs are in deviation
variable form. Transfer functions are used to denote a linear relationship
between inputs and outputs. All of the previous models assume that the
manipulated input and the measured output signals are continuously available.
In practice, manipulated input changes are made at discrete time intervals, and
measured outputs are available at discrete sample times. The physical inputs
and outputs are continuous; only the changes and measurements occur at
discrete times. Because the focus of this book is on controller design based on
continuous models, the topic of discrete models may be skipped on a first
reading. Discrete models are primarily useful for model predictive control
(Chapter 16) and digital control design and analysis (Chapter 8, “Internal
Model Control”).
We cover discrete autoregressive models in this section, parameter estimation
of discrete autoregressive models in Section 5.6, and finite step and impulse
response models in Section 5.7. It should be noted that the MATLAB Control
Toolbox has routines that convert continuous-time models to discrete, and vice
versa. The details of the conversion are beyond the scope of this text but are
summarized in the appendix; read Module 4, “MATLAB LTI Models,” for
explanations on how to use these routines.
Introduction to Autoregressive Models
Discrete autoregressive models assume that an output at the current time step is
a function of the outputs and inputs at previous time steps. The general form is
where k represents the current time step, k − 1 the previous time step, and so
forth. The notation y(k) is used to indicate the value of the output at step k. If
all of the outputs are brought to the left-hand side, Equation (5.5) can be
writtenThis form is primarily used to lead to the notion of discrete input-output
transfer functions, covered next.
Z-Transforms
Similar to the use of Laplace transforms for continuous systems, Z-transforms
are used for discrete systems.
The Z-transform of a discrete variable, y(k), is
The so-called backwards shift operator (z
−1) is represented by
so Z[y(k – 2)] = z
–2y(z), and so forth. Taking the Z-transform of each term in
Equation (5.6), we find
Solving for y(z) yields the discrete transfer function relationship
where the discrete transfer function is
The discrete transfer function is the discrete-time analogy to the continuous￾time transfer function based on the Laplace transform. Similar to continuous
(Laplace) transfer functions, discrete (z-transform) transfer functions can be
written in several forms. Multiplying Equation (5.11) by z
n
/z
n
, we findFor most process systems, there is not an immediate effect of the input on the
output, so b0
 = 0.
Poles/Zeros of Discrete Models
Recall that the stability of a continuous input-output (transfer function) model
is determined by the values of the poles (the roots of the denominator
polynomial in s). If the poles are negative, then the model is stable. Similarly,
the stability of a discrete input-output model is determined by the poles of the
denominator polynomial in z. For a discrete-time model, if all poles have a
magnitude less than 1 (i.e., they are “inside the unit circle”), the model is
stable. If any pole has a magnitude greater than 1, the model is unstable.
The polynomial forms of Equations (5.11) and (5.12) can be factored into gain￾pole-zero form
where zi
 and pi
 are the zeros and poles, respectively.
Example 5.3: Discrete Poles and Stability
Consider the simple first-order model
y(k) = –a1y(k – 1) + b1u(k – 1)
which has the transfer function
The pole is found by solving for the roots of the denominator polynomial. In
this case,
p = –a1To illustrate the importance of pole values, we study the following values for
a1
:
a1
 = 0.5,–0.5,1.5,–1.5
yielding the corresponding pole values
p = –0.5,0.5,–1.5,1.5
Also, realize that the modeling equation can be written
y(k +1) = –a1y(k) + b1u(k)
For simplicity, we assume no input change, so u(k) = 0. Also, let the initial
value of the output be y(0) = 1. The first few values of y(k) for each value of a1
are shown in the following table below.
As expected, when the magnitude of the pole is less than 1.0, the process is
stable; when the magnitude is greater than 1.0, the process is unstable. One
thing that is unusual for this first-order discrete example is that the output can
oscillate even with a constant (in this case, 0) input value. For continuous-time
systems there must be at least two states (the process must be at least second￾order) for oscillation to occur. This is because the condition for oscillation in
continuous-time systems is that the eigenvalues must be complex; for this to
happen, there must be at least two eigenvalues, each complex-conjugates of the
other. Discrete-time systems can oscillate as long as a pole has a negative
value; if the negative pole has a magnitude less than 1, it is a stable oscillation.
Final- and Initial-Values Theorems for Discrete SystemsRecall that the process gain of a continuous system could be determined by
setting s = 0. Similarly, the gain of a discrete-time system can be found by
setting z = 1.
Final-Value Theorem for Discrete-Time Systems
The formal statement of the final-value theorem is (where Δt is the sample
time)
For a discrete-time input-output model
y(z) = gp
(z)u(z)
subject to a unit step input
we find
So, applying the final-value theorem,
Therefore, we can find the long-term behavior of the process output, subject to
a unit step input, simply by setting z = 1 in gp
(z).
Initial-Value Theorem for Discrete-Time Systems
Similarly, the initial-value theorem is
5.6 Parameter EstimationOften, when discrete linear models are developed, they are based on
experimental system responses rather than on converting a continuous model to
a discrete model. The estimation of parameters for discrete dynamic models is
no different from linear regression (least squares) analysis.
The measured inputs and outputs are the independent variables, and the
dependent variables are the outputs. For simplicity, consider the following
model where two previous values of the input and output are used to predict the
next value. This model has four parameters:
For the system of N data points, we can write
Notice that k = 1 is an arbitrary starting point for calculating the output, and
that two previous data points for the output and the input are needed to start the
algorithm. To make it clear that we are performing a model-based prediction of
yk
, we will use the notation to indicate a model prediction:
or, using matrix-vector notation,
whereThe objective is to choose a set of parameters (a1
, a2
, b1
, b2
) to minimize the
square of the residuals (the differences between the model outputs and
measured outputs).
The sum of the squares of the residuals can be written in matrix notation as
where Y is the vector of measured outputs, Y = [y(1)…y(N)]T
.
The solution to this optimization problem is (Ljung, 2010)
Example 5.4: Process Identification
Although the response to a step input has often been used for process
identification, here we apply a pseudorandom binary sequence of inputs (the
input changes randomly between two values) to estimate parameters in a
discrete-time model. The input and output responses are shown in Figure 5–7;
the open circles represent the measured outputs obtained with a sample time of
0.25 minutes. The variables are in deviation form.Figure 5–7 Output response to a pseudorandom binary input sequence.
Open circles represent output data obtained with a sample time of 0.25
minutes.
The output and input data as a function of the discrete-time index are as
follows:The Φ (input-output data) matrix, Θ parameter vector, and discrete transfer
functions are shown here.It should be noted that the discrete transfer function can be converted to a
continuous transfer function using d2c to find
which is virtually identical to the continuous transfer function used to generate
the original data.
This example illustrated the response of a perfectly modeled system (no
measurement noise). The approach can also be applied to a system with
arbitrary inputs and with noisy measurements. See Exercise 8 for the same
process, with output data corrupted by measurement noise. To verify model
parameter estimates, it is common to use a portion of experimental data to
estimate parameters, then another portion of the data in simulation mode to see
how well the model-predicted outputs match the data.
The data was analyzed in a batchwise fashion, that is, all of the data were
collected before the parameter estimation was performed. For online (real￾time) estimation and control, we would prefer to re-estimate parameters each
time we obtain a new data point. This can be done by using a “moving
horizon” of past data points (each time a new data point is collected, the oldest
one is thrown out) or by using recursive identification techniques. Recursive
techniques are commonly applied in adaptive control, where the model is
updated at each time step and a control calculation is performed based on the
updated model.
5.7 Discrete Step and Impulse Response
Models
The common model predictive control techniques presented in Chapter 16 are
based on step or impulse responses.
Step Response Models
Finite step response (FSR) models are obtained by making a unit step input
change to a process operating at steady state. The model coefficients are simply
the output values at each time step, as shown in Figure 5–8. Here, si
 representsthe step response coefficient for the ith sample time after the unit step input
change. If a nonunit step change is made, the output is scaled accordingly.
The step response model is the vector of step response coefficients,
where the model length n is long enough so that the coefficient values are
relatively constant (i.e., the process is close to a new steady state).
Impulse Response Models
Another common form of model is known as a finite impulse response (FIR).
Here, a unit pulse is applied to the manipulated input, and the model
coefficients are simply the values of the outputs at each time step after the
pulse input is applied. As shown in Figure 5–9, hi
 represents the ith impulse
response coefficient.Figure 5–8 Illustration of step response parameter identification
There is a direct relationship between step and impulse response model
The impulse response coefficients are simply the changes in the step response
coefficient at each time step. Similarly, step response coefficients can be found
from impulse responses; a step response coefficient is the sum of the impulse
response coefficients to that point.
Step response models allow the outputs to be predicted from the input values
using the following relationshipFigure 5–9 Illustration of step response parameter identification
Similarly, impulse response models enable the output to be predicted from the
inputs usingNote that if there is a time delay, the first few coefficients of the step and
impulse response models will be 0.
5.8 Converting Continuous Models to
Discrete
Often, it is desirable to convert a continuous-time model to discrete time. Here,
we show by way of example finite difference and analytical solutions for first￾order and first-order + time-delay processes. It is recommended that you use
the MATLAB c2d functions outlined in Module 4 for more complex examples.
First-Order Process
For example, a first-order continuous-time model of the form
can be converted to a discrete-time model assuming a forward finite differences
approximation to the derivative
For simplicity, we use the indices k and k + 1 to represent sample steps
associated with time step kΔt and (k + 1)Δt, respectively, and assume a constant
sample time, Δt, and that the input is held constant between sample times k and
k + 1.Solving for y(k + 1),
which can be written as
where
The reader should show, using Laplace transforms, that the analytical solution
to (5.27) is
which again is the form of (5.28), with
The reader should show (see Exercise 13) that the finite difference
approximation is satisfactory as long as the sample time is approximately 1/10
of the time constant.
FODT Process
A FODT model has a continuous-time form ofAssuming that the time-delay (θ) is an integer multiple of the same time, that
is, , the discrete-time model is
The discrete transfer function (z-transform) of the input-output in Equation
5.28 is
while the additional time-delay of d time units in Equation 5.33 results in
Here, we have used simple first-order and first-order + deadtime examples. For
higher-order systems, it is easier to use MATLAB functions, such as c2d, to
directly convert from continuous to discrete time. These MATLAB functions are
summarized in Module 4.
5.9 Digital Filtering
Often, measurements are corrupted by noise and thus have a random
component (see Figure 5–2, for example). It is desirable to filter these
measurements, particularly if they are used in a feedback control system. A
first-order filter has the form
where yf
 represents the filtered measurement and y represents the actual (noisy)
measurement. Alpha is a tuning parameter that reduces the effect of the
measurement noise. The reader should show that this first-order filter can be
derived using a backwards finite differences approximation to the derivative of
a first-order differential equation (see Exercise 10).where τf
 is the filter-tuning parameter, and ı is a function of the sample time
(difference between two time steps) Δt and τf
where 0 < α ≤ 1. If α = 1 (τF
 = 0), there is no filtering (the measurement is used
directly), and as 1 approaches 0 (τF ≫ Δt), the measurement is not used.
Notice that the z-transform of Equation (5.36) is
where the transfer function is
Example 5.5: First-Order Filter
Assume an actual temperature of 0°C, which changes to 5°C at t = 50 minutes.
A noisy measurement (solid curve) with a standard deviation of 1°C is shown
in Figure 5–10, along with filtered estimates (dashed curve) using ı = 0.25.
A smaller value of α leads to more filtering, with the trade-off that a longer lag
occurs after the transition at 50 minutes. The reader is encouraged to work
Exercise 12 to study the effect of changes in the filter constant.Figure 5–10 Comparison of noisy and filtered measurements
Contrast: First-Order Lag vs. First-Order Filter
Consider the first-order filter of the form
if we define af
 = α – 1, then Equation (5.36) can be written as
which has the discrete transfer function
In Section 5.7, we showed how a first-order continuous process, which is often
called a first-order “lag,” could be discretized. If the gain is 1, we can further
show that the discrete relationship in Equation (5.28) has the formIf we let the input be y (the noisy measurement) and the output be yf
 (the
filtered measurement), then Equation (5.43) can be written (by also shifting the
time step by 1)
which has the discrete transfer function
Notice that the implementation of a filter in the form of Equation (5.44) uses
the previous measurement (step k − 1), in contrast to Equation (5.41), which
uses the current measurement (step k). If implemented in a feedback control
loop, the additional one-step delay in Equation (5.44) can lead to degraded
performance and possible instability compared to the implementation in
Equation (5.41). Thus, the filter form on Equation (5.41) is preferred over
Equation (5.44).
Smoothing vs. Filtering
The purpose of filtering is to provide a real-time value. This should be
contrasted with smoothing, which is typically done after data has been
collected. When smoothing data, measurements beyond the point of interest
can be used. An example of a three-point smoothing algorithm is
which clearly cannot be done in real -time, because y(k + 1) would not be
available.
5.10 Summary
The first sections of this chapter illustrated the development of first-order +
time-delay and integrator + time-delay models based on step input changes.
These models are sufficient for many simplified controller designs. Higher￾order models can easily be developed by “fitting” (adjusting) parameters toobtain a best match between model predictions and the actual measured
process output responses.
Linear regression (least squares) techniques can be used to estimate parameters
in discrete-time autoregressive models. Usually, parameters are estimated on
the basis of a subset (training) of the available experimental data. The model
parameters are then verified by applying the model to a different subset
(validation) of the data. If the model predictions match the measured outputs
reasonably well, then the discrete model is usually acceptable for discrete
control-system design and analysis.
The stability of a discrete transfer function model is determined from the
values of the poles of the denominator polynomial. If the poles are less than 1
in magnitude, the discrete model is stable.
Chapter 8 covers classical discrete controller design procedures. Discrete step
and impulse response models are often used in model predictive control
(Chapter 16).
Digital filtering is used to reduce the effect of measurement noise in discrete
feedback control systems. The identical technique, known as the exponential
moving weighted average (EMWA) filter, is often used when applying
statistical process control techniques.
References
An overview of system identification techniques is provided in Ljung, L.
(2010). “System Identification.” In W.S. Levine (ed.), The Control Handbook
(2nd ed., Vol. III, Section IX). Boca Raton, FL: CRC Press.
Student Exercises
1. Consider a first-order + time-delay transfer function
which has the following response to a step input change at t = 0:Show that the maximum rate of change (slope) of the output occurs at t =
θ.
Also, find this slope.
2. Consider the response of a first-order + time-delay transfer function to a
step input change. Find the value of the output (y) at the following times,
as a fraction of the long-term output change
Find the time constant and time delay based on the values of t1
 and t2
.
3. Consider the following step response. Estimate parameters for a first-order
+ time-delay model using the three techniques shown in Section 5.3.
Include the units for each parameter.4. Consider the following step response. Estimate the parameters for an
integrator + time-delay model, including the units for each parameter.
5. Consider the following response to a step input change in the coolant flow
rate from 50 gpm to 60 gpm at t = 0 minutes. Estimate the parameters for
a second- order + time-delay model, with the form (and show the units
with each parameter)6. Consider the following continuous state space model:
a. Find the continuous transfer function model (do this analytically).
b. For a sample time of 0.25, find the discrete state-space and transfer
function models (use MATLAB; see Module 4).
c. Compare the step responses of the continuous and discrete models (use
MATLAB). What do you observe?
7. Consider the discrete-time model
y(k) = 1.425y(k – 1) – 0.4966y(k – 2) + 0.1194u(k – 1) + 0.09456u(k – 2)Using z-transforms, find the corresponding model represented as
Equations (5.11), (5.12), and (5.13). Discuss the stability of the process.
8. Consider a unit step input change made at k = 0, resulting in the output
response shown in the following plot and table.
Estimate the parameters for a discrete linear model with the form
Compare the step response of the estimated model with the data. Use
MATLAB to convert the discrete model to a continuous model. Compare
the step responses of the discrete and continuous models.
9. Consider Example 5.4 with measurement noise on the output variable, as
shown. Estimate the discrete model parameters based on this data. How
do the parameters compare with those of Example 5.4? Compare the step
responses of the two models.The input/output data are
10. Consider the continuous state space model (where the time unit is
minutes)a. Find the eigenvalues and the transfer function (use MATLAB for these
calculations, if desired).
b. Using a sample time of 3 minutes, find the discrete state-space model
and the discrete transfer function. Refer to the appendix for the form of
the discrete state-space model and Module 4 to understand how to use
MATLAB for these computations.
11. Consider a continuous-time first-order filter described by the following
differential equation.
where y is the noisy measured value and yf
 is the filtered value. Show that
a backwards finite-difference approximation to the derivative, with a time
difference Δt, results in the discrete-time filter of the form
yf
(k) = (1 – ∞)yf
 (k – 1) + αy(k)
where .
12. Consider the filter design performed in Example 5.5, which produced the
following results for a temperature sensor with noise (s.d. = 1°C) and with
filter coefficients of 0.25 (light filtering) and 0.05 (heavy filtering).
a. Add an additional curve for a different filter coefficient of 0.15. What
do you observe?
b. For the sample time of 1 minute, what are the values of τF
 (remember
to use time units) for the three coefficient values (0.25, 0.15, 0.05)?
13. The general form of a state-space model converted to discrete form is
shown in the appendix. For a continuous first-order process modeluse the procedure in the appendix to
a. Find the discrete time model in the form of
y(k + 1) = –ay(k) + bu(k)
that is, find a and b as a function of the continuous time parameters and
the sample time.
b. Find the z-transform for the discrete process model.
14. Consider the continuous first-order example
The finite differences approximation and exact solutions both yielded
discrete models of the form
y(k + 1) = –ay(k) + bu(k)where and for the finite-differences
approximation and and for the exact
solution.For kp
 = 1 and τp
 = 10 minutes, with a sample time Δt of 1
minute, compare
a. The coefficients a and b for the approximate and exact solutions.
b. The step responses for the approximate and exact solutions
Appendix: Discretization
Discrete-time models can be obtained directly from continuous time models, as
summarized in this appendix. The MATLAB Control Toolbox can be used for
these conversions, as shown in Module 4.
Consider a continuous state-space model of the following form (where we have
assumed D = 0):
A similar discrete state-space model has the following form:
Assuming that the sample time is Δt and that the input u is held constant
between time tk
 and tk+1, (A5.1) can be integrated to yield
which has the solution (although the matrix exponential is not an intuitive
concept, the computation is readily performed by MATLAB)
x(k + 1) = e
AΔt x(k) + (e
AΔt
 – I)A
–1Bu(k)
This solution is usually written in the formx(k + 1) = Φx(k) + Γu(k)
where
Φ = e
AΔt
Γ = (Φ – I)A
–1B
The stability of this discrete state-space model is determined by the
eigenvalues of Φ, which must have a magnitude less than 1.0 for stability.
The discrete transfer function is similar to the continuous-time case:
G(z) = C(zI – Φ)–1ΓChapter 6. Introduction to
Feedback Control [This content is
currently in development.]
This content is currently in development.Chapter 7. Model-Based Control
In this chapter, we provide an introduction to model-based techniques, using
the direct synthesis approach, followed by a more general technique known as
internal model control (IMC). We then show that IMC can often be rearranged
to be equivalent to a proportional-integral-derivative (PID) controller.
After studying this chapter, the reader should be able to
• Derive controllers based on a process model and desired closed-loop
response.
• Factor a model into invertible and non-invertible elements.
• Form an internal model controller from the invertible part of the model and
a low-order transfer function.
• Design and implement IMC-based PID.
The major sections of this chapter are as follows:
7.1 Introduction
7.2 Direct Synthesis
7.3 Internal Model Control (IMC)
7.4 IMC-based PID
7.5 IMC-based PID for Time-delay Processes
7.6 IMC-based PID for Unstable Processes
7.7 SummaryFigure 7–1 Feedback control block diagram.
7.1 Introduction
Consider the standard feedback block diagram shown in Figure 7–1, where
disturbance inputs have been neglected. Transfer functions (and block
diagrams) are used to analyze the behavior of control systems, because the
algebraic expressions are easy to manipulate. We noted in Chapter 6,
“Introduction to Feedback Control,” that the closed-loop transfer function
could be used to determine, for example, the range of controller gains that
assure closed-loop stability.
7.2 Direct Synthesis
Consider the standard feedback block diagram shown in Figure 7–1. Recall that
we could determine the performance or stability of the closed-loop system
from the closed-loop transfer function
In the direct synthesis procedure, we select a desired closed-loop response,
gCL(s), and, based on the known process, gp
(s), find the controller gc
(s) that
will yield this response. Solving Equation (7.1) for gc
(s), we obtain
By now, you should be able to perform block diagram manipulations to find the
relationship between any external signal [such as a setpoint change, r(s)] and
any other signal on the control block diagram. For example, it is important to
analyze the manipulated variable action required for a setpoint change to make
certain that it is not too rapid or that it does not violate constraints. From Figure
7–1, we can easily derive the effect of the setpoint change on the manipulated
variable action,The direct synthesis procedure then consists of specifying the desired closed￾loop transfer function (first-order response, second-order underdamped, etc.),
gCL(s), using Equation (7.2) to find the feedback controller, and considering the
manipulated variable response (usually tested by simulation).
The question is: How do we specify the desired closed-loop response?
It turns out that we are not limited by the desired closed-loop response if the
system is minimum phase (the process does not have right half-plane [RHP]
zeros or time delays— the terminology becomes clear in Chapter 9,
“Frequency-Response Analysis”). In the following section, we present the
direct synthesis method for minimum-phase systems and cover non-minimum￾phase using the more general IMC procedure in Section 7.3.
Direct Synthesis for Minimum-Phase Processes
It seems natural to specify a desired closed-loop response that is first order,
given that we understand the characteristics of a first-order response.
For a specified first-order response, there is only one tuning parameter, λ,
because we desire a closed-loop gain of 1 (we want the process output to equal
the setpoint as the closed-loop system goes to a new steady state); small values
of λ result in fast responses, while large values result in slow responses. One
could also argue for a desired closed-loop response that is second order and
underdamped, which would lead to specifying two parameters.
Example 7.1: Direct Synthesis for a First-Order Process
Consider a first-order process
Assume that a first-order closed-loop response is specified. If we desire a fast
closed-loop response, we make λ small; for a slower (more “robust”) response,we make λ large. Solving for gc
(s) from Equation (7.2), we find
which can be written (by multiplying by τp
/τp
)
Recall that the form of a proportional-integral (PI) controller is
so that our direct synthesis controller for a first-order process is simply a PI
controller, where
Notice that there was only one tuning parameter for this direct synthesis
example. The desired closed-loop time constant, λ, was the only adjustable
parameter. Given the first-order transfer function parameters (kp
 and τp
) and the
desired closed-loop time constant (λ), we found that the direct synthesis
controller was PI but that we only needed to adjust one PI parameter (kc
). This
is a nice result, because once we find the process time constant (τp
), we can set
the integral time (τ1
) equal to the time constant, and tune kc
 online until we
achieve a desired response. Tuning a single controller parameter is much easier
than tuning two or three.
The direct synthesis procedure applied to non-minimum-phase processes (those
with a time-delay or RHP zero) will result in a non-realizable or unstable
controller unless the desired closed-loop response is reformulated. For these
types of problems, IMC results in a more transparent procedure.7.3 Internal Model Control
The IMC structure is shown in Figure 7–2. The distinguishing characteristic of
this structure is the process model, which is in parallel with the actual process
(plant). Note that (~) is generally used to represent signals associated with the
model. The dashed lines in Figure 7–2 illustrates that both the controller and
model exist as computer computations; it is convenient to treat them separately
for design and analysis.
Following is list of transfer function variables shown in the IMC block
diagram:
Notice that the feedback signal is
The signal to the controller is then
The following closed-loop relationship can be easily derived:Consider now some limiting cases.
Perfect Model, No Disturbances
If the model is perfect and there are no disturbances (d(s) = 0),
then the feedback signal is zero. The relationship between r(s) and y(s) is then
Figure 7–2 The internal model control (IMC) strategy. The dotted line
indicates the calculations performed by the model-based controller.
Why is this nice? If the controller, q(s), is stable and the process, gp
(s), is
stable, then the closed-loop system is stable. Recall that a standard feedback
controller could actually destabilize a process if we did not correctly choose the
tuning parameters. An analysis of the poles of the closed-loop transfer function
must be performed to determine the stability of standard feedback controllers.
Perfect Model, Disturbance Effect
If the model is perfect and there is a disturbance, then the
feedback signal is [from Equation (7.7)]
This illustrates that feedback is needed because of unmeasured disturbances
entering a process.Model Uncertainty, No Disturbances
If there are no disturbances [d(s) = 0] but there is model uncertainty 
, which is always the case in practice, then the feedback signal
is [from Equation (7.7)]
This illustrates that feedback is needed because of model uncertainty.
The primary disadvantage of IMC is that it does not guarantee stability of
open-loop unstable systems. The procedure detailed in Section 7.6 handles
these systems.
The IMC Design Procedure
The IMC design procedure consists of the following four steps.
1. Factor the process model into invertible [“good stuff,” ] and
noninvertible [“bad stuff”—time delays and RHP zeros, ] elements:
This factorization is performed so that the resulting controller will be
stable. Often, the factorization uses an all-pass transfer function (–βs + 1 /
βs + 1), which is introduced in Example 7.2.
2. Form the idealized IMC controller. The ideal internal model controller is
the inverse of the invertible portion of the process model (good stuff).
3. Add a filter to make the controller proper. A transfer function is proper if
the order of the denominator polynomial is at least as high as the
numerator polynomial.
If it is most desirable to track step setpoint changes, the filter transfer
function usually has the formand n is chosen to make the controller proper (or semiproper, where the
orders of the numerator and denominator polynomials are the same). If it
is most desirable to track ramp setpoint changes (often used for batch
reactors or transition control problems), then
4. Adjust the filter-tuning parameter to vary the speed of response of the
closed-loop system. If λ is small, the closed loop system is fast; if λ is
large, the closed-loop system is more robust (insensitive to model error).
Note that the factorization performed in Equation (7.10) is used only for
controller design. The process model that is simulated in parallel with the
process is still the full model, .
If the process model is perfect, then we can easily calculate what the output
response to a setpoint change will be. Substituting Equation (7.12) into
Equation (7.9), we find
If the model is perfect, that is, , then
and we can substitute Equation (7.15) into Equation (7.14) to find
which yields
Equation (7.17) indicates that the bad stuff must appear in the output response.
That is, if the open-loop process has an RHP zero (inverse response), then the
closed-loop system must exhibit inverse response. Also, if the process hasdeadtime, then deadtime must appear in the closed-loop response. Please
remember that Equation (7.17) holds only for the case of a perfect model.
The design procedure for a complex process, with a time-delay and right-half￾plane zero, is shown in the next example.
Example 7.2: Second-Order with an RHP Zero and Time Delay
Consider the following transfer function, which has an RHP zero at 1/9 min−1
and a time delay of 4 minutes:
A straightforward factorization into the bad stuff (time delay and RHP zero)
and good stuff would be
To form an all-pass, however, we use the following for the bad stuff:
that is, a pole is placed at the “reflection” of the RHP zero. Because the overall
transfer function must remain the same, then the numerator of the good stuff is
similarly modified:
Using the all-pass factorization, the model is then expressed as
Forming the idealized controller by inverting the good stuff,and adding the filter to make the controller semiproper (orders of numerator
and denominator are equal),
For a perfect model, the output response is
and the manipulated variable response is
The output and manipulated responses for a step setpoint change of 10% is
shown in Figure 7–3a for two values of λ; it is assumed that the steady-state
input and output are 50%. Notice that as λ is decreased, the inverse response
becomes more pronounced—the inverse response cannot be removed by a
stable controller, and the time-delay cannot be removed by any physically
realizable controller. Indeed, there is an inherent feedback performance
limitation due to the time-delay and inverse response—even speeding up the
controller action (by reducing λ) will not get the output to the setpoint in less
than roughly 40 minutes. In Figure 7–-3b, we show the effect of model
parameter uncertainty; here, the actual plant gain is 30% higher (1.3), and time
delay is 25% longer (5 min) than the model used by the controller. It is clear
that the larger value of λ has more desirable performance when there is plant￾model mismatch.
It should be noted that the initial-value theorem can be used to determine the
manipulated variable action that occurs immediately after a step setpoint
change. The reader should show (see Exercise 10) that a λ value of 1 minute
will cause the manipulated input to saturate at 100%. Exercise 10 further
explores the effect of model uncertainty; that is, the plant dynamics are
different than the model used by the controller.
7.4 IMC-Based PIDIn this section, we derive the standard feedback equivalence to IMC by using
block-diagram manipulation and find that this often results in a PID controller.
Begin with the IMC structure shown in Figure 7–2; the point of comparison
between the model and process output can be moved, as shown in Figure 7–4.
Figure 7–4 can be rearranged to the form of Figure 7–5. Notice that r(s) − y(s)
is simply the error term, so the block enclosed by the dashed lines represents a
classic feedback controller. The arrangement shown inside the dotted line of
Figure 7–5 is shown in Figure 7–6, which can be recognized as being
equivalent to the classic feedback controller transfer function, gc
(s). That is, the
standard feedback controller that is equivalent to IMC isFigure 7–3 Input and output responses as a function of λ. The steady state
is assumed to be 50% for both the manipulated input and measured
output. (a) Perfect model case. (b) With parameter uncertainty (plant gain
30% higher and deadtime 25% longer than the model used by the
controller).
Figure 7–4 Cosmetic change in IMC structure.
Figure 7–5 Rearrangement of IMC structure. The feedback controller,
gc
(s) (in dashed lines), contains both the internal model, , and the
internal model controller, q(s).Figure 7–6 Inner loop of the rearranged IMC structure shown in Figure
7–5.
Figure 7–7 Equivalent block to Figure 7–6.
Now, we can use the IMC design procedure to help us design a standard
feedback controller. The standard feedback controller is a function of the
internal model, , and internal model controller, q(s), as shown in Equation
(7.18).
We refer to Equation (7.18) as the IMC-based PID relationship because the
form of gc
(s) is often that of a PID controller. The IMC-based PID procedure is
similar to the IMC procedure discussed in Chapter 6, with some additional
steps. One major difference is that, many times, the IMC-based procedure will
not require that the controller be proper. Also, the process deadtime will be
approximated using the Padé procedure in order to arrive at an equivalent PID￾type controller. Because of the Padé approximation for dead-time, the IMC￾based PID controller may not perform as well as IMC for processes with
significant time delays.
The IMC-Based PID Control Design Procedure
The following steps are used in the IMC-based PID control system design.
1. Find the IMC controller transfer function, q(s), which includes a filter,
f(s), to make q(s) semiproper or to give it derivative action [the order of
the numerator of q(s) is one order greater than the denominator of q(s)].
Notice that this is a major difference from the IMC procedure. Here, we
may allow q(s) to be improper in order to find an equivalent PIDcontroller. For integrating or unstable processes, or for better disturbance
rejection, a filter with the following form is often used
2. Find the equivalent standard feedback controller using the transformation
[Equation (7.18), rewritten here for convenience]
Write this transformation in the form of a ratio between two polynomials.
3. Show this in PID form and find kc
, τI
, τD. Sometimes this procedure
results in an ideal PID controller cascaded with a first-order filter, with a
filter time constant (τF
):
4. Perform closed-loop simulations for both the perfect model case and cases
with model mismatch. Adjust λ considering a trade-off between
performance and robustness (sensitivity to model error). Initial values for
λ are often around one third to one half the dominant time constant.
The IMC-based PID design procedure is illustrated by way of application to a
second-order process; the reader should confirm that a first-order process
results in a PI controller, identically to the direct synthesis procedure shown in
Example 7.1 (see Table 7.1, row A). For clarity in the following example, we
drop the (~) notation on all of the process model parameters.
Example 7.3: IMC-Based PID Design for a Second-Order Process
Find the PID equivalent to IMC for a second-order process
Step 1. Find the IMC controller transfer function, q(s)—here we allow q(s) to
be improper because we wish to end up with an ideal PID controller.Step 2. Find the equivalent standard feedback controller using the
transformation
Recall that the transfer function for an ideal PID controller is
Step 3. Rearrange Equation (7.21) to fit the form of Equation (7.22) to find
how the model parameters and λ are related to the PID controller parameters.
Multiplying Equation (7.21) by (τ1
 + τ2
)/(τ1
 + τ2
), we find
Equating terms in Equations (7.21) and (7.23), we find the following
relationships:
which is shown as row C in Table 7–1.
The IMC-based PID controllers for first- and second-order processes, as
designed here, have good setpoint tracking characteristics. Although setpoint
tracking may be quite good, disturbance rejection can be poor, particularly for
input disturbances. Next, we apply the IMC-based PID procedure to develop
good disturbance rejection.Focus on Disturbance Rejection
For improved disturbance rejection, we use an IMC filter with the form
where γ is selected to achieve good disturbance rejection. In practice, it is
selected to cancel a slow disturbance time constant. Consider the closed-loop
transfer function for disturbance rejection in the case of a perfect model (see
Equation 7.8):
The internal model controller, using the new filter form, is
so the output response to a disturbance, in the limit of a perfect model, is
For a first-order process and an input disturbance (assuming the disturbance
and process models are identical), we can find that the internal model
controller
using the procedure in Equation (7.26), and selecting γ to cancel the process
time constant, results in a numerator filter term:The reader should show that the IMC-based PID procedure leads to a PI
controller with the parameter values
as shown as row B in Table 7-1, with the requirement that λ < 2τp
.
Integrating Processes
For integrating processes, a filter with the following form is used [see Equation
(7.13b)]:
The reader should be able to derive the controllers shown in elements I and K
of Table 7–1.
Table 7–1 Ideal PID Tuning Parameters for Open-Loop Stable and
Integrating ProcessesaSummary for Delay-Free Processes
The results for the previous examples are shown in Table 7–1. To develop a
more complete understanding of this procedure, the reader should derive the
parameters for some of the other relationships shown in Table 7–1. The reader
should also note that the same results would be obtained using the direct
synthesis approach if the proper desired closed-loop transfer function is
specified. The proper desired closed-loop transfer function appears clearly in
the IMC procedure.
Notice that Table 7–1 is for process transfer functions that do not have a time
delay. The following section develops PID tuning relationships for a first-order
+ time-delay process.
7.5 IMC-Based PID Design for Processes
with a Time Delay
To arrive at a PID equivalent form for processes with a time delay, we must
make some approximation to the deadtime. (Please note that we do not use an
approximation for dead-time when implementing the “pure” IMC strategy
developed in Section 7.3. We are doing this only for the IMC-based PID
procedure presented in this chapter; this is done only to yield a PID-type
controller.) We use either a first-order Padé approximation for deadtime or
neglect deadtime entirely and use the first-order transfer function results.
First-Order + Deadtime
Because first-order + deadtime is the most common representation of chemical
process dynamics, the PID equivalent form developed here is useful for a large
number of process control loops. We develop the procedure by way of
example.
Example 7.4: IMC-Based PID Design for a First-Order +
Deadtime Process
Find the PID controller that approximates IMC for a first-order + time-delay
process:Step 1. Use a first-order Padé approximation for deadtime 
.
Step 2. Factor out the noninvertible elements (this time, do not make the “bad
stuff” all-pass):
Step 3. Form the idealized controller,
Step 4. Add the filter—this time we do not make q(s) proper because a PID
controller will not result. We use the derivative option and allow the numerator
of q(s) to be one order higher than the denominator (NOTE: This is done only
so that we will obtain an ideal PID controller).
Now, find the PID equivalent. Recall that, from Equation (7.18),
We can expand the numerator term to findWe can multiply by (τp
 + 0.5θ)/(τp
 + 0.5θ) to find the PID parameters
as shown in row B of Table 7–2.
The IMC-based PID controller design procedure results in a PID controller
when the process is first-order + deadtime. Remember that a Padé
approximation for deadtime was used in this development, meaning that the
filter factor (λ) cannot be made arbitrarily small; therefore, there will be
performance limitations to the IMC-based PID strategy that do not occur in the
IMC strategy. Rivera et al. (1986) recommend that λ > 0.8θ because of the
model uncertainty due to the Padé approximation.
In Example 7.4, the all-pass formulation was not used. The reader should show
that the use of an all-pass in the factorization will lead to a PID controller in
series with a first-order lag. The parameters are shown as row A in Table 7–2.
Morari and Zafiriou (1989) recommend λ > 0.25θ for the PID + lag
formulation. The third and fourth entries neglect the time delay in forming the
PI controller.
Summary of PI(D) Control of First-Order + Time-Delay Processes
Different assumptions are used to derive the PI and PID controllers shown in
Table 7–2. A zeroth-order Padé approximation leads to a PI controller, while a
first-order Padé approximation leads to PID + lag (when an all-pass
factorization is used) and PID (when the all-pass factorization is not used)
controllers. Generally, the PID + lag controller will be easier to tune for
robustness and will certainly be less sensitive to noise than the PID controller.
The PID + filter performance is almost identical to the pure IMC. This shows
that the powerful IMC framework can be used to design PID-type controllers
that can be implemented in industrial processes using existing (PID) control
equipment.
Integrator + DeadtimeFor processes where the time constant is dominant, the step response behavior
can be approximated as integrator + deadtime, as characterized by the
following transfer function.
Here, assume that a Taylor series approximation for deadtime is used. Also, the
special filter form for integrating systems is used.
Using the IMC-based PID procedure, the reader should show that a PI
controller results, with the following parameters:
as shown in row E of Table 7–2. Recall from Chapter 5, “Empirical and
Discrete-Time Models,” that an integrator + deadtime model could
approximate the short timescale behavior of a first-order + deadtime process.
Thus, the approximate model of Equation (7.30), yielding the IMC-based PI
parameters of Equation (7.31), may yield good closed-loop performance,
particularly for disturbance rejection.
Gain + Deadtime
For processes where the time delay is dominant, the step response behavior can
be approximated as gain + deadtime, as characterized by the following transfer
function:
Using a second-order Padé approximation for the time delay,The reader should find that a PID + filter controller results, with
with the condition that .
This is shown as row H in Table 7–2.
First-Order + Integrator + Deadtime
A first-order + integrator + deadtime model, which includes a pole at 0 (the
integrator), is
Here, we use the IMC-based procedure by assuming a Taylor series
approximation for the time delay, e
–θs
 ≈ –θs + 1, so the approximate process
transfer function is then
Using a filter design with the form
the reader should show (see Exercise 35) that the resulting PID parameters areThis is applied in Example 7.5 to automated insulin delivery.
Example 7.5: Automated Insulin Delivery
An individual with type 1 diabetes may use an automated insulin delivery
system to automatically administer insulin to maintain a desired blood glucose
concentration; this motivating example is covered in more detail in Module 12,
“Automated Insulin Delivery.” Here, we assume the following simplified
model, relating the insulin infusion rate (reported in Units/min, although it is
more common to express this in Units/hour) to the blood glucose, reported in
mg/dL:
and using a Taylor series approximation for the time delay, e
–θs ≈ –θs + 1, the
approximate process transfer function is
The responses for λ value of 35 and 70 min, for a small setpoint decrease in
blood glucose, are compared in Figure 7–8. The smaller value of λ leads to
more overshoot and more aggressive control action, almost hitting the
constraint on insulin infusion. While the controller is designed on the basis of
the approximate model, the simulation is performed on the actual transfer
function. In practice, the sensor readings and insulin infusions are not
continuous. The study shown in Module 12 is based on a digital control
implementation with a sample time of 5 minutes and is applied to a nonlinear
simulation of an individual with type 1 diabetes. Also, a major challenge is
disturbance rejection—that is, when an individual eats a meal—particularly a
high carbohydrate meal; again, that is studied in detail in Module 12.Figure 7–8 Response to a setpoint change of −10 mg/dL in blood glucose.
Effect of λ.
Table 7–2 PID Tuning Parameters for Stable Time-Delay Processesa7.6 IMC-Based PID Controller Design for
Unstable Processes
The IMC procedure must be modified for unstable processes. Rotstein and
Lewin (1991) used the procedure developed by Morari and Zafiriou (1989) to
find IMC-based PID controllers for unstable processes.
1. Find the IMC controller transfer function, q(s), which includes a filter,
f(s), to make q(s) semiproper. An additional requirement is that the value
of f(s) at s = pu
 (where pu
 is an unstable pole) must be 1. That is,
f(s = pu
) = 1
Morari and Zafiriou recommend a filter transfer function that has the form
where n is chosen to make q(s) proper (usually semiproper). A value of γ
is found that satisfies the filter requirement f(s = pu
) = 1.
2. Find the equivalent standard feedback controller using the transformation
Write this in the form of a ratio between two polynomials.
3. Show this in PID form and find kc
, τI
, τD. Sometimes this procedure
results in a PID controller cascaded with a lag term (τF
):
4. Perform closed-loop simulations for both the perfect model case and cases
with model mismatch. Choose the desired value for λ as a trade-off
between performance and robustness.
Example 7.6 illustrates this procedure for a first-order unstable process.Example 7.6: IMC-Based PID Design for a First-Order Unstable
Process
Find the IMC-based PID controller for a first-order unstable process
where τu
 is given a positive value. The pole, pu
, is 1/τu
, which is positive,
indicating instability.
Step 1. Find the IMC controller transfer function, q(s),
Note that we have selected a second-order polynomial filter to make the
controller, q(s), semiproper. Now we solve for γ so that f(s = pu
) = 1.
so
Solving for γ, we find
Step 2. Find the equivalent standard feedback controller using the
transformationAfter a lengthy bit of algebra,
Step 3. This is in the form of a PI controller, where
As a numerical example, consider . The closed loop output
responses for various values of λ are shown in Figure 7–9a, while the
manipulated variable responses are shown in Figure 7–9b. Notice that we do
not achieve the nice overdamped type of closed-loop output responses that we
were able to obtain with open-loop stable processes. The reader should show
that the closed-loop relationship for this system is
which has overshoot if γ > λ (this is always the case for this system).
In Figure 7–9, we notice that the closed-loop response had overshoot. A
response to a setpoint change, without overshoot, can be obtained by including
a setpoint filter. The setpoint filter is
which yields the following closed-loop response for a setpoint change.Figure 7–9 Responses for a step setpoint change for various values of λ.
(a) Output; (b) manipulated input.
The results for several unstable process transfer functions are shown in Table
7–3. See Rotstein and Lewin (1991) for a discussion of the effect of deadtime
and model uncertainty on the control of unstable processes.
Table 7–3 PID Tuning Parameters for Unstable ProcessesSummary of IMC-Based PID Controller Design for Unstable
Processes
A major tuning consideration by the student is that there are both upper and
lower bounds on λ to assure stability of an unstable process. This is in contrast
to stable processes, where the closed loop is guaranteed to be stable under
model uncertainty, simply by increasing λ to a large value (detuning the
controller).
7.7 Summary
In the direct synthesis design procedure, a desired closed-loop response (or
closed-loop transfer function) is specified. A feedback controller is then
synthesized to obtain that response. We have seen that a PID-type controller
often results. Some problems can arise if the process has a time delay or
inverse response. In these cases, the desired closed-loop response must also
have a time delay or inverse response, as formulated in the IMC procedure.
The IMC tuning (filter) factor, λ is used to detune for model uncertainty. It
should be noted that the standard IMC design procedure is focused on setpoint
responses, but good setpoint responses do not guarantee good disturbancerejection, particularly for disturbances that occur at process inputs. A
modification of the IMC design procedure was developed to improve input
disturbance rejection.
We have shown how the IMC procedure can be used to design PID-type
feedback controllers. If the process has no time delay and the inputs do not hit
a constraint, then the IMC-based PID controllers will have the same
performance as does IMC. If there is dead-time, then the IMC-based PID
controllers will not perform as well as IMC because of the Padé approximation
for deadtime.
It is interesting to note that the IMC-based PID controllers for all of the transfer
functions shown in Table 7–1 could have been designed using the direct
synthesis method of Section 7.2. The key issue in the direct synthesis method is
the specification of the closed-loop response characteristic. If the process has
an RHP zero, then the specified closed-loop response must also have an RHP
zero. The IMC-based PID procedure provides a clear method for handling this.
Also, note that the standard IMC filter design results in good setpoint response
performance, but other filter designs must be used for good input disturbance
rejection. Skogestad (2003) has modified the IMC-based PID parameters for a
number of process models, primarily to improve disturbance rejection, as
shown in the appendix of this chapter.
The IMC design method was modified to handle unstable processes. The
standard IMC structure cannot handle unstable processes, so the controller for
an unstable process must be implemented in standard PID feedback form.
For a good example application of the IMC-based PID procedure, work
through Module 6, “Biochemical Reactors.”
Terms
All-pass: Property of a transfer function. A common example is .
Factorization: Factoring a transfer function into invertible (good stuff) and
noninvertible (bad stuff) portions.
Minimum phase: No RHP zeros or time delays.
Nonminimum phase: Contains RHP zeros and/or time delays.Physical realizability: A controller can be physically implemented if it is
proper.
Proper: A transfer function is proper if the order of the denominator is at least
as great as the order of the numerator. If they are exactly the same order, the
transfer function is semiproper. If the order of the denominator is greater than
the numerator, the transfer function is strictly proper.
References
The improved IMC disturbance rejection procedure was suggested by Braatz
and colleagues:
Horn, I.G., J.A. Arulandu, C.J. Gombas, J.G. VanAntwerp, and R.D. Braatz.
(1996). “Improved Filter Design in Internal Model Control.” Ind. Eng.
Chem. Res., 35(10): 3437–3441. https://doi.org/10.1021/ie9602872
A complete IMC design procedure is presented in the following:
Morari, M., and E. Zafiriou. (1989). Robust Process Control. Upper Saddle
River, NJ: Prentice-Hall.
The following paper derives IMC-based PID controllers for “real PID” control:
Chien, I.-L., and P.S. Fruehauf. (1990). “Consider IMC Tuning to Improve
Controller Performance.” Chem. Eng. Prog., 86(10): 33–41.
Initial IMC-based tuning parameters are presented in the following paper:
Rivera, D.E., M. Morari, and S. Skogestad. (1986). “Internal Model Control. 4.
PID Controller Design.” Ind. Eng. Chem. Proc. Des. Dev., 25, 252–265.
https://doi.org/10.1021/i200032a041
The following paper discusses the IMC-based tuning rules for open-loop
unstable systems:
Rotstein, G.E., and D.R. Lewin. (1991). “Simple PI and PID Tuning for Open￾Loop Unstable Systems.” Ind. Eng. Chem. Res., 30, 1864–1869.
https://doi.org/10.1021/ie00056a028
The Skogestad tuning rules are presented in the following paper:
Skogestad, S. (2003). “Simple Analytic Rules for Model Reduction and PID
Controller Tuning.” J. Process Cont., 13, 219–309.
https://doi.org/10.1016/S0959-1524(02)00062-8
Student Exercises1. In Example 7.1, we found that the direct synthesis approach applied to a
first-order process resulted in a PI controller. Consider the following first￾order process with a time constant of 10 minutes and a process gain of 2
%/%:
Find the output and manipulated variable responses for three different
values of the desired closed-loop time constant, λ = 1, 5, and 10 min (τI
 =
10; kc
 = 5, 1, and 0.5, respectively). The expected results are shown here:
2. Consider a process with an RHP zero:
Show that the direct synthesis procedure, assuming a desired first-order
response, yields an unstable controller for this process.3. Find the feedback controller for an integrating process, gp
(s) = kp
/s,
assuming a desired first-order response using the direct synthesis method.
Answer: It is a P-only controller, with kc
 = 1/kpλ.
4. Find the feedback controller for an integrating process, gp
(s) = kp
/s,
assuming a desired second-order response:
Partial Answer: The controller is a first-order lag.
5. Show that the direct synthesis procedure for the following process,
assuming a desired first-order response, yields an ideal PID controller:
Find the PID tuning parameters if a closed-loop time constant of 5
minutes is desired.
6. For a second-order system with numerator dynamics,
find a controller that gives a first-order closed-loop response. (Hint: It will
be a PID with a first-order lag.)
7. Consider the following first-order process:
If the desired closed-loop response to a setpoint change is second order
with the following form,
find the feedback controller required, where α and λ are adjustable tuning
parameters (they are both positive). What type of controller is this? If the
controller is PID form (perhaps with a lag), find each of the tuningparameters (kc
, τI
, τD, τF
). Show that λ > 0.5α is required for the controller
to be stable.
8. Consider a first-order process with a desired closed-loop response that is
second order. Use the direct synthesis procedure with the specified closed￾loop transfer function (which is critically damped),
to derive the controller. Perform simulations for several values of λ and
compare and contrast the closed-loop results.
9. Consider the following IMC block diagram. Find the closed-loop transfer
functions relating the load [l(s)] and the setpoint [r(s)] to the output [y(s)].
Assume that the model is not perfect.
10. Consider the IMC study presented in Example 7.2 with parameter
uncertainty. Let the model used in the controller design remain the same,
that is
But the actual process plant behavior is described by gain and deadtime
uncertainty:where the gain can vary from 0.7 to 1.3 %/%, and the deadtime can vary
between 3 and 5 minutes. Find the worst-case scenario (combination of
gain and deadtime) and select the value of λ that you feel is appropriate to
handle this scenario. Compare the responses of the worst-case plant with
that of the nominal one for this value of λ for a setpoint change of 10%.
11. A process has the following relationship between the input and output:
Design an IMC controller for this process. Let q(s) be semiproper (order
of denominator is equal to the order of numerator) and use an all-pass
factorization. Find the closed-loop transfer function assuming a perfect
model. Sketch the closed-loop response to a step setpoint change.
12. Consider the closed-loop response for IMC when the model is not perfect.
Show that there is no offset for a setpoint change for the following process
model and actual process transfer functions. Also, find the minimum value
of λ that assures closed-loop stability for this system.
13. Design an IMC for the following process:
where , and β =
6min
a. For this part, do not factor out the RHP zero to form the controller.
Perform simulations to show that the manipulated variable grows
unbounded when a step setpoint change is made, although good
performance of the output is achieved.For the following parts, assume that the all-pass factorization technique
is used.
b. Assuming the model is perfect, plot the transient response of y(t) to a
unit step setpoint change in r(t) as a function of λ.
c. Discuss how deadtime uncertainty degrades the closed-loop
performance (show several curves on one plot), and show how the
sensitivity depends on the filter constant, λ.
d. Show how gain uncertainty degrades the closed-loop performance
(show several curves on one plot), and show how the sensitivity
depends on the filter time constant, λ.
e. Now, assume that there is no setpoint change but that there is a step
disturbance. Assume that the disturbance transfer function is equal to
the process transfer function. Compare the response of the output for
different values of λ.
14. Packed-bed reactors often exhibit “wrong-way” (inverse response)
behavior. You are responsible for the control-system design for a packed￾bed reactor that has inverse response behavior, as reflected in the
following process model (the time unit is minutes, the output is °C, and
the input is %):
a. What are the units for the process gain?
b. Design an IMC for this process. Use the all-pass factorization for the
RHwP zero, and assume that q(s) is semiproper (numerator order in s is
equal to the denominator order in s).
c. Assuming a perfect model, plot qualitatively how the temperature will
respond to a step setpoint change of 1°C.
d. It is desirable to make certain that the control valve position,
immediately after a 10°C setpoint change, does not move more than
25%. What is the smallest value of λ that you can use? Show your
work.
15. Consider an isothermal chemical reactor, where the dilution rate (feed
flow rate per unit volume of reactor) is manipulated to achieve a desiredconcentration of product (see Module 5, “Isothermal Chemical Reactor”).
The process model is
which has an RHP zero (inverse response) and a time delay (due to the
concentration measurement device).Design an IMC for this process.
a. For this part, do not factor out the RHP zero to form the controller.
Perform simulations to show that the manipulated variable grows
unbounded when a step setpoint change is made, although good
performance of the output is achieved.
For the following parts, assume that the all-pass factorization technique
is used.
b. Assuming the model is perfect, plot the transient response of y(t) to a
unit step setpoint change in r(t) as a function of λ. (Show your control￾loop diagram.)
c. Discuss how deadtime uncertainty degrades the closed-loop
performance (show several curves on one plot), and show how the
sensitivity depends on the filter constant, λ.
d. Show how gain uncertainty degrades the closed-loop performance
(show several curves on one plot), and show how the sensitivity
depends on the filter time constant, λ.
e. Now, assume that there is no setpoint change but that there is a step
disturbance. Assume that the disturbance transfer function is equal to
the process transfer function. Compare and contrast the response of the
output with the open-loop control response.
16. Use the IMC-based PID design procedure to find the PID controller for a
second-order transfer function,
Hint: First design the IMC, assuming that you will allow the controller to
be improper; that is, the order of the numerator is one higher than the
denominator. What order filter do you find?a. Find the PID parameters, kc
, τI
, τD, as a function of the process model
parameters, kp
, τ, ζ, and the filter factor, λ.
b. For a perfect model, plot the closed-loop response of y to a step
setpoint change in r (as a function of λ). (Show your control block
diagram.)
τ = 2 minutes, ζ = 0.8, kp
 = 5.25 psig/gpm
c. Discuss the effect of uncertainty in ζ (show plots) on closed-loop
performance, as a function of λ.
17. Compare the response of the following first-order + time-delay process,
using IMC and IMC-based PID. Discuss the effect of λ on the closed-loop
stability for both systems.
Do you find that there is a minimum λ required for the stability of the
IMC-based PID strategy? How does this relate to the recommendations in
Table 7–2? Is there a minimum λ required for the stability of the IMC
strategy?
18. In Example 7.4, the all-pass factorization was not used for the first-order
+ time-delay process with a Padé approximation for deadtime. Show that
the use of an all-pass factorization [and semiproper q(s)] leads to a PID
controller in series with a first order lag.
19. For the following inverse response process,
a. Find the IMC-based PID controller if no all-pass is used and the
controller is improper.
b. Find the IMC-based PID controller (which must be cascaded with a
first- order lag) if an all-pass is used and the IMC controller, q(s), is
semiproper.
20. For the following integrating process,show that the IMC-based PID procedure results in a P controller if 
 and in a PI controller if .
21. The following process transfer function represents the relationship
between boiler feedwater flow rate and steam drum level (Module 8,
“Steam Drum Level,” provides a more complete study of this process):
a. Use the all-pass factorization method to show that the IMC-based PID
controller is proportional-derivative (PD) with a first-order lag.
b. Use and a non-“all-pass” factorization to find a PID
controller.
22. Use the IMC-based feedback controller design procedure to design a PID
controller for the following process:
Assume that the IMC filter is . Find kc
, τI
, and τD—these
will be a function of the process parameters and λ (show all work). What
is the closed-loop transfer function? Sketch the expected response of the
output to a unit step setpoint change.
23. Consider the following first-order + time-delay process:
Find the tuning parameters for the IMC-based PID controller (no lag).
What is the maximum value of kc
 that you would recommend? Why?24. A stack gas scrubber has the following relationship between the fresh
feedwater flow rate and the SO2
 concentration in the water leaving the
scrubber:
Use the IMC-based PID procedure to find the PID controller (plus first￾order lag) for this process.
Hint: Let the IMC q(s) be semiproper (order of denominator = order of
numerator). Which controller tuning parameters does λ affect?
25. Use the IMC-based feedback controller design procedure to design a PID￾type controller for the following process. Assume that q(s) is semiproper
and τn
 > 0.
Find the PID tuning parameters (assuming ideal PID) as a function of the
process parameters and λ (show all work). What is the closed-loop
transfer function? Sketch the expected response behavior.
26. Consider the closed-loop response for IMC when the model is not perfect.
Show that there is no offset for a setpoint change for the following model
and process transfer functions. Also, find the minimum value of λ that
assures closed-loop stability when
27. A styrene polymerization reactor is operated at an open-loop unstable
point and has the following input-output model:
Design the IMC-based PI controller for this system. Sketch the expected
response for a setpoint change.28. A vinyl-acetate polymerization reactor is operated at an open-loop
unstable point and has the following input-output model, for control of
output temperature (°C) by manipulating the jacket temperature (°C). The
timescale is minutes.
a. Design the IMC-based PID controller for this system; that is, find kc
, τI
,
and τD. Show units for all parameters.
b. What is the closed-loop transfer function? Sketch the expected response
for a step setpoint change.
29. Derive γ for the first three elements in Table 7–3. The value of the filter
must be one at the location of the unstable pole.
30. A reactor is operated at an open-loop unstable point and has the following
input-output model:
a. Design the IMC-based PID controller (perhaps with a lead-lag filter) for
this system, that is, find the tuning parameters.
b. What is the closed-loop transfer function? Sketch the expected response
for a step setpoint change.
31. Show that a PI controller cannot stabilize the process
 if τ, < τp
. (Hint: Use the Routh stability
criterion.) The IMC-based PID controller (entry B in Table 7–3) can
handle this process.
32. Consider a first-order + deadtime process with the following transfer
function (use this to represent the process in all analyses and simulations):
Now assume two different PI design procedures for this process: The
model is first-order + deadtime with the known parameter values; and themodel is integrator + deadtime where k = 1/10 = 0.1.
a. For a small time delay (0.5 minutes), compare the performance of the
two PI control strategies for step setpoint changes. Discuss the effect of
λ. Also compare the performance of the two PI control strategies for
step input load disturbance changes (let the load disturbance transfer
function be equal to the process transfer function). Discuss the effect of
λ.
b. For a larger time delay (5 minutes), compare the performance of the
two PI control strategies for step setpoint changes. Discuss the effect of
λ. Also compare the performance of the two PI control strategies for
step input load disturbance changes (let the load disturbance transfer
function be equal to the process transfer function). Discuss the effect of
λ.
c. Summarize your results and make recommendations.
33. Consider a first-order + deadtime process with the following transfer
function (use this to represent the process in all analysis and simulations):
For a time delay of 5 minutes, compare the setpoint performances of PI,
improved PI, PID, and PID + filter tuning rules from Table 7–2 (rows A–
D). Discuss the effect of the closed-loop time constant, λ; for what values
is unstable or poor performance obtained?
34. Consider the following process model with an RHP zero:
Use the IMC-based PID design procedure to find a PI controller. Assume
that an all-pass factorization is used for the RHP zero. Also, assume that
q(s) is semiproper. Use an IMC filter with the form
and solve for γ to give exactly a PI controller (no other terms). Find the
proportional gain and integral time as a function of the model parameters
(k, β) and λ.35. A first-order + integrator + deadtime model, which includes a pole at 0
(the integrator), is
Use the IMC-based procedure by first assuming a Taylor series
approximation for the time delay
e
–θs ≈ –θs + 1
so the approximate process transfer function is
Using a filter design with the following form,
show that the resulting PID parameters are
Appendix 7.1 SIMC-Based PID Design
Skogestad (2003) suggested a modification (SIMC) to the IMC-based tuning
rules for a FODT process when a PI controller is used, as shown in Table A7-1.
Table A7–1 SIMC-Based PID Tuning Parameters for Stable Time-Delay
ProcessesChapter 8. PID Controller Tuning
In Chapter 6, “Introduction to Feedback Control,” we were given a process and
controller transfer functions and asked to find the closed-loop response (or
stability), while in Chapter 7, “Model-Based Control,” we studied model-based
controller design, including IMC-based PID. In this chapter, we provide an
overview of methods for tuning PID controllers.
After studying this chapter, the reader should be able to
• Understand the different forms of a PID controller.
• Tune PID controllers using the Ziegler-Nichols and Cohen-Coon methods.
• Implement digital PID controllers.
The major sections of this chapter are as follows:
8.1 Introduction
8.2 Closed-Loop Oscillation-Based Tuning
8.3 Tuning Rules for First-Order + Deadtime Processes
8.4 Digital Control
8.5 Stability of Digital Control Systems
8.6 Performance of Digital Control Systems
8.7 Summary
8.1 Introduction
Consider the standard feedback block diagram shown in Figure 8–1, where
disturbance inputs have been neglected. Transfer functions (and block
diagrams) are used to analyze the behavior of control systems, because the
algebraic expressions are easy to manipulate. We noted in Chapter 6 that the
closed-loop transfer function could be used to determine, using the Routh
array, the range of controller gains that assure closed-loop stability.PID Controller Forms
PID controller algorithms were developed in Chapter 6. Here we provide a
concise review of the algorithms in common use.
Parallel PID Form
The ideal parallel form PID algorithm is
which has the following transfer function relationship between error and
controller output:
In practice, it is impossible to perfectly differentiate the error signal, so the
following Laplace transfer function approximations are often used for “real”
PID control (where α = 0.1 is common):
Figure 8–1 Feedback control block diagram.
Series PID
Ideal Series PIDThe ideal series PID form is written as (where the ′ notation is used to
distinguish the parameter values from the parallel implementation)
comparing this form with the ideal parallel form, we find
we see the following relationship between the parallel and series tuning
parameters:
Because the tuning parameter values are different between the parallel and
series forms, it is very important to understand which form is being used by the
control system.
Real Series PID
The ideal series cannot be physically implemented, so the real version has the
following form
The studies reported in this chapter are based on the real parallel form of the
PID controller shown in Equation (8.3). The reader should also be able to
implement the real series form shown in Equation (8.8), as given in some of the
student exercises.8.2 Closed-Loop Oscillation-Based Tuning
A PID controller has three tuning parameters. If these are adjusted in an ad hoc
fashion, it may take a while for satisfactory performance to be obtained. Also,
each tuning technician will end up with a different set of tuning parameters.
There is plenty of motivation, then, to develop an algorithmic approach to
controller tuning. The first widely used method for PID tuning was published
by Ziegler and Nichols in 1942.
Ziegler-Nichols Closed-Loop Method
The Ziegler-Nichols closed-loop tuning technique was perhaps the first
rigorous method to tune PID controllers. The technique is not widely used
today because the closed-loop behavior tends to be oscillatory and sensitive to
uncertainty. We study the technique for historical reasons and because it is
similar to commonly used automatic tuning (“auto-tune”) techniques, covered
in Chapter 11, “PID Enhancements.”
The closed-loop Ziegler-Nichols method consists of the following steps.
1. With P-only closed-loop control, increase the magnitude of the
proportional gain until the closed loop is in a continuous oscillation. For
slightly larger values of controller gain, the closed-loop system is
unstable, while for slightly lower values, the system is stable.
2. The value of controller proportional gain that causes the continuous
oscillation is called the critical (or ultimate) gain, kcu. The peak-to-peak
period (time between successive peaks in the continuously oscillating
process output) is called the critical (or ultimate) period, Pu
.
3. Depending on the controller chosen, P, PI, or PID, use the values in Table
8–1 for the tuning parameters, based on the critical gain and period.
Tyreus and Luyben have suggested tuning parameter rules that result in less
oscillatory responses and that are less sensitive to changes in the process
condition. Their rules are shown in Table 8–2.
Table 8–1 Ziegler-Nichols Closed-Loop Oscillation Method Tuning
ParametersTable 8–2 Tyreus-Luyben Suggested Tuning Parameters Based on the
Ziegler-Nichols Closed-Loop Oscillation Tuning Method
Example 8.1: Third-Order Process
Consider the third-order system used in Example 6.4, with a time unit of
minutes:
Recall that a P-only controller caused the closed loop to be on the verge of
instability (continuous oscillation) when the value of the controller gain was kc
= 10, using the Routh stability criterion. This is the critical proportional gain,
kcu. From the response shown in Figure 8–2, we see that the ultimate period
(period of oscillation) is Pu
 = 6.2 minutes.
The closed-loop responses for Ziegler-Nichols tuning for P, PI, and ideal PID
controllers (based on Table 8–1) are shown in Figure 8–3. Notice that a P-only
controller has offset, as expected. Also, all the responses are quite oscillatory;
this is one of the major disadvantages to the Ziegler-Nichols tuning method. It
typically results in more oscillatory behavior than would be allowable in a
typical process plant. The tuning parameters are also not very robust; that is,
they are very sensitive to process uncertainty. If the process conditions change,
then the control system may become unstable.
The closed-loop responses for Tyreus-Luyben tuning for P (assumed to be the
Ziegler-Nichols value), PI, and PID controllers are compared in Figure 8–4.The Tyreus-Luyben parameters result in less oscillatory responses and will be
less sensitive to uncertainty.
Note that the PID controllers simulated in Figures 8–3 and 8–4 are based on a
filtered derivative of the error, which still results in a large initial manipulated
input when a step setpoint change is made. An advantage of using the
derivative of the measured output is the reduced effect on the manipulated
input at the time of the setpoint change.
Figure 8–2 Response to unit step setpoint change at t = 0; kcu = 10. Notice
that Pu
 = 6.2 minutes.Figure 8–3 Response to unit step setpoint change. Comparison of Ziegler￾Nichols P, PI, and PID tuning rules.Figure 8–4 Response to unit step setpoint change. Comparison of Tyreus￾Luyben P, PI, and PID tuning rules.
8.3 Tuning Rules for First-Order +
Deadtime Processes
The previous tuning rules were based on tests that forced a process into a
continuous oscillation. Obvious disadvantages to the techniques are that the
system is forced to the edge of instability, and it may take a while to iteratively
adjust the controller to obtain a continuous oscillation. In this section, we
present tuning rules based on process models that have been obtained through
the open-loop step tests presented in Chapter 5, “Empirical and Discrete-Time
Models.”
Ziegler-Nichols Open-Loop MethodZiegler and Nichols also proposed tuning parameters for a process that has
been identified as integrator + time-delay based on an open-loop process step
response,
Given that first-order + time-delay processes have a maximum slope of k = kp
/
τp
 at t = θ for a unit step input change, these same rules can be used for first￾order + time-delay processes,
Their recommended tuning parameters, which should give roughly quarter￾wave damping, are shown in Table 8–3. We see a potential problem for systems
with a low time-delay/ time-constant ratio, because this causes the proportional
gain to become very large. Similarly, the integral time tends to be low, causing
oscillatory behavior.
Cohen-Coon Parameters
The method developed by Cohen and Coon (1953) is based on a first-order +
time-delay process model. A set of tuning parameters was empirically
developed to yield a closed-loop response with a decay ratio of 1/4 (similar to
the Ziegler-Nichols methods). The tuning parameters as a function of the
model parameters are shown in Table 8–4.
A major problem with the Cohen-Coon parameters is that they tend not to be
very robust; that is, a small change in the process parameters can cause the
closed-loop system to become unstable.
Table 8–3 Ziegler-Nichols Open-Loop Tuning ParametersTable 8–4 Cohen-Coon Tuning Parameters
IMC and Skogestad Modification (SIMC)
The internal model control (IMC)-based PID tuning rules for a first-order +
deadtime (FODT) process model were given in Table 7–2, rows A to D. The
IMC-based procedure results in the following proportional gain and integral
time, with λ > 1.7θ recommended due to uncertainty (Padé approximation for
deadtime):Skogestad suggested a modification (SIMC) to the IMC-based tuning rules for
a FODT process when a PI controller is used (see Appendix 7.1)
with the suggestion that λ = θ for a good trade-off between performance and
robustness. The SIMC rules for other process models were shown in Table A7-
1.
8.4 Digital Control
In practice, most control algorithms are implemented using microprocessors or
digital computers. Thus, the controller inputs and outputs are available at
discrete sample times rather than continuously.
Consider the continuous (analog) form of an ideal PID controller,
We use a constant sample time, Δt, and the index k to represent the value of the
continuous time signal at discrete step k. For example, the error at discrete
sample time k is equal to the continuous system value at time t = tk
.
We approximate the integral termand the derivative term is approximated using backward finite differences:
Substituting Equations (8.12), (8.13), and (8.14) into Equation (8.11), we find
Notice that the manipulated variable action is calculated at discrete intervals.
The most common way of implementing the discrete control actions on a
continuous process is to assume a zero-order hold. A zero-order hold means
that the control action is held constant between the sample times and that the
manipulated variable changes instantly at each sample time.
Equation (8.15) is known as the position form of the discrete PID controller
equation. The velocity form can be found by subtracting the position form at
step k − 1 from that at step k:
One of the major advantages to the velocity form of Equation (8.16) is that it is
naturally “antireset windup” (see Chapter 11 for a discussion of reset windup
and procedures to prevent it). If the manipulated input saturates, the position
form of Equation (8.15) has an integral term that continues to accumulate,
causing a potential windup problem.
Most of the PID control-system design techniques covered earlier in this text
(direct synthesis, IMC-based PID, etc.) should yield successful tuning
parameters for the discrete PID version if the sample time is sufficiently small.Generally, the sample time should be 0.01 to 0.1 times the dominant time
constant. In practice, most digital control loops are sampled several times per
second, which is far more frequently than is actually needed for most process
systems.
Z-Transform Representation of PID Control
In the same way that Laplace transforms are used to characterize continuous￾time systems, Z-transforms are used to represent the input-output relationships
for discrete-time systems. Consider the discrete PID algorithm in Equation
(8.16). This can be written as
where .
In an analogy to continuous-time systems, where we let u(s) represent the
Laplace transform of u(t), we let u(z) represent the Z-transform of u(k). It is
common to refer to z
−1 as the backward shift operator:
handling e(k), and so on. Similarly, we can write Equation (8.17) as
(1 – z
–1)u(z) = (b0
 + b1z
–1 + b2z
–2)e(z)
which can be written
We can also multiply the numerator and denominator polynomials by z
2
/z
2
, to
writeA discrete closed-loop block diagram is similar to that of a continuous block
diagram. The closed-loop relationship for a setpoint change is
8.5 Stability of Digital Control Systems
For a standard discrete feedback control system, the closed-loop system is
stable if the poles of the closed-loop transfer function are all inside the unit
circle. The closed-loop transfer function is
so the roots of
1 + gc
(z)gp
(z) = 0
must be less than 1 in magnitude.
Example 8.2: Stability of a Discrete Control System
Consider a first-order process where the output is temperature (°C), the
manipulated input is valve position (%), and the time unit is minutes.
If discretized with a sample time of 1 minute, the discrete-time process (the
MATLAB Control Toolbox can be used to convert continuous to discrete models
—see Module 4, “MATLAB LTI Models,” Section M4.3) isWith a P-only controller, we must check the roots of
and solving for the root, we find
where the magnitude of the root is less than 1 for −1 < kc
 < 20.01. Since the
process gain is positive, only positive values of the proportional gain make
sense. This is result is verified in Figure 8–5, where the discrete P-only
controller is unstable, while the continuous P-controller is stable with only a
small amount of offset; kc
 = 20.01 for both the continuous and discrete P￾controllers.
8.6 Performance of Digital Control Systems
The performance of a digital PID controller is rarely significantly different
from that of a continuous PID controller, as long as the sample time is
relatively short compared with the dominant process time constant and the
desired closed-loop response time. A rule of thumb for digital control systems
in general is that the sample time should be less than one tenth the dominant
time constant. In practice, digital PID controllers have a sample time much
shorter than that. Many distributed control systems have a sample rate that is
several times per second, so the sample time is less than 1 second. This makes
sense for flow control loops but is much shorter than necessary for other loops.
The main disadvantages to sampling too fast are that (i) more frequent
computations than necessary are being performed, (ii) numerical round-off
could be a problem if only small control moves are being made at each sample
time, and (iii) there could be increased measurement noise sensitivity.
Example 8.3: Effect of Sample Time on PI Control Performance
Consider the first-order + time-delay processFigure 8–5 Comparison of setpoint responses for continuous and discrete
P-only controllers on the first-order process. kc
 = 20.01 %/°C.
where the output is temperature (°C), the manipulated input is valve position
(%), and the time unit is minutes. The IMC-based “improved PI” parameters,
with λ = 7.5 minutes, yields kc
 = 1.67%/°C and τI
 = 12.5 minutes for an analog
PI controller. In Figure 8–6, we compare analog PI control with discrete PI
control for two sample times (1 and 4 minutes). Clearly, the control
performance degrades as the sample time increases.Figure 8–6 Comparison of setpoint responses for different sample times.
IMC-based PI controller tuning used (λ = 7.5 minutes).
8.7 Summary
The closed-loop Ziegler-Nichols method (Table 8–1) was shown to lead to
oscillatory closed-loop behavior, which is one of the major disadvantages to
the approach. A major advantage to the approach is that a process model is not
needed. Tyreus-Luyben parameters (Table 8–2) were shown to be less
oscillatory and are generally recommended over the Ziegler-Nichols
parameters.
The open-loop Ziegler-Nichols (Table 8–3) and the Cohen-Coon (Table 8–4)
methods also tend to lead to oscillatory closed-loop behavior; we covered these
approaches primarily for historical reasons.
In practice, controller tuning parameters will be adjusted (tuned) on the basis of
actual closed-loop performance. A major advantage of the IMC-based PID is
that a single tuning parameter is adjusted, with the corresponding changes to
the PID parameters. With experience, controller tuning technicians will often
vary all three parameters; it should be noted, however, that many controllersare only PI—sometimes because measurement noise makes the controller
output too sensitive to the derivative term.
Also, in practice, virtually all controllers are implemented digitally. If the
sample time is too high relative to the closed-loop dynamics, then additional
detuning may be necessary.
References
The original Ziegler-Nichols parameters are developed in the following paper:
Ziegler, J.G., and N.B. Nichols. (1942). “Optimum Settings for Automatic
Controllers,” Trans. ASME, 64, 759–768.
https://doi.org/10.1115/1.2899060
The Cohen-Coon parameters are developed in the following paper:
Cohen, G.H., and G.A. Coon. (1953). “Theoretical Considerations of Retarded
Control,” Trans. ASME, 75, 827. https://doi.org/10.1115/1.4015451
The Tyreus-Luyben parameters are presented in the following textbook:
Luyben, M.L., and W.L. Luyben. (1997). Essentials of Process Control, New
York: McGraw-Hill.
The Skogestad tuning rules are presented in the following paper:
Skogestad, S. (2003). “Simple Analytic Rules for Model Reduction and PID
Controller Tuning,” J. Process Cont. 13, 219–309.
https://doi.org/10.4173/MIC.2004.2.2
Student Exercises
1. Consider the gas pressure problem shown in the figure. The objective of
this problem is to understand (via simulation) how the tuning parameters
for a PI controller affect the stability and speed of response for setpoint
changes or disturbances.The relationship between the manipulated valve position (u in deviation
variables) and the pressure in the second tank (y in deviation variables,
psig) is (with a time unit of minutes)
Assume that the dynamic behavior of the pressure
measurement/transmitter is characterized by a first-order lag with a time
constant of 9 seconds:
In addition, assume that the dynamic behavior of the control valve is also
characterized by a first-order lag with a time constant of 6 seconds,
where c(s) is the output from the controller and u(s) is the valve position
(%).
a. For P-only control, find the value of kc
 (via simulation) that causes a
closed-loop to go unstable. Call this value kcu, and call Pu
 the period of
oscillation (time between peaks) when the system goes unstable. These
values are used in the Ziegler-Nichols closed-loop oscillation method.
b. Show that the value of kc
, which is sightly greater than that you
obtained, causes at least one root of the closed-loop characteristicequation, gCL(s), to be positive. Find the P and PI tuning parameters on
the Ziegler-Nichols closed-loop oscillations method.
c. Compare the response of the two different controllers (P vs. PI) for step
setpoint changes of 1 psig in the desired output (y).
2. Consider the following first-order + time-delay process:
Perform simulations for the process output and manipulated input for unit
step changes in the setpoint.
a. Compare the closed-loop step response of this process using P-only
control based on (i) Ziegler-Nichols closed-loop oscillations method,
(ii) Ziegler-Nichols open-loop method, (iii) Cohen-Coon, and (iv)
Tyreus-Luyben tuning.
b. Compare the closed-loop step response of this process using PI control
based on (i) Ziegler-Nichols closed-loop method, (ii) Ziegler-Nichols
open-loop method, (iii) Cohen-Coon, and (iv) Tyreus-Luyben tuning.
c. Compare the closed-loop step response of this process using PID
control based on (i) Ziegler-Nichols closed-loop method, (ii) Ziegler￾Nichols open-loop method, (iii) Cohen-Coon, and (iv) Tyreus-Luyben
tuning.
Comment on the results for all of these tuning methods.
3. Consider the process transfer function for the Van de Vusse reactor
(Module 5, “Isothermal Chemical Reactor”).
Find the Ziegler-Nichols controller parameters for P, PI, and PID
controllers for this process based on the closed-loop oscillation method.
Compare the responses of all three controllers to a step setpoint change.
4. Most PID controller design procedures assume that a perfect derivative
controller is used. For the process transfer function used in Exercise 3 and
the Ziegler-Nichols closed-loop method, compare the responses of (i)
ideal PID, (ii) real PID, and (iii) PID with ideal derivative action on the
process output rather than the error.5. Show that the following state-space representation of a controller,
has the following transfer function representation:
u(s) = gc
(s)e(s)
where
6. Consider the PID algorithm
where yf
 is a “filtered” value of the process output. Assuming that a first￾order filter is used, with a time constant of τf
, write the modeling
equations (differential and algebraic) to simulate the behavior of this
controller.
7. Apply (simulate) the Tyreus-Luyben parameters for PI and PID
controllers to the following process
Compare these results with Cohen-Coon. Which do you recommend for
implementation on a real process?
For Problems 8 and 9: Consider a biochemical continuously stirred-tank
reactor (CSTR):Assume that you are doing pilot plant-scale studies with a 10-liter reactor.
The steady-state values are: valve position = 50%, input flowrate = 3 L/hr,
feed substrate = 4000 mg/L, and biomass concentration = 1,530 mg/L.
Work with the linear model (transfer functions) in deviation variable form
(thus, all initial conditions, inputs, and outputs are at steady state with a
value of 0), but make plots in terms of the physical variables (that is, add
the steady-state values to the deviation variable values to get the actual
physical values).
The overall process transfer function (including valve, primary process
and sensor) can be written
Although the flow rate is reported in liters/hour, please note that the time
constant has units of minutes, and thus the simulation timescale is
minutes. The disturbance input is feed substrate concentration, which has
the following transfer function model relating the disturbance input to the
biomass concentration in the reactor:
8. For a P-only controller, find the proportional gain that causes a continuous
oscillation. This will be the same obtained using the Routh stability
criterion (kcu = −32.65 %/(g/L). In addition, find that the ultimate period
(Pu
) is approximately 6.5 minutes.
a. For the values of kcu and Pu
, find the (i) P, (ii) PI and (iii) PID
parameters suggested by Ziegler-Nichols (Table 8.1), andb. For the values of kcu and Pu
, find the (i) PI and (ii) PID parameters
suggested by Tyreus-Luyben (Table 8.2).
c. Perform simulations of a closed-loop system using the Tyreus-Luyben
PI and PID parameters from part b using real PID form. For a setpoint
change of 30 mg/liter at t = 1 minute, use the subplot feature to
compare output responses (include a dashed setpoint curve). On the
bottom plot, show the valve positions corresponding to each of those
simulations.
d. For a step disturbance in the feed substrate concentration of 50 mg/liter
at t = 1 min, use the subplot feature to compare output responses
(include a dashed setpoint curve). On the bottom plot, show the valve
positions corresponding to each of those simulations.
9. For a P-only controller, find the proportional gain that causes a continuous
oscillation. This will be the same obtained using the Routh stability
criterion (kcu = −32.65 %/(g/L). In addition, find that the ultimate period
(Pu
) is approximately 6.5 minutes.
a. For the values of kcu and Pu
, find the (i) PI and (ii) PID parameters
suggested by Tyreus-Luyben (Table 8.2).
Use the Tyreus-Luyben PID parameter values using a discrete PID
controller based on the velocity form for parts b and c.
b. Based on part a, try sample times of 0.1, 0.5, and 1.0 minutes and
discuss your results for setpoint changes of 30 mg/L. Compare
responses for three different sample times on the same plot (use
physical variables).
Notice that the following form of the discrete-time PID controller was
used:
u(k) = u(k – 1) + b0e(k) + b1e(k – 1) + b2e(k – 2)
where
and the discrete transfer function form isSo, changing the sample time means changing the Z-transfer function
coefficients.
c. Show that the closed-loop system becomes unstable for a sample time
of 1.24 min or longer.
10. The digital PID controller shown in Equation 8.16 was derived using the
ideal PID control equation with the derivative on the error signal. Derive a
digital PID control equation assuming an ideal derivative of the measured
output, y, rather than the error, e,
and using a backward differences approximation to the derivative
11. Consider the first-order process given in Example 8.2. For a discrete PI
controller, with τI
 = 10 minutes, find the proportional gain that just makes
the closed-loop system unstable. Verify your analytical result via
simulation; show plots similar to Figure 8.5.
12. In practice, the sample time for a digital control system may not be
constant. Derive the velocity-form discrete PID controller for the case of a
nonconstant sample time; leave the expression in terms of tk
 and tk−1, and
so on.
13. An individual with type 1 diabetes may use an automated insulin delivery
system to automatically administer insulin to maintain a desired blood
glucose concentration; this motivating example is covered in more detail
in Module 10, “Batch Reactor.” Here, we assume the following simplified
model, relating the insulin infusion rate (reported in Units/min, although it
is more common to express this in Units/hr) to the blood glucose, reported
in mg/dL:Recall that the IMC-based PID procedure (Table 7.2) resulted in the
following tuning parameter values:
The Skogestad tuning parameter values (Table A7.1) are
For several different values of l, compare the responses of the IMC-based
parameters with the Skogestad parameters, for a setpoint change of −10
mg/dL.
14. Consider the insulin-glucose model shown in Exercise 13:
a. Use the Tyreus-Luyben parameters for a PID controller and simulate
the closed-loop response for a setpoint change of −10 mg/dL.
b. Use the IMC-based parameters
and adjust λ to achieve a desirable closed-loop response. Compare your
suggested closed-loop responses with the Tyreus-Luyben responses from
part a.Chapter 9. Frequency-Response
Analysis
The objective of this chapter is to develop frequency response techniques for
control-system analysis and design. After studying this chapter, the reader
should be able to
• Substitute s = jω, and find Bode or Nyquist plots for a transfer function.
• Given a Bode plot, construct a Nyquist plot.
• Understand the concepts of “all-pass” and “nonminimum phase.”
• Understand the effect of gains, time constants, right half-plane (RHP)
zeros, and time delays on amplitude ratios and phase angles.
• Find the gain and phase margins for a given process and controller.
• Tune a controller to achieve a given gain or phase margin.
• Determine the amount of deadtime or gain uncertainty that can be tolerated
before a closed-loop system becomes unstable.
• Compare the robustness of PI and PID controller tuning techniques.
The major sections of this chapter are as follows:
9.1 Motivation
9.2 Bode and Nyquist Plots
9.3 Effect of Process Parameters on Bode and Nyquist Plots
9.4 Closed-Loop Stability Concepts
9.5 Bode and Nyquist Stability
9.6 Robustness
9.7 Matlab Control Toolbox: Bode and Nyquist Functions
9.8 Summary9.1 Motivation
A control system must satisfy desired performance characteristics (closed-loop
time constant, minimal overshoot, etc.) for nominal operating conditions. By
nominal, we normally mean that the plant is perfectly described by the model
used for control-system design. In reality, a model is never perfect, so
controllers must be designed to be robust (to remain stable even when the true
plant characteristics are different from the model).
So far, we have analyzed the closed-loop characteristic equation (1 + gcgp
) for
stability, either by directly calculating the roots or by using the Routh array to
verify that the roots (closed-loop poles) are negative. There are two problems
with this approach:
1. Although the closed-loop characteristic equation may be stable for the
nominal plant, the values of the poles do not indicate how much
uncertainty can be tolerated before the system becomes unstable.
2. The closed-loop characteristic equation is irrational if there is a time
delay, which is characterized by an e
−θs
 term.
The best method for dealing with both of these problems is frequency response
analysis. Our motivation for covering frequency response analysis is primarily
that it provides a measure of the robustness of the controller tuning; that is, it
provides a measure of the amount of model uncertainty that can be tolerated
before the control system will become unstable. We consider the ability to
determine the stability of systems with irrational transfer functions (time
delays) to be less important because a higher-order Padé approximation can
provide an adequate representation of the time delay for analysis purposes.
To understand the concept of frequency response, consider the well-insulated,
perfectly mixed tank with constant flow in and out (perfect level control),
shown in Figure 9–1. Assume that the inlet temperature varies in a sinusoidal
fashion between a minimum of 20°C, a maximum of 30°C, with an average of
25°C. The amplitude of the inlet temperature sine wave is then 5°C.
This tank has a volume of 100 gallons, with a flow rate of 10 gallons/minute.
You can easily show that this system is modeled by a first-order transfer
function, with a gain of 1°C/°C and a time constant of 10 minutes. The
responses to different frequencies in the inlet temperature are shown in Figure9–2. Notice that at low-frequency (0.01 rad/min) forcing (top plot), the outlet
temperature (dashed line) has approximately the same amplitude as the inlet
temperature (solid line), with very small shift in the peak time. At an
intermediate frequency (0.1 rad/min) forcing, we begin to see a decrease in the
amplitude of the outlet temperature, as well as a “lag” in the peak time (center
plot). At a high frequency (1 rad/min), the outlet temperature does not vary
substantially (bottom plot).
Figure 9–1 Perfectly mixed tank with varying inlet temperature
Please note that radians/time is the common unit used for frequency response
analysis in process control. You may be more comfortable thinking in terms of
cycles/time. Because there is one cycle for each 2π radians, a frequency (f) in
cycles/time can be converted to a frequency, ω, in radians/time by
Also, the period P (peak-to-peak time) corresponds to one cycle and can be
found by
The input-output behavior shown in Figure 9–2 makes physical sense. At low
frequencies, the inlet temperature changes on a much slower timescale than the
characteristic time of the process, so the outlet temperature is virtually identical
to the inlet temperature. At high frequencies, the inlet temperature changes so
rapidly that the thermal mass of the process does not allow the outlet
temperature to change significantly.
In terms of dynamic behavior, this type of system is known as a low-pass filter;
that is, low-frequency inlet forcing is directly felt at the output. High-input
frequencies are effectively filtered by the process and not felt at the output.There are two important measures that can be obtained from these time-domain
plots. One is the amplitude ratio, which is the amplitude of the output sine
wave divided by the input sine wave. The second measure is the phase shift of
the output sine wave relative to the input sine wave, as illustrated in Figure 9–
3. The phase shift, or phase angle, is
where P is the period, and ΔP is the lag between an input peak and an output
peak.
For example, if the output were exactly out of phase with the input (output at a
minimum when input is a maximum), the phase angle would be −180°, or π
radians. If the output lagged the input by a full cycle, the phase angle would be
−360°, and it is possible for the phase angle to exceed this value (particularly
for processes with a time delay). The phase angle in the bottom plot of Figure
9–2 is approximately −90° (0.5π radians).
Rather than generating numerous time-domain plots like Figure 9–2, each at a
different frequency, the equivalent results can be displayed concisely on a Bode
plot, as shown in Figure 9–4. The amplitude ratio plot is log-log, while the
phase angle plot is semilog.Figure 9–2 Response of outlet temperature to various inlet temperature
frequencies. Inlet temperature (solid), outlet temperature (dashed). Top,
0.01 rad/min; center, 0.1 rad/min; bottom, 1 rad/min Note the different
timescales.Figure 9–3 Illustration of phase shift or phase angle, φ = −360°(ΔP/P),
and amplitude ratio (yp
/up
)Figure 9–4 Bode plot of the first-order example. Amplitude ratio and
phase shift are plotted as a function of frequency. The circles correspond
to the three frequencies used on the mixing tank.
9.2 Bode and Nyquist Plots
In the previous section the basic concept of frequency response was presented.
For linear systems, an input forcing with a certain frequency results in an
output with the same frequency, shifted by the phase angle. There are two ways
to perform frequency response analysis: (i) conversion of the input signal to the
Laplace domain, partial fraction expansion of the output, and inversion to the
time domain, or (ii) substitution of s = jω in the transfer function.
Method 2, substitution of s = jω in the transfer function, is the easiest approach.
There are also two ways to display the frequency response information: Bode
plots and Nyquist plots. The following first-order example is used to illustrate
these concepts.
Example 9.1: First-Order System
Consider a first-order process transfer function
We use two methods to find the output, given a sine forcing on the process
input.
1. Laplace Transform Method
Consider a first-order system with an input that is forced with a sine wave
of magnitude A and a frequency of ω (rad/time). The time and Laplace
domain representations of the input are
The Laplace domain output isUsing a partial fraction expansion,
Solving for the coefficients and inverting to the time domain (see Exercise 1),
we find
The exponential term decays with time, so the first term can be neglected at
long times. Also, a trigonometric identity can be used to find that
The ss subscript is used to indicate the long-term behavior of the output, after
the initial transients have decayed. Notice that the output approaches 0 at high
frequencies. This is consistent with the results shown in Figure 9–2. The phase
angle also approaches −90° at high frequencies.
The amplitude ratio is the magnitude of the output divided by the input.
Notice that there is a natural dimensionless frequency, ωτp
, resulting from
this analysis.
An easier way to generate frequency response plots is to simply set s = jω
in the transfer function. We illustrate this procedure, again with a simple
first-order example.2. Substitution of s = jω Method
Substitute s = jω into the transfer function
Notice that the result is a complex number (real and imaginary portions)
that changes as a function of frequency. Because the magnitude of a
complex number Re + jIm can be represented by , the
magnitude (amplitude) of the transfer function (notice that the amplitude
at zero frequency is simply the steady-state process gain) is
Also, the phase angle of a complex number can be represented by tan−1
(Im/Re), so
Notice that these are exactly the relationships shown with method 1
[Equations (9.4) and (9.5)].
Also notice that one can simply plot the imaginary values as a function of
the real values to obtain a Nyquist plot. Such a plot is shown in Figure 9–5
for this system. The curve begins close to (kp
,0) at low frequencies, and
approaches (0,0) through the first quadrant at high frequencies. That is, it
starts with an amplitude of 1 at a phase angle of 0, and ends with an
amplitude of 0 at a phase angle of −90°.
GeneralizationTo perform a frequency-response analysis, we simply substitute s = jω in the
transfer function. Bode plots consist of amplitude ratio and phase angle plots as
a function of frequency. The amplitude ratio plots are log-log, while the phase
angle plots are semilog. Nyquist plots consist of a curve of the real and
imaginary components of the transfer function, as a function of frequency.
Figure 9–5 Nyquist plot for a first-order system. The circles correspond to
the three frequencies (1 = 0.01 rad/min, 2 = 0.1 rad/min, 3 = 1 rad/min)
used on the mixing tank.
The steps to generate the plots are as follows.
1. Generate a vector of frequencies, ω, linearly spaced on a logarithmic
scale.2. Substitute s = jω into gp
(s).
3. Find the real and imaginary components, Re(ω) + jIm(ω).
4. For Bode plots, at each frequency point, find the amplitude ratio and
phase angle
a. Plot amplitude ratio as a function of frequency on a log-log plot.
b. Plot phase angle as a function of frequency on a semilog plot.
5. For Nyquist plots, plot Im(ω) vs. Re(ω).
The results for several common transfer functions are shown in Table 9–1.
Table 9–1 Nyquist and Bode Values for Common Transfer Functions
Complex Transfer Functions
Consider now a transfer function that is composed of a number of transfer
functions,and substituting s = jω, we can find the magnitude at each frequency:
The amplitude ratio and phase angle can be found at each frequency from
That is, at each frequency, the amplitude ratios add on a logarithmic scale,
while the phase angles add on a linear scale.
Example 9.2: First-Order + Time Delay
Consider a first-order + time-delay process, written as three independent terms:
The amplitude ratio and phase angle can be found from Equations (9.9) and
(9.10) and Table 9–1:
Notice that the time delay has no effect on the amplitude ratio (compared with
the pure first-order process), but it has a great effect on the phase angle,
particularly at high frequencies. We can also think of the effect of the changes
in each of the parameters.Gain Change
A change in the gain merely shifts the amplitude ratio up or down (additive on
a log scale), with no change in the phase angle.
Time Delay Change
A change in the time delay changes the phase angle, but not the amplitude
ratio. An increase in the time delay increases the phase lag (makes it more
negative) at any given frequency.
Time Constant Change
A change in the time constant affects both the amplitude ratio and phase angle.
An increase in the time constant tends to decrease the amplitude ratio and
increase the phase lag (make it more negative) at any given frequency.
9.3 Effect of Process Parameters on Bode
and Nyquist Plots
In this section, we stress the effect of process parameters and the concepts of
all-pass and nonminimum phase.
Effect of Process Order
Consider the following first-, second-, and third-order transfer functions:
The Bode plot is shown below in Figure 9–6. The higher-order transfer
functions have amplitude ratios that decrease more rapidly with frequency, and
the phase angles asymptotically approach larger (more negative) values (−180°
and −270° for the second-and third-order processes).
The corresponding Nyquist plot is shown in Figure 9–7. The first-order system
stays in the first quadrant, asymptotically approaching the origin along the
imaginary axis. The second-order system goes into the second quadrant and
asymptotically approaches the origin along the real axis from the negativedirection. The third-order system passes into the third quadrant and
asymptotically approaches the origin along the positive imaginary axis.
Concepts of All-Pass and Nonminimum Phase
Consider the following four transfer functions:
Figure 9–6 Bode plots. Comparison of first-, second-, and third-order
systems with a gain of 1 and time constants of 1 minute.Figure 9–7 Nyquist plots. Comparison of first-, second-, and third-order
systems with a gain of 1 and time constants of 1 minute. As the frequency
increases, the curves go from (1,0) to (0,0).
where the first transfer function is a pure gain, the second and third are Padé
approximations (first and second order, respectively), and the fourth is a pure
time delay. The Bode plots are shown in Figure 9–8. Notice that all these
transfer functions have an amplitude that is constant (does not vary with
frequency). A transfer function with a constant amplitude ratio is called all￾pass because all frequencies are directly transferred from input to output with
no change in magnitude.
Also, notice that the phase angle is different for each transfer function. A
transfer function is minimum phase if there is no other transfer function that
has the same amplitude ratio, with a larger phase angle. In this case, the first
transfer function (gain with no dynamics) is minimum phase, while all of theothers are non-minimum phase. The high frequency asymptotes of the first￾and second-order Padé approximations are −180° and −360°, respectively. The
high-frequency phase angle of the time delay is unbounded. The corresponding
Nyquist plots are shown in Figure 9–9; each curve begins at (2,0). The constant
gain remains at (2,0). The first-order Padé transfer function ends at (−2,0),
which is −180°. The second-order Padé transfer function ends at (2,0), which is
−360°. The time delay wraps an infinite number of times.
Figure 9–8 Bode plots. Comparison of different processes with an
amplitude ratio of 2.
Frequency Response Introductory SummaryWe have introduced Bode and Nyquist plots. You should be able to develop
Nyquist plots given Bode plots, and vice versa. Both analysis techniques are
used for control-system tuning, as presented in the next sections.
For stable systems (poles < 0) with no time delays, we can state the following
general results. Let m be the order of the numerator polynomial and n the order
of the denominator polynomial (the relative order is n − m).
• If all process zeros are negative (no RHP zeros), the high-frequency phase
lag is (n − m) * (−90°).
• Each RHP zero adds −90° of phase lag (left half-plane zeros add +90° of
phase lead) at high frequencies.
• Gains change the amplitude ratio plot but not the phase angle plot.
Figure 9–9 Nyquist plots. Comparison of different processes with an
amplitude ratio of 2. For each individual Nyquist plot, the frequency
increases as the curve moves clockwise from the (2,0) point.We also can state the following about systems with time delays:
• Time delays change the phase angle plot but not the amplitude ratio plot.
• Processes with time delays have a phase angle that continuously decreases
with frequency; this corresponds to a continuous “wrapping” of the origin
on a Nyquist plot.
9.4 Closed-Loop Stability
Sections 9.1, 9.2, and –9.3 introduced frequency response analysis, including
the construction of Bode and Nyquist plots. In this section, we illustrate how
Bode and Nyquist plots can be used to determine the stability of a closed-loop
system. We also show how to use these plots to tune controllers for robustness,
that is, to be able to tolerate a given level of model uncertainty. The tests used
involve information about the controller and process in open-loop. The open￾loop analysis that we use in this chapter is different from that used in Chapter
7, “Model-Based Control,” to motivate model-based control.
Consider the case where the loop has been opened, as shown in Figure 9–10.
We introduce the concept of Bode stability using the following thought
experiment. Assume that the setpoint applied to the open-loop system in Figure
9–10 is a sine wave. Also assume that the controller has been tuned so that the
output lags the setpoint by 180° and has the same amplitude as the setpoint, as
shown in Figure 9–11.
Realize that −y(t) is exactly 180° out of phase with y(t), which means that −y(t)
is equal to r(t). Now consider the case where the setpoint signal, r(t), is
suddenly stopped and simultaneously the loop is closed, as shown in Figure 9–
12. This means that the error signal will simply be −y(t), which is identical to
r(t). Because it is identical to r(t), every signal on the control loop diagram
remains the same. The output continues to oscillate with the same frequency
and magnitude as before the loop was closed. We refer to this control loop as
nominally stable.
Consider the case where the output is exactly out of phase (φ = −180°) with the
setpoint in the open loop, but the amplitude of the output is less than the
setpoint. Therefore, the amplitude ratio (|y|/|r|) is less than 1. Then, if the loop
is closed, the output decreases each time “around the loop,” and the system is
stable. In contrast, consider the case where the output is exactly out of phasewith the setpoint when the control loop is open, but the amplitude of the output
is greater than the setpoint. If the loop is then closed, the output increases each
time around the loop, and the system in unstable.
Figure 9–10 Feedback control loop has been “opened.”
Figure 9–11 Process output (y) lags setpoint (r) by 180°.Figure 9–12 Feedback loop has been “closed.”
The thought experiment that we just performed is the basis for the Bode
stability criterion stated in the next section.
9.5 Bode and Nyquist Stability
In the previous section, we used a thought experiment based on the open-loop
(controller + process) response to a sinusoidal setpoint input. We found that if
the amplitude ratio of the open-loop transfer function [gc
(s)gp
(s)] is less than 1
when the phase angle is −180°, then the system will be stable when the loop is
closed. This requirement is also known as the Bode stability criterion. Notice
that we are assuming no valve and measurement effects [or lumping them into
gp
(s)]. If these effects are included, then gc
(s)gp
(s)gv
(s)gm(s) should be used in
the analysis.
Bode Stability Criterion
Assume that the process is stable [gp
(s) has no poles in the RHP] and the
controller is stable [gc
(s) has no poles in the RHP]. Also assume that the phase
angle (φ) crosses −180° only once on a Bode plot. The system will be closed￾loop stable if and only if the amplitude ratio of gcgp
 is less than 1 at the
crossover frequency.
where ωco is known as the crossover frequency, which is defined as the
frequency where the phase angle is −180°.
The requirements placed by the Bode stability criterion are not that restrictive
for most chemical processes. For processes where the phase angle crosses−180° more than once, it is necessary to use the Nyquist stability criterion.
Nyquist Stability Criterion
A system will be closed-loop stable if a Nyquist plot of gc
(s)gp
(s) does not
encircle the critical point (−1,0). Examples of closed-loop stable and unstable
systems are shown in Figure 9–13.
The Bode and Nyquist stability criteria indicate whether a closed-loop system
will be stable or not, but they do not indicate how “close to instability” a
system is. That is, the Bode and Nyquist stability criteria alone do not indicate
the robustness of a feedback system to model uncertainty. Gain and phase
margins, defined next, provide an indication of the robustness of a feedback
system.
Gain Margin
Let ARco represent the amplitude of gc
(s)gp
(s) at the crossover frequency (ωco,
where φ = −180°). The gain margin is defined as
and the Bode stability requirement is that ARco < 1, so for stability,
The gain margin is the multiplicative factor that the gain can be increased by
before the system becomes unstable.
Phase Margin
Let φpm represent the phase angle when the amplitude of gc
(s)gp
(s) is 1. This
occurs at a frequency ωpm. The phase margin is defined asFigure 9–13 Nyquist stability criterion. (Left) Stable system, critical point
is not encircled. (Right) Unstable system, critical point (−1,0) is encircled.
The closed-loop system will be stable if φ > −180° when AR = 1, so the
stability requirement is
The phase margin is the amount that the phase angle can decrease (in
magnitude, at ωpm) before the system becomes unstable.
We have developed the Bode and Nyquist stability criteria and defined the gain
and phase margins. Next, we use an example to illustrate the techniques.
Example 9.3: Nonminimum-Phase Process
Consider the van de Vusse reactor (Module 5, “Isothermal Chemical Reactor”)
controlled using a P-only controller:
where time unit is minutes. The Bode plots for gp
(s)gc
(s) with kc
 = 2.5 are
shown in Figures 9–14 and 9–15.Figure 9–14 Bode plot for Example 9.3. Calculation of the gain margin.
We can use the following steps and the Bode plot in Figure 9–14 to
calculate the gain margin.Figure 9–15 Bode plot for Example 9.3. Phase margin calculation.
We can use the following steps and the Bode plot in Figure 9–14 to calculate
the gain margin.
1. Find the frequency where the phase angle for gpgc
 = −180°. Here, ωco =
4.3 rad/min.
2. At this frequency, find the amplitude ratio for gpgc
. Here, AR = 0.60.
3. The gain margin is 1/AR. Here, the gain margin = 1/0.60 = 1.67.
We can use the following steps and the plot in Figure 9–15 to find the phase
margin.
1. Find the frequency where the gpgc
 amplitude ratio is 1.0. Here, ωpm = 2.1
rad/min.
2. At this frequency, find the gpgc
 phase angle. Here, φpm = −121°.3. The phase margin is φ − (−180). Here, the phase margin = −121 + 180 =
59°.
The Nyquist plot is shown in Figure 9–16. The unit circle is plotted on this
diagram so that it is easy to determine where the amplitude is equal to one.
Notice that the Nyquist diagram is consistent with the Bode diagram, since the
amplitude ratio is 0.60 when the phase angle is −180°, and the phase angle is
−121° when the amplitude ratio is 1.0.
Figure 9–16 Nyquist plot for Example 9.3. The unit circle (dashed line) is
included for convenience. The points for the gain margin and phase
margin calculations are shown as the open circle and star, respectively.
9.6 Robustness
We have noted throughout this text that it is important to tune controllers to be
robust. By robust, we mean that a controller can tolerate a certain amount of
change in the process parameters without causing the feedback system to gounstable. The gain and phase margins presented in Section 9.5 quantify the
amount of uncertainty that can be tolerated.
To illustrate the relationship between gain and phase margins and the model
parametric uncertainty that can be tolerated, we consider the following first￾order + time-delay process.
The nominal process model is
Let Δk and Δθ represent the additive uncertainty in the process gain and
deadtime, respectively (notice that we are neglecting any uncertainty in the
time constant). The actual process is then
Notice that we could also use the representation
where . The open-loop transfer function used in the frequency
response analysis is
Notice that the gain and time-delay uncertainties are clearly separated from the
nominal model and controller in this equation. Because 1 + ε is a
constant term, it will only affect the amplitude ratio. Also notice that e
−Δθs
 will
only affect the phase angle. This means that we can think of the gain margin as
being related to the amount of gain uncertainty that can be tolerated, while the
phase margin is related to the amount of deadtime uncertainty that can betolerated. The change in phase angle, Δφ, due to the change in deadtime, Δθ,
can be found from
9.7 Matlab Control Toolbox: Bode and
Nyquist Functions
The MATLAB Control Toolbox has special functions to generate Bode and
Nyquist plots and to calculate gain and phase margins. Here, we use Example
9.3 to illustrate the use of the MATLAB bode, nyquist, and imargin
functions that are available in the Control Toolbox. For information, simply
enter help bode, and so forth, in the MATLAB command window.
First, define the process transfer function (gp
).
>> vdvtf = tf(0.5848*[-0.3549 1],[0.1858 0.8627 1]
Transfer function:
 -0.2075 s + 0.5848
-------------------------
0.1858 s^2 + 0.8627 s + 1
Next, generate the open-loop transfer function (gcgp
) for a controller gain (kc
)
of 2.5.
>> kc = 2.5;
>> gcgp = kc*vdvtf
Transfer function:
 -0.5189 s + 1.462
-------------------------
0.1858 s^2 + 0.8627 s + 1
Now, use the bode function to generate magnitude and phase angles as a
function of frequency. Also, use imargin to perform the gain margin (Gm)and phase margin (Pm) calculations at their respective frequencies (Wcg and
Wcp).
>>[mag,phase,w] = bode(gcgp);
[Gm,Pm,Wcg,Wcp] = imargin(squeeze(mag),squeeze(pha
Gm =
 1.6680
Pm =
 59.0905
Wcg =
 4.3064
Wcp =
 2.0956
Figure 9–14 is generated using the following sequence of commands.
subplot(2,1,1),loglog(w,squeeze(mag),[0.1 Wcg Wcg]
 [1/Gm 1/Gm min(mag)],'--')
subplot(2,1,2),semilogx(w,squeeze(phase),[min(w) W
 [-180 -180 0],'--')
Figure 9–15 is generated using the following sequence of commands.
subplot(2,1,1),loglog(w,squeeze(mag),[0.1 Wcp Wcp]
 [1 1 min(mag)],'--')
subplot(2,1,2),semilogx(w,squeeze(phase),[0.1 Wcp 
 [-180+Pm -180+Pm 0],'--')
The Nyquist plot, Figure 9–16, is generated using the following sequence of
steps. First, define an appropriate frequency range:w1 = logspace(-2,2,300);
Then, use the nyquist function to generate real and imaginary vectors.
[regcgp,imgcgp] = nyquist(gcgp,w1);
Generate circles for convenience when interpreting the Nyquist plot.
circlex = cos(0:0.2:2*pi);
circley = sin(0:0.2:2*pi);
phaseptx = cos((-180+Pm)*pi/180);
phasepty = sin((-180+Pm)*pi/180);
plot(squeeze(regcgp),squeeze(imgcgp),circlex,circl
 [-1/Gm],[0],'o', phaseptx,phasepty,'*')
axis('square')
xlabel('real')
ylabel('imaginary')
9.8 Summary
In this chapter, we developed the Bode and Nyquist frequency response
techniques for control-system design. Gain and phase margins indicate the
amount of uncertainty a feedback system can tolerate before becoming
unstable. The gain margin is related to the change in gain (process or
controller) that can be tolerated, while the phase margin is related to the change
in time delay that can be tolerated. From a practical perspective, we
recommend a gain margin of at least 2.5 and phase margin of at least 60° to
assure robustness.
The basic concepts covered were as follows:
Amplitude ratio (AR): Ratio of the output to input
amplitudes.
Phase angle (φ): Peak-to-peak shift between input and
output curves.All-pass: A transfer function with constant amplitude
at all frequencies.
Nonminimum phase: Generally, transfer functions
with time delays and RHP zeros.
Bode stability criterion: Amplitude ratio of gcgp
 < 1 at
−180°.
Nyquist stability criterion: The critical point (−1,0) is
not encircled by gcgp
.
Gain margin: Multiplicative factor tolerated by gcgp
before losing stability.
Phase margin: Phase-angle error tolerated by gcgp
before losing stability.
Reference
The following text contains an advanced discussion of control system design
for robustness:
Morari, M., and E. Zafiriou. (1989). Robust Process Control. Englewood
Cliffs, NJ: Prentice-Hall.
Student Exercises
1. Find the time-domain solution for the output of a first-order process, with
an input sine wave of magnitude A at frequency ω.
2. The peak day length (in terms of hours of daylight) occurs on 21 June,
while the peak average daily temperature occurs on 21 July (30 days
later). Assuming that the relationship between daylight hours and average
daily temperature can be modeled by a first-order transfer function,
estimate the time constant of Earth’s weather system (provide the units).
Also, what are the units of the “process gain”?
3. Apply the Ziegler-Nichols method to a second-order + deadtime processwhere kp
 = 1.5°F/gpm, θ = 5 minutes, τ1
 = 3 minutes, τ2
 = 15 minutes.
a. Use a Bode plot to find critical (ultimate) proportional gain (kcu) for a
P-only controller that will make the closed-loop system nominally
stable (gain margin = 1, phase margin = 0). Also, find the ultimate
period.
b. Find the gain and phase margins for a Ziegler-Nichols P-only
controller. How much gain uncertainty can be tolerated? How much
deadtime uncertainty can be tolerated?
c. Find the gain and phase margins for a Ziegler-Nichols PI controller.
How much gain uncertainty can be tolerated? How much deadtime
uncertainty can be tolerated?
d. Find the gain and phase margins for a Ziegler-Nichols PID controller.
How much gain uncertainty can be tolerated? How much deadtime
uncertainty can be tolerated?
e. Would you recommend the Ziegler-Nichols tuning if you desired the f
ollowing gain and phase margins: gain margin, >2.5; phase margin,
>60°?
f. Compare the closed-loop responses, for step setpoint changes, of the
controllers obtained in parts b, c, and d. Show both output and
manipulated input responses. Recommend a set of tuning parameters.
4. For the open-loop system [gol(ω) = gpgc
(ω)] shown here, find the gain and
phase margins. Also, show your work on the diagram. The unit circle is
plotted for convenience.5. Consider a pH control problem that has the transfer function
A PI controller with kc
 = 4.35 and τ1
 = 69 yields the following Bode plot.
Find the controller gain that will provide a gain margin of 2.6. The Bode plots for a particular system are shown here. You know that
there is no gain uncertainty in this process; however, when you implement
the tuning parameters, the feedback system is unstable. At least how much
additional deadtime was not included in your model?7. A first-order + time delay process is controlled by a PI controller. The
Nyquist plot for kc
 = 4.9688 and is shown here. Keeping constant, find the
proportional gain that will yield a gain margin of 3.8. A process under P-only control has the following Bode plot for kc
 = 1.
What is the ultimate gain (kcu) and period (Pu
)? If the Ziegler-Nichols
recommended controller gain for P-only control is used, what will be the
phase margin? Recall that Ziegler-Nichols recommended kc
 = 0.5 kcu for
P-only control.9. Consider the following Bode plot for a system under PI control.
a. Sketch the Nyquist diagram.
b. How much can the controller gain be increased if a gain margin of 2 is
desired?
c. How much can the deadtime increase before the system goes unstable?10. The transfer function for the van de Vusse reactor is given here; the input
variable is dilution rate (F/V, min−1), and the output is concentration of
component B (mol/liter). Find the gain and phase margins for the Ziegler￾Nichols recommended P, PI, and PID parameters. Show the resulting
closed-loop time-domain responses to a unit setpoint change.
11. The IMC-based PID design procedure for the van de Vusse reactor results
in a PID with first-order lag controller (Chapter 7, Table 7–1, row F). Findhow the gain and phase margins vary as a function of the IMC filter
factor, λ. Vary λ from 0.1 minutes to 1 minute. What is the recommended
value of λ if the minimum gain and phase margins are 3 and 75°,
respectively?
12. Consider the following transfer function model relating insulin infusion
rate (U/min) to blood glucose (mg/dL):
A closed-loop artificial pancreas manipulates the insulin infusion rate to
control blood glucose. A PID controller with the following parameters
(see Module 12, “Automated Insulin Delivery”) has been designed:
kc
 = −0.02133 (U/hr)/(mg/dL), τI
 = 450 min, τD = 90 min
Because the transfer function is based on a timescale of minutes, the
controller gain that must be used is
kc
 = −0.02133 (U/hr)/(mg/dL)*(hr/60 min) = −0.000355 (U/min)/(mg/dL)
Find the gain and phase margins for this controller.Chapter 10. Cascade and
Feedforward Control
The objective of this chapter is to develop feedforward- and cascade-control
system design procedures. The emphasis of both of these strategies is on
rejecting disturbances. After studying this chapter, the reader should be able to
• Given an instrumentation diagram for a cascade-control strategy, develop
the corresponding control block diagram using either a series or parallel
structure.
• Tune cascade controllers; tune the secondary loop first; then tune the
primary controller with the secondary loop closed.
• Given an instrumentation diagram for feedforward/feedback control,
develop the corresponding control block diagram.
• Develop the closed-loop transfer functions for feedforward/feedback
control.
• Design feedforward/feedback controllers. Understand physical realizability
limitations due to time delays and right half-plane (RHP) zeros.
The major sections of this chapter are as follows:
10.1 Background
10.2 Introduction to Cascade Control
10.3 Cascade-Control Analysis
10.4 Cascade-Control Design
10.5 Feedforward Control
10.6 Feedforward Controller Design
10.7 Summary of Feedforward Control
10.8 Combined Feedforward and Cascade
10.9 Summary10.1 Background
Thus far in this text, we have emphasized control-system design for single
input–single output (SISO) processes; that is, processes with one output
(measured) variable and one manipulated variable. We have also focused on
setpoint responses, primarily because it is then easier to tune a feedback
controller. In particular, it is easier to tune on-line for setpoint changes because
we do not know when a disturbance is going to enter a system. We have
developed a number of control-system design procedures that are based on a
desired response to a setpoint change.
In practice, disturbance rejection is very important. The primary disadvantage
to feedback-only control is that a disturbance must be “felt” by the output
variable before there is a control-system response. The purpose of this chapter
is to show how to use multiple measurements to improve the response to a
disturbance. In Sections 10.2, 10.3, and 10.4, we study cascade control. In
cascade control, multiple output measurements are used to improve the
response of the most important (primary) output to a disturbance. In the last
part of the chapter (Sections 10.5, 10.6, and 10.7) we cover feedforward
control, where the measurement of a disturbance is directly used to improve the
system response to the disturbance. In Section 10.8, we combine feedforward
and cascade control.
10.2 Introduction to Cascade Control
Cascade control involves the use of multiple measurements and a single
manipulated input. As a motivating example, consider the temperature-control
problem shown in Figure 10–1a, where a fired furnace is used to heat a process
fluid stream. The outlet temperature is controlled by manipulating the valve
position of the fuel gas control valve. Clearly, disturbances in the fuel gas
header pressure (upstream of the valve) will end up changing the fuel gas flow
rate, and, therefore, the outlet temperature. Also, any problems with the control
valve, such as stiction or hysteresis, will affect the fuel gas flow rate.
Cascade to Flow Control
The best way to compensate for disturbances directly affecting the fuel gas
flow rate is to cascade the temperature controller to a fuel gas flow controller,as shown in Figure 10–1b. Here, the output of the temperature controller is the
setpoint to the fuel gas flow controller. The output of the flow controller is the
pressure to the control valve, which changes the valve position and, therefore,
the flow rate. Any change in the fuel gas header pressure will be felt
immediately by the flow measurement,1
 allowing the flow controller to take
immediate corrective action. A block diagram of this strategy is shown in
Figure 10–2.
1Note that the flowmeter has been placed upstream of the control valve. This is
common practice because a length of straight-run piping is needed upstream of
the flowmeter for reasonable accuracy. Also, the pressure upstream of the valve
is relatively constant (making the fluid density relatively constant) compared to
the downstream pressure.
Figure 10–1 (a) Feedback control of process outlet temperature by
manipulating the fuel gas valve. (b) Cascade control of process outlet
temperature by adjusting the fuel gas flow setpoint, which then
manipulates the fuel gas valve.
In this strategy, the temperature controller is known as the primary, master, or
outer-loop controller, while the flow controller is the secondary, slave, orinner-loop controller. The dynamics of the flow control loop are very fast,
making the flow controller easy to tune. The temperature-control loop is much
slower, so the primary loop can be effectively tuned as if the flow controller
response is instantaneous.
For cascade control strategies where flow control is the inner loop, a control
block diagram where the secondary and primary process transfer functions are
in series (as in Figure 10–2) is natural. The primary disturbance (process inlet
temperature) directly affects the primary output (process outlet temperature),
with no direct effect on the secondary output (fuel gas flow rate, which is also
the manipulated input for the primary process). The secondary disturbance
(fuel gas header pressure) directly affects the secondary output, so the control
block diagram shown in Figure 10–2 is relatively straightforward to generate.
This is known as a series representation for the block diagram that is useful
when the “secondary” process (such as the control valve or fuel gas flow rate)
is naturally separated from the “primary” process (the heater and process fluid).
It should be noted that other primary disturbances, such as process fluid flow
rate, could easily be added to the diagram. See Exercise 9 for a numerical study
of this process.
An example of the improved performance achievable with cascade control is
shown in Figure 10–3, where a 1-psig disturbance in fuel gas header pressure
occurs at t = 0 minutes. In the cascade-control strategy (Figure 10–1b), the
flow controller (secondary controller) rejects the header pressure disturbance
before it is even “felt” by the process outlet temperature, since there is a
primary process time-delay of one minute. The standard feedback controller
(Figure 10–1a) has poor performance due to the process time delay. It should
be noted that setpoint changes and responses to a primary disturbance (process
feed temperature) are the same for both control strategies (see Exercise 9 for a
numerical study).Figure 10–2 Cascade control block diagram for the fired heater. Series
transfer function form.Figure 10–3 Response to a disturbance in fuel gas header pressure of 1
psig. Comparison of cascade control with standard feedback control.
Reactor Temperature Cascade Control
As another example of cascade control, consider the stirred-tank reactor shown
in Figure 10–4a. In the standard feedback-control strategy, the temperature of
the reactor is measured and the jacket flow rate is manipulated. If there is a
disturbance in the jacket feed temperature, it will affect the jacket temperature,
which will affect the reactor temperature. In the cascade-control strategy
(Figure 10–4b), the temperature of the reactor is measured and compared with
the desired reactor temperature. The output of this reactor temperature
controller is a setpoint to the jacket temperature controller. The jacket
temperature controller manipulates the jacket flow rate. Notice that two
measurements (reactor temperature and jacket temperature) are made but only
one manipulated variable (jacket flow rate) is ultimately adjusted.In this strategy, the reactor temperature controller is the primary (master or
outer loop) controller, while the jacket temperature controller is the secondary
(slave or inner loop) controller. This is effective because the jacket temperature
dynamics are normally significantly faster than the reactor temperature
dynamics. An inner-loop disturbance, such as jacket feed temperature, will be
felt by the jacket temperature before it has a significant effect on the reactor
temperature. This inner-loop (secondary) controller then adjusts the
manipulated variable before a substantial effect on the primary output has
occurred.
Notice that an appropriate block diagram representation of cascade control is
less obvious here. Jacket flow rate certainly has a direct effect on the jacket
temperature, which then affects the reactor temperature; one would think that a
series representation would again be appropriate. Notice, however, that the
jacket and reactor temperatures interact in a way that is different than the
primary and secondary processes of the fired heater. Here, the reactor and
jacket temperatures are directly coupled by the heat transfer between them. A
change in the reactor temperature causes a change in jacket temperature, and
vice versa; a simple input-output transfer function block diagram does not truly
capture this behavior. A more appropriate representation is shown in Figure
10–5, where a state space model is used to represent the interactions, and the
temperatures are simply viewed as two outputs from the process. See Exercise
10 for a numerical study of a similar stirred-tank heater problem.Figure 10–4 Stirred-tank reactor. (a) Feedback control of temperature by
manipulating flow to cooling jacket. (b) Cascade control by changing
jacket temperature setpoint, which then manipulates flow to cooling
jacket.
Figure 10–5 Cascade control block diagram for a jacketed chemical
reactor. State-space form for the reactor.
10.3 Cascade-Control Analysis
There are two common ways to represent a cascade-control system in transfer
function form: series cascade and parallel cascade. The series cascade
representation shown in Figure 10–6 is the most common, so it will be used in
the analysis performed in this section. Students interested in analysis using the
parallel structure can work Exercise 11.Figure 10–6 Series cascade structure
We use the following algebraic manipulations to understand the effect of the
secondary (inner-loop) on the primary (or outer) loop. Notice that the
secondary output can be written
The secondary closed-loop transfer function can be defined as
Further analysis, because u1
 = y2
, yields
which is shown clearly in the block diagram in Figure 10–7. After tuning the
inner loop, we can use the following transfer function to design the outer-loop
controller,and the closed-loop relationship for a primary setpoint change is
Figure 10–7 Series cascade structure using a closed-loop transfer function
for the inner-loop (inside dashed line on Figure 10–6)
where it is clear that the secondary closed-loop transfer function affects the
primary control loop. Notice that if the secondary control loop is much faster
than the primary loop, so that gc2CL ≈ 1 (on a relative timescale to the primary
control loop), then the closed-loop transfer function for the primary loop is
10.4 Cascade-Control Design
Tuning the cascade controller consists of two steps. First, tune the inner-loop
controller [gc2
(s)] based on the secondary process [gp2
(s)] and use the inner￾loop/closed-loop transfer function [Equation (10.2)] to find an effective process
transfer function [Equation(10.4)] for tuning the outer-loop controller [gc1
(s)].The inner-loop control system design can be based on internal model control
(IMC)-based proportional-integral-derivative (PID) or any other procedure.
Once the inner-loop is tuned, the effective outer-loop transfer function can be
used to tune the outer-loop controller. Again, any control design procedure can
be used.
Rules of Thumb for Cascade Control
• Cascade control can be successfully used to reject secondary-process
disturbances when the primary process has a much larger time constant
and a time delay or RHP zero while the secondary process has a small
time constant and little or no deadtime or nonminimum-phase (RHP
zeros) behavior.
• The most common cascade-control loop involves a flow controller as the
inner loop. This type of loop easily rejects disturbances in fluid stream
pressure, either upstream or downstream of the valve.
• The inner loop (secondary, slave loop) in a cascade-control strategy should
be tuned before the outer loop (primary, master loop). After the inner loop
is tuned and closed, the outer loop should be tuned using knowledge of the
dynamics of the inner loop.
• Cascade control is widely used on chemical processes and should not be
considered an advanced control strategy.
• There is little or no advantage to using cascade control if the secondary
process is not significantly faster than the primary process dynamics. In
particular, if there is much deadtime in the secondary process, or if there is
an RHP zero, it is unlikely that cascade control will be much better than
standard feedback control.
• Cascade control can be easily combined with other forms of control, such
as feedforward control.
• Any of your favorite methods can be used for tuning the inner and outer
loops. Indeed, the IMC strategy can be used on either or both of the inner
and outer loops.
10.5 Feedforward ControlWhen a disturbance affects a process under feedback control, it is necessary for
a measured process output to change before corrective action is taken to change
the manipulated input. It would be preferable to have a sensor that measures
the disturbance and adjusts the manipulated input before the process output
changes. Consider the furnace system studied earlier in this chapter and shown
in Figure 10–8a. One possible disturbance is the process fluid flow rate; if the
flow rate increases 20%, then the required heat duty should also increase by
20%. The purpose of the feedforward control strategy shown is to immediately
change the fuel gas flow rate (for simplicity, we assume that the fuel gas flow
rate is directly manipulated in this diagram) when a change in the process flow
rate is sensed.
For this furnace example, the steady-state energy balance can be used to find
the fuel gas flow rate,
where F = process stream flow rate, ρ = density, cp
 = heat capacity, T = desired
outlet temperature, Tf
 = feed temperature, ε = furnace efficiency, and ΔHc
 =
heat of combustion of fuel gas. A steady-state feedforward controller computes
the fuel gas flow rate based on the measured process flow rate (and possibly
the process feed temperature). Sometimes it is important to also consider
dynamic effects, as shown in several examples that follow.
The performance of feedforward control is limited by model uncertainty.
Without a perfect process model, the controller cannot completely compensate
for disturbances and there will generally be offset. In practice, feedforward
control is combined with feedback control, as shown in Figure 10–8b. Here,
the feedforward controller compensates for process flow rate disturbances,
while the feedback controller compensates for other disturbances and model
uncertainty. The corresponding block diagram is shown in Figure 10–9.Figure 10–8 (a) Feedforward control of temperature based on the
measured process fluid flow rate (disturbance input). (b) Feedforward
combined with feedback control.
Consider the feedforward/feedback block diagram shown in Figure 10–9. We
can develop the closed-loop transfer function by using the following steps:
Rearranging, to solve for y(s), we find
or
Equation (10.6) is the closed-loop relationship for feedforward/feedback
control. Notice that a (stable) feedforward controller does not affect the closed-loop stability, because the feedforward controller transfer function does not
appear in the closed-loop characteristic equation (denominator polynomial).
Figure 10–9 Feedforward/feedback control block diagram for the furnace
example
10.6 Feedforward Controller Design
Remember that we are working in deviation variables. Assume that we are not
making a setpoint change, so r(s) = 0. Because we do not want the output
variable to change, that is equivalent to saying that we desire y(s) ≈ 0. From
Equation (10.6), we can see that the only way to assure y(s) = 0 is for the
following relationship to hold:
In this expression, all the transfer functions are determined for a particular
system, except for the feedforward controller, gcf(s). Solving Equation (10.7)
for gcf(s), we findIf we make the simplifying assumption that the disturbance measurement has
no dynamics, then
Notice that Equation (10.9) requires the inverse of the process model. Clearly,
there will be problems if the process model has RHP zeros or if the process
time delay is greater than the disturbance time delay. The use of Equation
(10.9) as a feedforward design equation is shown in Examples 10.1 through
10.4.
Example 10.1: First-Order Process and Disturbance Transfer
Functions
Consider the first-order process and disturbance transfer functions
The feedforward control law, from Equations (10.9) and (10.10), is
which is simply a lead-lag controller. Most control systems have feedforward
controllers that are of lead-lag form.
Numerical Example
Here we study the case where kd
 = kp
 = 1 and τd
 = τp
 = 5 minutes. If we use the
IMC-based PI procedure for feedback control, we find that τI
 = 5 and kc
 = 2 for
λ = 2.5 minutes. We compare the disturbance rejection of feedback-only with
feedforward/feedback control in Figure 10–10 for a unit step change in the load
disturbance at t = 0. The feedforward controller is a static controller with kcf =
1 for this case. Notice that the feedforward controller implements an immediate
change in the manipulated input to counteract the disturbance, yielding the
improved response shown in Figure 10–10.Figure 10–10 Comparison of feedforward/feedback with feedback-only
for numerical example
Example 10.2: First-Order + Deadtime Process and Disturbance
Transfer Functions
Consider the transfer functions
The feedforward control law, from Equations (10.9) and (10.12), is
which is simply a lead-lag feedforward controller with a time delay. The main
thing that we notice about Equation (10.13) is that θd
 ≥ θp
 is required for the
controller to be realizable. If θp
 > θd
, we cannot have a time-delay term in thefeedforward controller and must accept the fact that we cannot have perfect
feedforward control, even if the models are perfect.
Example 10.3: Process Higher Order than Disturbance Transfer
Function
Consider the following transfer functions:
The feedforward controller is
Because Equation (10.15) is improper, it is not physically realizable. We could
simply add a first-order filter, perhaps something like 1/(s + 1), to make the
feedforward controller second order over second order. Perhaps the simplest
thing to do is to make the numerator term first order. Most likely, we would use
18s + 1 to approximate the numerator to arrive at the lead-lag controller
Numerical Simulation
Assume that an IMC-based PID controller is used for feedback control. With λ
= 9, we find (from Table 7–1) that kc
 = 1, τI
 = 18, and τD = 2.5. Figure 10–11
compares the closed-loop response of the simplified feedforward/feedback
[Equation (10.16)] with feedback-only to a unit step change in load disturbance
at t = 0. Although the feedforward/feedback control is not perfect, the
performance is substantially better than feedback only control. This
performance is achieved by the initial manipulated variable action that is
characteristic of lead-lag feedforward controllers with a numerator lead time
constant that is greater than the denominator lag time constant (see the lead-lag
transfer function behavior in Chapter 4, “Dynamic Behavior: Complex
Systems”).
Example 10.4: Process Has Inverse Response, Disturbance Does
NotConsider the process and disturbance transfer functions
Figure 10–11 Comparison of feedforward/feedback with feedback-only
The feedforward controller is
Notice that Equation (10.18) has an RHP pole and is therefore unstable. We
must factor RHP zeros from the process transfer function before designing a
feedforward controller. In all likelihood, we would neglect the dynamic part
and use only a static feedforward controller, as shown next in Equation (10.19).Static Feedforward Control
Often, we are satisfied to neglect the differences in the dynamics between a
process and a disturbance, and to simply design a static feedforward
compensator,
This will get us the majority of the performance improvement over feedback￾only control.
Example 10.5: Disturbance Is a Pulse Input
The previous examples have assumed that the disturbance enters as a step
change. In practice, disturbances can have many forms, including steps, ramps,
sinusoidal, and various combinations. For physiological systems, an impulse
input disturbance is common. Consider the application to type 1 diabetes
discussed in detail in Module 12, “Automated Insulin Delivery.” An individual
with type 1 diabetes may consume a meal consisting of 50 g of carbohydrates,
for example. This amount would be considered an impulse disturbance if
consumed over a short period of time. If consumed over 10 minutes, then this
could be considered as a pulse with 5 g/min of carbohydrates consumed for a
10-minute period. If this individual has a carb/insulin ratio of 15 grams per
Unit of insulin (15 g/U), then they would “feedforward” an impulse of 3.33
Units of insulin at mealtime. When combined with feedback control, their
ability to regulate blood glucose is improved over feedback-only, as shown in
Figure 10–12. Notice that the 3.33 Units of insulin is delivered over 5 minutes,
for a rate of 0.6667 U/min, which corresponds to 40 U/hr. While the simulation
is shown for a 10-hour period, in practice an individual is likely to eat another
meal within 4 to 5 hours. The reader is encouraged to work through Module 12
to appreciate the challenges faced by someone with type 1 diabetes.Figure 10–12 Comparison of closed-loop responses for a 50 g
carbohydrate meal for someone with type 1 diabetes. The feedforward
algorithm, which provides an improved response over feedback-only.
10.7 Summary of Feedforward Control
We have developed feedforward control based on models of the disturbance
and process transfer functions. If the disturbance and process models are not
available, feedforward control can still be implemented as a tunable gain plus
lead-lag controller. You should consider the following important issues when
implementing feedforward control:
• The feedforward controller must be physically realizable and stable, as
noted by the next three items.
• The disturbance time delay must be greater than the process time delay
for perfect feedforward compensation. If the process time delay is
greater than the disturbance time delay, the feedforward controller will
have no time-delay compensation, and perfect control cannot be
achieved.• If the process has an RHP zero, it must be factored out before designing
the feedforward controller. Otherwise, the feedforward controller will
be unstable.
• If the process is higher order than the disturbance, fast time constants
probably must be neglected in designing the feedforward controller.
• Often a static feedforward controller will have good performance,
particularly if the disturbance dynamics are the same timescale as the
process dynamics.
• A feedforward controller does not change the closed-loop stability of the
feedback system, assuming the feedforward controller is stable. Also, a
feedforward controller does not change the setpoint response of a closed￾loop system.
• Feedforward control can be implemented with either the classical feedback
(PID-type) or IMC structure.
10.8 Combined Feedforward and Cascade
In Section 10.5, a fired heater was used to provide motivation for feedforward
control. In the example, it was assumed that the fuel gas flow was directly
manipulated. In practice, a flow controller would be used, resulting in the
feedforward-, feedback-, and cascade-control strategy shown in Figure 10–13.
Notice that each “mode” is used to reject a different type of disturbance. The
feedforward controller is used to reject feed flow rate disturbances. The fuel
gas flow controller is used to reject disturbances in the fuel gas header
pressure. The temperature controller plays a role in compensating for all
disturbances. See Exercise 19 for a numerical example.
A common process that combines feedforward/feedback and cascade control is
a steam drum. See Module 9, “Surge Vessel Level Control,” for a case study of
steam drum level control.
10.9 Summary
Disturbance rejection provides the motivation for cascade and feedforward
control. Cascade control uses a secondary process measurement to detect andcorrect for a disturbance before it affects the primary process output.
Feedforward control uses a direct measurement of the disturbance to change
the manipulated input before the disturbance affects the output. It is common to
combine feedforward/feedback with cascade control, as shown in the furnace
control block diagram, Figure 10–13.
Although some texts refer to cascade and feedforward control as “advanced
control,” these techniques are commonly used in industry. Almost every
control system that has a flow rate as a manipulated variable will have a flow
controller as an inner loop in a cascade strategy.
References
A number of feedforward control examples are presented in the following
sources:
Badavas, P.C. (1984, October 15). “Feedforward Methods for Process Control
Systems.” Chem. Eng., 103–108.
Stephanopoulos, G. (1984). Chemical Process Control: An Introduction to
Theory and Practice. Upper Saddle River, NJ: Prentice Hall.Figure 10–13 Feedforward, feedback, and cascade control of a fired
heater
Student Exercises
1. Derive the closed-loop transfer function relating the primary setpoint to
the primary process output for a cascade-control system.
2. Derive the closed-loop transfer function relating a secondary disturbance
to the primary output for a cascade-control system.
3. For the following process, develop the double-cascade-control loop
diagram, where the jacket flow controller is a “tertiary controller.” Use the
state-space form similar to Figure 10–4b, where jacket flow rate is an
input to the state-space representation of the reactor.
4. Consider the following instrumentation diagram for a chemical reactor.
Csp represents a concentration setpoint.Draw the control block diagram for this system. Label every transfer
function and signal on the diagram. What type of control strategy would
you call this? What is the primary measured variable for this system?
What is the primary control variable for this system? Which controller is
probably tuned to be the slowest? Which controller is probably tuned to be
the fastest? What is the gain for device D1 if a current signal (4–20 mA) is
being converted to a neumatic signal (3–15 psig) (show units)?
5. For a particular biochemical reactor, the concentration of the
microorganism (bug) is controlled by varying the pH in the reactor. The
pH is controlled by manipulating the flow of caustic solution to the
reactor. The bugs grow by “eating” a waste chemical in the feed stream.
a. Complete the following instrumentation diagram. Draw the control
block diagram associated with the bug concentration control strategy.
b. What type of control strategy is this (for the bug concentration
control)?
c. Identify the control objective and possible disturbance variables. Name
the disturbance variables that each controller is meant to reject.6. As a budding young engineer in the semiconductor device manufacturing
industry, your first assignment involves a chemical vapor deposition
reactor. Before you obtained this position, the process did not have many
feedback control loops. Your goal is to design a control system that can
control the growth rate of a thin film on a wafer. A spectroscopic
ellipsometer is available to measure the growth rate of this film. The
growth rate is a function of the composition [mole fraction of TMG
(trimethyl gallium)] of the inlet feed stream. The composition of the inlet
feed stream is a function of the flow rate of hydrogen that bubbles through
a bottle of TMG.
Draw the following control instrumentation diagram. Now, draw the
corresponding control block diagram, in order to be able to analyze the
control loops and tune the controllers. Label all controllers, measurement
devices, and signals on the block diagram.7. Consider the following depiction of the bottom portion of a distillation
column. It is desired to control the composition of the bottom stream at a
certain value (set-point) by manipulating the steam to the reboiler.
Composition is a slow variable, and the measurement device can have
significant delays; it is known that measuring and controlling the
temperature of a tray in the column can improve disturbance rejection.
The temperature is regulated by the pressure of the steam in the reboiler,
which is a function of the steam flow to the reboiler. Show the proper
signals for a cascade type of control system. Also, develop the
corresponding block diagram, showing clearly the disturbances that each
loop is meant to reject.8. A common type of chemical reactor is a packed-bed reactor, which is
assumed to operate adiabatically (no heat loss). The objective of the
following reactor control strategy is to maintain a desired reactor outlet
concentration by manipulating the temperature of the inlet stream to the
reactor. The reactor inlet temperature is maintained by manipulating the
steam flow to a feed preheat exchanger. Connect the measurements and
control devices on the control instrumentation diagram and draw the
corresponding control block diagram. Label all controllers and signals on
both the control instrumentation and control block diagrams. Draw
appropriate disturbances on the control block diagram.
9. As a young process engineer, you have been given the responsibility for a
catalytic reforming unit at a refinery that, for some reason, is just nowgetting involved with “advanced control.” The catalytic reforming unit
produces roughly 25% of the gasoline produced by the refinery. The
throughput of the unit is 25,000 barrels per day (Bbl/day) and the value is
roughly $30/Bbl. The gross operating income of the unit is then roughly
$1 million/day. You feel certain that tighter control can improve the yield
of the unit, increase the value of the product, and reduce operating costs.
The reforming unit consists of three fuel gas-fired furnaces and three
catalytic reactors with a number of additional heat exchangers and
separation columns. You feel that you must prove that advanced control
can work on part of the process before you attempt to implement it on the
entire process. You decide that the place to start is on the temperature
control of the process fluid leaving the first furnace.
A simplified process instrumentation diagram for the furnace that heats
the process stream for the first reactor is shown in Figure 10–1a. The “old
school” operations personnel have been controlling the outlet temperature
of the process stream by simply manipulating the fuel gas valve directly.
You realize that this method allows fuel gas header pressure changes to
affect the fuel gas flow rate, which will affect the process fluid outlet
temperature. You wish to show the benefits of cascade control for this
system. Use your practical engineering knowledge, a number of
discussions with the process operators responsible for the reforming unit,
an investigation of the unit log books, and determine the following.
Relevant information:
a. For each increase of 1 psig to the fuel gas valve actuator, the fuel gas
flow rate increases by 83.3 scfm (standard cubic feet per minute).
b. For each increase of 1 scfm in fuel gas flow, there is an increase in the
outlet reformate stream temperature of 0.36°F.
c. For a change in the upstream fuel gas header pressure of 1 psig, there is
a corresponding change of 13.5 scfm in the fuel gas flow rate.
d. For a change in the inlet process stream of 1°F, there is a change of 1°F
in the outlet temperature.
e. You assume that the time constant associated with the control valve is
roughly 6 seconds (0.1 minutes).
f. The process time constant associated with the furnace is approximately
5 minutes and there is an additional 1 minute time delay.Design a cascade-control strategy and compare results (using Simulink)
with the standard feedback-control strategy for two types of disturbances:
fuel gas header pressure (±5 psig), and process stream inlet temperature
disturbances (±25°F).
10. Consider a stirred-tank heater that has the following process model:
with the parameter and variable values
V/F = 30 minutes
UA = 24 kcal/min °C
Tjf = 120°C
T = 40°C
Tf
 = 20°C
a. Find the state space model for these conditions if the inputs are Fj
, Tjf,
and Tf
.
b. Show that the linear transfer function model has the form of the
following block diagram and find all of the process and disturbance
transfer functions. Is a zero of the secondary process transfer function
related to the pole of the primary process transfer function?c. If changes in the vessel temperature are slow and can be neglected so
that only the second (jacket temperature) equation is considered, find
the secondary transfer function, gp2
 (this is first-order). How does this
compare with part b?
11. Consider a cascade control block diagram based on a parallel process
representation (note that the disturbances are excluded here). Show that
the closed-loop transfer function for the inner-loop is the same as for the
series representation. Derive the closed-loop transfer function for the outer
loop as a function of the inner-loop closed-loop transfer function. Also,
relate gp
 to gp1
 and gp2
.12. Anesthesiologists often deliver propofol to achieve a desired “depth of
anesthesia” (DOA) during surgery. You have decided to study medicine
and end up doing an anesthesiology internship. One of your friends has
devised a DOA sensor, and one of your chemistry friends has developed a
sensor to measure the blood propofol concentration. You decide to design
a cascade control strategy, where the output of a DOA controller is the
setpoint for a blood propofol concentration controller. The output of the
propofol concentration controller is a pump flow rate setting. Draw your
proposed control strategy on the following patient and instrumentation
diagram.13. Use physical reasoning to discuss why the disturbance deadtime must be
greater than the process deadtime to even have the possibility of perfect
feedforward disturbance compensation.
14. Let 
Design a feedforward controller, gcf(s), for this system. Elaborate on its
expected performance.
15. A mixing vessel is used to maintain a desired pH level in a stream flowing
to a waste treatment plant. The pressure to the valve on an acid stream is
used as the manipulated variable. Most of the variability in pH is due to
waste stream 1, which is a caustic stream. It is desirable to implement a
feedforward controller to reject the pH disturbances due to this stream.The following data are relevant to this problem. Without control, a change
in the inlet pH of 0.5 leads to a change of 0.25 pH in the outlet stream.
The time delay is 10 minutes, and the time constant is 30 minutes. A
change in the acid stream valve-top pressure of 1 psig leads to a change in
pH in the outlet stream of 0.4 pH. The time constant is 25 minutes, and the
time delay is 7.5 minutes. Design a feedforward controller for this
process. Show units.
16. Consider the IMC block diagram with feedforward control shown below,
withDerive the following closed-loop relationship for IMC with feedforward
control:
and show that there is no offset for a step load disturbance.
17. Consider again the reactor control system from Exercise 8. If there is also
a measurement of the concentration of the reactor feed stream (before it
enters the heat exchanger), show how it can be used in a feedforward￾control strategy (using the previously developed cascade type of strategy).
Show this on both the following control instrumentation diagram and the
control block diagram.
18. Design a feedforward/cascade control strategy for the following level￾control problem. Draw the instrumentation directly on the figure. Draw acontrol block diagram, labeling all the signals on the diagram.
19. Consider the heater shown in Exercise 9. Now consider implementing
feedforward and cascade control when process flow disturbances can
occur, as shown here.
For a change in the inlet process flow rate of 1,000 Bbl/day, there is a
change of −10°F in the outlet temperature. Also, the dynamic behavior
can be described by a first-order lag of 5 minutes and a 1-minute time
delay. Use the information from Exercise 9 to design a
feedforward/feedback/cascade control strategy, and perform simulations
for a step feed flow rate disturbance of 2,000 Bbl/day.20. An individual with type 1 diabetes must administer insulin, which affects
the insulin concentration in the blood (and interstitial fluid), which then
affects the blood glucose. A colleague has proposed an automated insulin
dosing system that uses an additional measurement. The primary
measurement is a continuous glucose monitor (CGM), used as an
indicator of blood glucose. A novel additional measurement that your
colleague has developed is the interstitial fluid insulin concentration.
Propose a cascade control system and draw the controllers and signals on
the following diagram.Chapter 11. PID Enhancements
[This content is currently in
development.]
This content is currently in development.Chapter 12. Ratio, Selective, and
Split-Range Control
After reading this chapter, the reader should be able to understand and develop
ratio, selective, and override control, and split-range control strategies. Ratio
control is similar to feedforward control, while selective and override control
choose between alternative outputs or inputs. Split-range control chooses
between two or more control valves to implement a manipulated input.
The major sections of this chapter are as follows:
12.1 Motivation
12.2 Ratio Control
12.3 Selective and Override Control
12.4 Split-Range Control
12.5 Simulink Functions
12.6 Summary
12.1 Motivation
In Chapter 10, “Cascade and Feedforward Control,” we discussed feedforward
and cascade-control strategies. The purpose of these control strategies was to
take advantage of additional measurements to improve the disturbance
rejection capability. In this chapter, we also develop strategies that use more
than one measurement and, in addition, manipulate more than one input. Ratio
control, presented in Section 12.2, is very similar to feedforward control. In
Section 12.3, we discuss selective and override control, which involves the use
of “selectors” to decide the proper control action to take. In Section 12.4, split￾range control is presented as a way to use more than one valve to regulate a
process.12.2 Ratio Control
Ratio control is similar to feedforward control because both typically involve
the measurement of a stream flow rate. Ratio control is often used in
component blending problems. Consider the control strategies shown in Figure
12–1, where stream A is a “wild stream” (disturbance) and it is desirable to
maintain the flow rate of stream B at a constant ratio to stream A. In Figure 12–
1a, the FB
/FA
 ratio is calculated and sent to a ratio controller. In Figure 12–1b,
the flow rate of stream A is measured and multiplied by desired ratio to
determine the setpoint for the stream B flow rate.
Alternative 12–1b is favored over 12–1a because it results in a linear input￾output relationship. In Figure 12–1a, the steady-state relationship between the
manipulated input (valve position, related to FB
) and the measured output (the
ratio, FB
/FA
) is
and the steady-state process gain is
Clearly, the process gain varies as a function of the flow rate of stream A. This
means the ratio controller would need to be tuned differently depending on the
stream A flow rate. In contrast, the relationship between the manipulated input
(valve position, related to FB
) and the measured output (FB
) for the flow
controller in Figure 12–1b is
so the gain is
which is constant.
The ratio could be specified to maintain an excess of component B in a
reaction, for example. A common use of this would be the supply ofcombustion air to a furnace. Stream A could represent the fuel gas, for
example, and stream B would represent the combustion air.
The blend stream could also have a composition or product property
measurement and controller; the output of this controller would be cascaded to
the desired ratio of stream B flow to stream A flow. In Exercise 1, you have the
opportunity to sketch this control strategy.
Figure 12–1 Ratio control. Comparison of two alternatives.12.3 Selective and Override Control
Often, a controller needs to select from a set of possible measurements for
control. For example, consider the packed-bed reactor shown in Figure 12–2. It
is important to maintain the “hot spot” temperature at a certain value to
minimize catalyst degradation. In this strategy, the “high selector” (represented
as the block with >) chooses the highest of three bed temperatures to send to
the temperature controller. In algorithmic form, let T1
, T2
, and T3
 represent the
three temperature measurements, and T represent the temperature measurement
used by the controller, then
Figure 12–2 High-temperature selector for a packed-bed reactor.
When manipulating the fuel gas flow to a fired heater (furnace), it is important
to make certain that a minimum air/fuel ratio is maintained. High/low selectors
can be used to assure this, as shown in Figure 12–3; here the A/F boxes
indicate the air/fuel ratio. To understand how this strategy works, first consider
a positive change in the fuel flow set-point. Notice that the combination of high
and low selectors will force the combustion air flow rate to increase before the
fuel flow increases. Also, if a decrease in fuel flow setpoint is made, the fuelflow must decrease before the combustion air flow. This strategy makes certain
that excess combustion air is always available.
In practice, this strategy is just one part of the overall furnace control strategy.
Usually, the fuel flow setpoint will be the output of another controller (for
example, process fluid temperature or steam system pressure), and the air/fuel
ratio might be the output of a furnace stack gas O2
 or CO measurement and
control strategy.
12.4 Split-Range Control
A split-range strategy is often used in situations where one or more valves may
be used, depending on the operating scenario. An example application is a
batch reactor. Batch reactors must often be heated from ambient temperature to
a desired operating temperature. Particularly if the reaction is exothermic, then
cooling will be needed to maintain the desired reactor temperature. In the split￾range control strategy shown in Figure 12–4, if the jacket temperature
controller output is between 0% and 50%, the cold glycol valve is open; if the
jacket temperature controller output is between 50% and 100%, the hot glycol
valve is open. For safety reasons, we wish the cold glycol valve to fail-open
and the hot glycol valve to fail-closed. The diagram in Figure 12–5 more
clearly shows the relationship between valve positions and the jacket
temperature controller output.Figure 12–3 Use of high/low selectors for fuel gas and air flow control of
a fired heater. Notice the simplified representation for the air flow;
ordinarily, a damper inside an air duct would be adjusted to vary the air
flow.Figure 12–4 Batch reactor temperature control. The jacket temperature
controller has a split-range output, where the cold glycol valve is open
during cooling mode and the hot glycol valve is open during heating
mode.
The implementation is as follows. Let u represent the output of the jacket
temperature controller (0%–100%). Also, let vc
 and vh
 represent the cold and
hot glycol valve positions, respectively. The split-range algorithm can be stated
as
Sometimes there is a small deadband, where the cold glycol is open between
0% and 45%, while the hot glycol is open between 55% and 100%. This adds
the equivalent of a small time delay to the control strategy but avoids situations
where both cold and hot valves are open owing to small miscalibrations.
Example 12.1: 1000-Liter Stirred-Tank Heater
Here, we show results for a 1000-liter jacketed, continuous stirred-tank heater,
operated at 85% of capacity. For clarity, we consider only the jackettemperature controller, which is split-ranged, as shown in Figure 12–5.
Ordinarily, this jacket temperature controller would be the secondary (inner￾loop or slave controller) where the output of a vessel temperature controller
(outer-loop or primary controller) is the setpoint to the jacket temperature
controller.
The modeling equations are
Figure 12–5 Depiction of the split-range controller action.
where the jacket make-up flow rate (Fj
; of either cold or hot glycol) is the
process input. Numerical values are shown in Exercise 5.
The responses for setpoint changes in jacket temperature are shown in Figure
12–6. A positive setpoint change is made at t = 0 minutes, followed by a
negative change at t = 10 minutes. The middle plot shows the jacket
temperature controller output and the bottom plot shows the individual valve
positions. All variables are in deviation form. When the controller output ispositive, the hot valve is activated; when the controller output is negative, the
cold valve is activated.
12.5 Simulink Functions
Simulink has a number of built-in functions to perform ratio, selective, and
split-range control. Examples are shown here.
An example Simulink block diagram to implement a split-range jacket
temperature controller from Example 12.1 is shown in Figure 12–7. Because
this implementation is formulated in deviation variable form, the output of the
jacket temperature controller ranges from −50% to 50%. Saturation elements
are used for the cold and hot valve positions.Figure 12–6 Response to step setpoint changes in jacket temperature. All
variables are in deviation form.
Figure 12–7 SIMULINK implementation of a split-range strategy for a
jacket temperature controller.
12.6 Summary
Ratio control has many similarities to feedforward control. Usually, a wild
stream flow rate is measured and another stream is manipulated to maintain a
constant ratio to the wild stream. Selective and override strategies are often
used to improve the safety of a process system. A prime example is a fired
heater where it is important for combustion air to lead the fuel gas flow on
increasing loads but to lag fuel gas flow on decreasing loads. Split-range
control allows the use of two or more valves as manipulated inputs, depending
on the operating condition.
ReferencesRatio control is discussed in Myron Jr., T.J. (1983). “Feedback Methods for
Process Control Systems.” Chem. Eng. (Nov. 14), 233–238.
A number of selective control examples are shown in
Kurth, T.G. (1984). “How to Use Feedback Loops to Meet Process
Conditions.” Chem. Eng. (April 30), 77–83.
Student Exercises
1. Consider the ratio control strategy shown in Figure 12–1b. If the blend
stream has a concentration measurement and controller, construct the
control instrumentation diagram where the output of the concentration
controller is the desired ratio of stream B to stream A flows.
2. Consider the high-temperature select control problem shown in Figure
12–2. Modify the control instrumentation diagram to include a cascade￾control strategy, where the output of the reactor temperature controller is
the setpoint to a reactor inlet temperature controller. The reactor inlet
temperature controller then manipulates the flow to the preheat exchanger.
3. Consider a gas-phase reactor where a valve on the output stream is
normally regulated to maintain a desired outlet composition. Design a
selector-based control strategy that switches to pressure control if the
pressure is too high.
4. Consider a waste treatment system. A pH controller may need to adjust
the pH by manipulating either basic or acidic stream flow rates. Design a
split-range control strategy to do this.
5. Consider Example 12.1, where input 1 is the cold glycol make-up flow
rate, and input 2 is the hot glycol make-up flow rate. The steady-state
temperature is 20°C, which is also the vessel feed temperature. At steady
state, the cold and hot glycol make-up flow rates are 0. The parameter
values are
fov = 1/30; % minutes^-1
ua = 24 ; % kcal/min deg C
vrhocp = 850 ; % kcal/deg C
vrhocpj = 250 ; % kcal/deg C
Tjfcold = -20 ; % deg C
Tjfhot = 100 ; % deg CTjs = 20 ; % deg C
vj = 250 ; % liters
and the state space model matrices are
Solve for the numerical values of all matrices. Design a jacket temperature
controller and implement the Simulink diagram shown in Figure 12–7.
Discuss your jacket temperature controller design and tuning procedure.
Notice that the jacket temperature output has a range of 100%, constrained
between −50% and +50%. The cold valve is fully open at −50% and fully
closed at 0%. The hot valve is fully closed at 0% and fully open at +50%.
6. Develop a Simulink diagram of a cascade-control strategy, where Figure
12–7 represents the inner-loop (jacket temperature) control system. The
output of the primary (outer-loop) controller that you develop should be
the setpoint for the jacket temperature controller. Discuss the design and
implementation (tuning) of both controllers. Use the parameter values
from Exercise 5.
7. To control the speed of an automobile, there are two manipulated inputs:
u1, brake pedal position, and u2, throttle (gas pedal) position. Assume that
both inputs cover a range of 0% to 100%. The measured output is the
speed of the automobile.
a. Which input should fail-open (fully activated), and which should fail￾closed (not activated), and why?b. Realize that, at highway speeds, taking your foot off of the pedal results
in a decrease in speed, but it may be desirable to also have braking
action for more rapid deceleration. Assume then, that there is a range of
speed controller output, say 45% to 55%, where neither the brake nor
the throttle area applies. Draw a split-range diagram of the operation
(0%–100%) of the brake pedal and throttle as a function of the speed
controller output.
c. Draw the proper signals and controller on the following control block
diagram:
8. When streams must be controlled over a wide range of flow rates, it is
common to use a small valve to handle low flow rates, combined with a
large valve to handle high flow rates. In the strategy shown here, the small
valve goes from full-closed at 0% controller output to full-open at 25%
controller output. The large valve is closed from 0% to 25% of controller
output, then goes to full-open at 100% controller output.
a. Draw the control action diagram, where the x-axis is the flow controller
output, and the y-axis shows the % openings for the small and large
valves.
b. Draw the appropriate signals on the process and instrumentation
diagram.9. Surge drums, particularly those handling liquid hydrocarbons, often have
a “gas blanket” involving an inert gas to reduce the risk of explosions.
Consider the following surge drum, where a liquid level controller
manipulates the liquid flow from the vessel. There are two control valves
related to the gas pressure. Flow from a nitrogen header can be increased
to raise drum pressure, while flow to a relief header can be increased to
reduce the drum pressure.
Design a split-range pressure control strategy where the output of the
pressure controller manipulates the nitrogen makeup and relief header
control valves.
a. Sketch the proper signals on the process and instrumentation diagram.
b. Draw a split-range diagram of the opening of the nitrogen makeup and
outlet valves (each between 0% and 100%) as a function of the pressure
controller output (0%–100%).
c. The modeling equations follow, where the gas flow rates (qf
, q) are
assumed to be molar, the liquid flows are volumetric (Ff
, F), and the
liquid volume (Vl
) and drum pressure (P) are directly measured (see
Exercise 3 in Chapter 2, “Fundamental Models”):Recall that the ideal gas constant is 0.0821 liter-atm/(gmol K). Assume
that the temperature is 20°C = 293 K.
d. Assume that the mean volumetric flow rate through the surge drum is
100 liters/min, and a liquid residence time of 5 minutes is desired.
Assuming that the drum is ½ full of liquid, the drum volume is 1000
liters with a steady-state liquid volume of 500 liters. Assume that the
desired drum pressure is 14.7 psig (1 atm gauge pressure) and recall
that ideal gas calculates require absolute pressure (thus the desired
absolute pressure is 2 atm).
i. It should be clear that the steady-state liquid flows in and out are
equal and are 100 liters/min.
From the inert gas material balance, the inlet and outlet gas molar
flow rates must be equal. Once the drum is blanketed with inert gas,
the steady-state balance is satisfied with the inlet and outlet flows
both equal to zero.
ii. An important design consideration is to specify the maximum inert
gas flows in and out. Here is my thought process for specifying the
maximum gas flow rates: assume that the liquid volume is constant
and determine the gas flow rate that would make the pressure
change by a desired rate. For example, assume that it is desirable to
be able to increase or decrease the pressure by 1 atm over a 5-
minute period—that is, dP/dt = 0.2 atm/min. From the second state
equation, find the inlet gas flow rate (assuming no gas flow out) that
causes this increase. Hint: You should find that qmax = 4.157
gmol/min, so select 5 gmol/min as the maximum flow rate for gas
in and out.
iii. Level controller design. For this process, both the level and
pressure act as integrating variables, so proportional-only control
may have satisfactory performance. Let’s start with the level control
loop. Assume that the liquid flow out is 100 liters/min at the steady￾state volume of 500 liters. Assume that it is desirable for the flow to
go to 200 liters/ min if a disturbance forces the level up to 800 liters
(80% of the maximum volume. Given that Δu = kc
 Δe, then kc
 can
be found from the desired limits on Δu and Δe, that is, kc
 = Δu/Δe =
(100 liters/min)/(500– 800 liters) = −0.333 (liters/min)/liter.iv. Pressure controller design. Because this is a split-range controller,
with the output of the controller ranging from 0% to 100% (−50%
to 50% in deviation variable form), we need to understand the
relationship between the controller output and drum pressure.
Starting with the following (assuming no change in liquid volume):
you should be able to find the following transfer function between
controller output (v) and drum pressure (P):
For IMC-based P-only:
For IMC-based PI:
e. Assume that a proportional-only controller is used for level control and
split-range P or PI controller is used for pressure control. Simulate the
performance of the control system the following:
1. Pressure setpoint increase from 2 to 2.25 atm
2. Pressure setpoint decrease from 2 to 1.75 atm
3. Inlet liquid flow rate (disturbance) increase from 100 to 200
liters/min
4. Inlet liquid flow rate (disturbance) decrease from 100 to 0 liters/min
In addition, perform the following simulations:
Simulation 5: Perform simulation 1, but use an IMC-based PI controller
for pressure (adjust lambda to make certain that the controller does
not saturate); compare with simulation 1. Discuss your results.
Simulation 6: Perform simulation 3, but use an IMC-based PI controller
for ressure (adjust lambda to make certain that the controller doesnot saturate); compare with simulation 3. You may need to increase
lambda (decrease kc
) to avoid hitting constraints, particularly in
simulation 6. Discuss your results.Chapter 13. Control-Loop
Interaction
Most process unit operations have a number of manipulated inputs, each of
which affects some measured output, and it is not always clear which input
should be paired with which output for control-system design. This general
pairing problem is known as control structure selection and is often more
important than the actual controller design and tuning method used. After
studying this chapter, the reader should be able to
• Use the relative gain array (RGA) to determine the proper input-output
pairings for multiple single input–single output (SISO) controllers.
• Understand that the RGA gives insight about process sensitivity.
• Discuss the implications of the RGA for failure sensitivity.
The major sections of this chapter are as follows:
13.1 Introduction
13.2 Motivation
13.3 The General Pairing Problem
13.4 The Relative Gain Array
13.5 Properties and Application of the RGA
13.6 Return to the Motivating Example
13.7 RGA and Sensitivity
13.8 Using the RGA to Determine Variable Pairings
13.9 Matlab RGA Function File
13.10 Summary
13.1 IntroductionThus far in this book, we have focused primarily on SISO control systems.
Most chemical processes, however, have many manipulated variables affecting
many output variables, as shown in Figure 13–1. We generally assume that a
desired output variable is also measured. In some cases (composition, for
example), an output variable cannot be measured and must be inferred from
other measurements (such as temperatures and flow rates).
Although most processes are multivariable, SISO control loops are formed by
selecting a measured output that is most strongly affected by a particular
manipulated input. This is done for two reasons: SISO design techniques are
easy to understand, and hardware and software are readily available for SISO
controllers. We refer to control systems that use several SISO controllers on a
multivariable process as MVSISO (multivariable single input–single output)
controllers. The selection of which measured output to pair with which
manipulated input is known as variable pairing and is the focus of much of this
chapter.
13.2 Motivation
A specific example of a multivariable control problem is shown in Figure 13–
2. Here, two different streams are blended together. The objective is to
manipulate the individual stream flow rates to meet specifications on the output
flow rate and the output composition. Let the outputs be represented by y2
(total flow) and y1
 (composition), and the inputs by u1
 (flow rate of stream 1)
and u2
 (flow rate of stream 2). How should our outputs and inputs be paired? If
we assume that the output-input pairings are y1
-u1
 and y2
-u2
, the
instrumentation diagram is shown in Figure 13–3a. If we assume that the
output-input pairings are y1
-u2
 and y2
-u1
, the instrumentation diagram is shown
in Figure 13–3b.Figure 13–1 General multivariable process.
Figure 13–2 Blending system.
We can see potential problems in the operation of the control strategy in either
Figure 13–3a or b. For discussion purposes, consider Figure 13–3a. A setpoint
change in output 1 (y1
, concentration) will cause the flow controller to change
input 1 (u1
, stream 1 flow). The change in input 1 will also affect output 2 (y2
,
total flow). Once output 2 is disturbed, the flow controller will cause a change
in input 2. Input 2 will disturb the concentration, causing the concentration
controller to change input 1, and we are back to where we started. The effect of
one control loop on the other is referred to as control loop interaction.
Although it is natural to think of these interactions as occurring in a sequential
fashion, they actually happen simultaneously.Figure 13–3 Blending system alternative closed-loop pairings. (a) u1
-y1
,
u2
-y2
 pairing. (b) u1
-y2
, u2
-y1
 pairing.
Example 13.1: Whiskey Blending
Consider now a very specific problem to see whether physical intuition can be
used to determine the proper pairing. Assume that an enterprising control
student has decided that there is a profit to be made by blending a stream of 80
proof (40% ethanol) whiskey with pure water to produce a product stream that
is 60 proof (30% ethanol). Assume that it is important to meet both quality and
production-rate requirements, and that you can measure the alcohol content and
total flow rate accurately. Assume that the 80 proof stream flow rate is the first
manipulated input (u1
) and that the dilution water flow rate is the second
manipulated input (u2
). The blended product flow rate is output 2 and the blend
composition is output 1.
Your intuition is probably to pair output 1 (alcohol measurement) with input 1
(80 proof whiskey stream), since there is no alcohol in the water stream; this isthe strategy shown in Figure 13–3a. We find later that this is not the best
pairing, indicating that the best control structure is often counterintuitive. We
first see the problem by observing the behavior of control loop 1 (y1
-u1
 pairing)
when control loop 2 (y2
-u2
 pairing) is open (or under “manual” control). The
response to an ethanol concentration setpoint change is shown in Figure 13–4.
Observe that the closed-loop behavior of ethanol concentration is quite good,
but that the total flow rate deviates, because the flow control loop (control loop
2) is not closed.
Assume that it is desirable to maintain the total blend rate at a constant value.
This requires that loop 2 be closed. Loop 2 has blend flow as the measured
process output (y2
) and the dilution water flow rate as the manipulated input
(u2
). Assume that it has been tuned independently from loop 1, that is, loop 1 is
open. The response to a setpoint change in flow rate is shown in Figure 13–5.
Notice that the flow-rate response is quite good but that the ethanol
concentration deviates from the desired value, because loop 1 is open.
We have seen that the individual control loops have quite good performance.
Because we desire to control both the concentration and the flow rate of the
blend stream, we need to have both loops closed simultaneously. The response
to a setpoint change in the total blend flow rate with both loops closed is shown
in Figure 13–6. Notice that closed-loop system is now unstable! What
characteristic of this control strategy caused the instability to occur when both
loops were closed? Would this behavior have occurred if a different variable
pairing had been used? That is, would there be problems if loop 1 paired the
ethanol measurement (y1
) with dilution water flow (u2
) and loop 2 paired the
total blend flow rate (y2
) with the whiskey flow (u1
)? We find the answer to
this question in the sections that follow.Figure 13–4 Response to an ethanol setpoint change; loop 1 has ethanol
concentration as the measured output (y1
) and whiskey flow rate as the
manipulated input (u1
). Loop 2 is open.
13.3 The General Pairing Problem
Given a general multivariable process diagram, how do we select the pairings
for a control structure that consists of multiple SISO loops? In the following
sections, we use matrix vector notation, where y(s) is a vector of n outputs and
u(s) is a vector of m inputs,Figure 13–5 Response to total blend flow rate setpoint change; loop 2 has
blend flow rate as the measured output (y2
) and dilution water flow rate as
the manipulated input (u2
). Loop 1 is open.
where each output can be represented byTo form a MVSISO system, we must ask the following: Which output yi
 should
be paired with which input uj
 to form a SISO control loop?
Two Input–Two Output Processes
Let us consider the relationship between yi
 and uj
 under a number of
conditions. For simplicity, we will deal primarily with 2 × 2 (two input–two
output) systems. The open-loop input-output relationships areFigure 13–6 Response to a total blend flow rate setpoint change with both
loops closed. Loop 2 pairs blend flow rate (y2
) and dilution water flow
rate (u2
), while loop 1 pairs ethanol concentration (y1
) with whiskey flow
(u1
).
which is written in matrix form as
and we can think of the input output relationships as shown in Figure 13–7.
The corresponding feedback control system, if the pairings are u1
-y1
 and u2
-y2
,
is shown in Figure 13–8.
Input 1–Output 1 Dynamic Behavior
For consistency in notation, we refer to loop 1 as the y1
-u1
 pairing and loop 2
as the y2
-u2
 pairing. We wish to consider how control loop 1 should be
designed. We have focused on the use of input-output models for control
system design. In the case of loop 1, we need to know how input 1 affects
output 1.
Now, consider how u1
 affects y1
 if (a) loop 2 is open and if (b) loop 2 is closed.
(a) Loop 2 is open (loop 1 is also open). If the second input (u2
) is
constant, then the outputs depend only on the first input (u1
), as shown
in Figure 13–9.Figure 13–7 Input-output block diagram for a two input–two output
process.
Figure 13–8 Feedback block diagram for a two input–two output process
where output y1
 is paired with input u1.
The input-output relationship is
y1
(s) = g11
(s)u1
(s)
If we designed a SISO feedback control system for loop 1, we would
use g11
(s) as the process transfer function for control system design.(b) Loop 2 is closed. If the second loop (y2
-u2
) is closed, then the outputs
depend on input 1 (u1
), as shown in Figure 13–10. Notice that there is
an additional effect of input 1 on input 2 owing to the action of
controller 2. Input 1 affects output 2, which then changes input 2
through the second controller. This change in input 2 then has an
additional effect on output 1; this effect can be positive or negative.
Figure 13–9 Block diagram with loop 2 open (loop 1 is open as well).
Figure 13–10 Block diagram of input 1–output 1 relationship with loop 2
closed.
Thus, the relationship between u1
(s) and y1
(s) is no longer just g11
(s). Indeed,
we can derive the relationship in the fashionbut (assuming no setpoint change in loop 2, r2
 = 0),
also
Combining Equations (13.7) and (13.8),
and solving for y2
(s),
Substituting this into Equation (13.7),
and substituting this result into Equation (13.6), we find
That is, y1
(s) = g11,eff(s) u1
(s), where
g11,eff(s) is the effective input-output relationship between u1
 and y1
, with loop
2 closed. This means that g11,eff(s) should be used as the process transfer
function to design controller 1 if loop 2 is closed. Unless g12(s) or g21(s) = 0, if
the second control loop is closed, then the first control loop must be designed
differently than if the second control loop were open. Naturally, the
relationship between u1
 and y1
 is a function of the controller gc2
 when the
second loop is closed.Example 13.1, Continued
Consider the expected effect of the second loop in the blending example posed
earlier. In Figure 13–11 we compare the response of ethanol concentration due
to a change in whiskey flow rate, under two conditions: with the flow
controller (loop 2) open (solid), and with the flow controller closed (dashed).
Notice the tremendous amplification of the effect of the whiskey flow rate.
Here, we rationalize the effect of the flow loop being closed. When the
whiskey flow rate is increased, it causes the total blend flow rate to increase.
The total blend flow-rate controller then cuts back on the dilution water flow
rate, which causes the ethanol concentration to increase even more. The flow
rate controller has caused the whiskey stream to have roughly four times the
effect on the ethanol concentration, compared to when the flow control loop is
open.
Steady-State Effective Gain
Comment:
What we would really like is a method to determine the relationship between
u1
 and y1
 with loop 2 closed, without knowing gc2
(s).
We can easily determine this relationship for a limiting case, the steady state.
For the steady state, we simply let s → 0. Assuming integral action is used in
the controller, we find that as s → 0, gc2
(s) → ∞. Also, from Equation (13.13)
and gc2
(0) → ∞ as s → 0, we find the following relationship (where 0
represents s = 0, the steady state; do not confuse this with t = 0, the initial
condition):Figure 13–11 Response of ethanol concentration to a step increase in
whiskey flow rate; loop 2 open (solid curve) and loop 2 closed (dashed
curve).
This can also be determined from the steady-state relationship
Assuming perfect control of y2
, that is, y2
 = 0,and we can then find the following relationships:
We now have a steady-state effective gain relationship between u1
 and y1
 with
the loop between u2
 and y2
 closed.
13.4 The Relative Gain Array
Ed Bristol (a control engineer with Foxboro) developed a heuristic technique to
predict possible interactive effects between control loops when multiple SISO
loops are used. He was motivated to develop a dimensionless measure of
interaction by some boiler control problems he was working on. His simple
measure of interaction is known as the relative gain, or the Bristol relative gain
array (RGA). Since then, many papers have been written to provide a more
rigorous theoretical basis for the technique.
Two-Inputs and Two-Outputs
The relationship between u1
 and y1
 at steady state (s = 0), with no change in u2
,
isThis relationship is the gain between u1
 and y1
 with all other loops open (that
is, u2
 is constant for this 2 × 2 example).
The steady-state relationship between u1
 and y1
 at steady state, with y2
maintained constant at its setpoint (using a controller with integral action), is
Notice that Equation (13.19) is the gain between input 1 and output 1,
assuming output 2 is constant.
Definition of the Relative Gain
The relative gain (λij) between input j and output i is defined in the following
fashion:
By convention, the symbol used for the relative gain is λij. Please do not
confuse it with the λ that was used for the IMC filter or for the λ that is
commonly used to represent the eigenvalues of a matrix. The relative gain will
normally be shown with two subscripts, distinguishing it from eigenvalues or
the IMC filter factor.
Relative Gain Between Input 1 and Output 1 for a Two Input–
Two Output System
The relative gain between input 1 and output 1 is then [see Equation (13.20)]We see that the relative gain between u1
 and y1
 for a 2 × 2 system is
Remember that Equation (13.21) is true only for the two input–two output case.
The RGA
The RGA is simply the matrix that contains the individual relative gains as
elements, that is Λ = {λij}. For a 2 × 2 system, the RGA is
Question: What value do we desire for the relative gain?
Think of it this way. If we want to use a u1
-y1
 pairing for a SISO controller, we
do not want it to matter whether the other loops in the system are closed or not.
This tells us that we desire a relative gain close to 1.0. That is,
Answer: We desire λ11
 ≈ 1.0 if we wish to pair output 1 with input 1.
The λ11
 calculation for a 2 × 2 system yielded . The more
general result is (see Appendix 13.1 for a derivation)
where element of G–1(0). Notice that this is not the same as matrix
multiplication. Here, the individual elements of the two matrices are beingmultiplied together.
We check the general results derived above by applying them to a 2 × 2 (two
output, two input) system,
and recalling our rules for inverting a 2 × 2 matrix,
Multiplying the individual elements of G(0) and , as in Equation (13.23),
we find
13.5 Properties and Application of the RGA
Sum of Rows and Columns
Notice that Equation (13.24) yields the following relationships:
This property for 2 × 2 systems is general for n × n systems. That is, each row
of the RGA sums to 1.0, and each column of the RGA sums to 1.0.Then, for a 2 × 2 system, only one relative gain must be calculated to find the
entire array,
For a 3 × 3 system, only four of the nine elements would need to be calculated.
In practice, they are all calculated simultaneously using Equation (13.23).
Use of RGA to Determine Variable Pairing
It is desirable to pair output i and input j such that λij is as close to 1 as
possible.
Example 13.2: RGA for Variable Pairing
Consider a relative gain array, .
We would pair y1
 with u1
 and y2
 with u2
 in this case.
However, if .
we would pair y1
 with u2
 and y2
 with u1
.
Two Input–Two Output Systems
It is easy to show the two possible cases for the relative gain array of a 2 × 2
system. If there are an odd number of positive elements in G(0), then
λij ∈ (0,1)
That is, for an odd number of positive elements in the process gain matrix, all
the relative gains will be between 0 and 1. If there are an even number of
positive elements in G(0), then
λij ∈ (–∞, 0)∪(1, ∞)This means that for an even number of positive elements in the process gain
array, all the relative gains will be outside the 0–1 range.
Implications for the Sign of a Relative Gain
First of all, we can state that if λ11
 was negative, we would not want to pair
input 1 with output 1. Let us use the following reasoning. Assume that the
open-loop gain between input 1 and output 1 (g11
) is positive; this implies that
the controller gain is also positive. A negative relative gain tells us that the gain
between input 1 and output 1 with output 2 perfectly controlled (that is, loop 2
closed) is negative. This means that if loop 2 is closed, we need a negative
controller gain on loop 1. However, we noted before that if loop 2 is open, we
need a positive controller gain on loop 1. It is not desirable to have a control
system where you have to change the sign of the controller gain depending on
whether the other loops are open or closed, so the bottom line is the following:
We do not want to pair output i and input j if λij is negative.
The results for a 2 × 2 system indicate that if λ11
 > 1, then λ12 = λ21 < 0. Also,
if 0 < λ11
 < 1, then 0 < λ12 < 1. Let us think about the differences between
having a λ11
 greater than 1 and having a λ11
 less than 1.
If λ11
 > 1, then .
This tells us that the gain between u1
 and y1
 is larger with loop 2 open than
with loop 2 closed.
• If we design the u1
-y1
 controller with loop 2 open, then close loop 2, we
expect somewhat sluggish behavior because the effective process gain
will be lower than the u1
-y1
 gain.
However,
• If we design the u1
-y1
 controller with loop 2 closed, then if we have to
open loop 2 for some reason, we could have destabilizing behavior
because the u1
-y1
 gain will be higher than when the controller was tuned.If 0 < λ11
 < 1, then .
This tells us that the gain between u1
 and y1
 is smaller with loop 2 open
than with loop 2 closed.
• If we design the u1
-y1
 controller with loop 2 open, then close loop 2, we
expect more aggressive behavior because the effective process gain will
be higher than the u1
-y1
 gain.
However,
• If we design the u1
-y1
 controller with loop 2 closed, then if we have to
open loop 2 for some reason, we expect sluggish behavior because the u1
-
y1
 gain will be lower than when the controller was tuned.
Midchapter Summarizing Remarks
You must be careful when tuning SISO loops in a multiple input–multiple
output (MIMO) system, because the other loops in the system can greatly
affect the gain between the input-output variables under consideration.
Also, note that we have only been concerned with static (steady-state) effects.
Dynamic interaction has a major effect when control systems are tuned. Our
experience is that, considering the dynamic effects, a pairing decision is rarely
reversed on the basis of the steady-state relative gain.
The primary result from a dynamic interaction analysis is to recognize
additional interaction affects above the steady-state ones and either accept the
degradation in control-system performance or use a “true” multivariable
control system design technique rather than separate SISO controllers.
Sometimes the interaction and other problems will be so severe that only one
loop can be closed.
13.6 Return to the Motivating Example
Consider Example 13–1, where 40% ethanol (stream 1) is being blended with
pure water (stream 2) to produce a product of 30% ethanol. Here we wish to
use the RGA to help us develop the control structure (pair inputs and outputs).We first develop the steady-state model, then linearize to find the process gain
matrix, and finally calculate the RGA to decide on variable pairing. For
simplicity, we neglect density differences between the streams and
components.
Total Material Balance
Neglecting density differences between the streams and components, the total
blend product volumetric flow rate is equal to the sum of the volumetric flow
rates of the two feed streams,
F = F1
 + F2
Component Material Balance on Ethanol
Assume a binary system with z1
 = volume fraction of ethanol in stream 1. Let z
= volume fraction of ethanol in the blend stream. Since there is no ethanol in
the water stream, we find
Fz = F1z1
Solving these equations for the volume fraction of ethanol in the blend stream,
Let the volume fraction of ethanol be output 1 and total flow rate output 2.
Also, inputs 1 and 2 are the flow rates of the whiskey and water feed streams,
respectively. The following steady-state values were used in Example 13.1: F1
= 3 gpm, F2
 = 1 gpm, z = 0.3 mole fraction ethanol, and F = 4 gpm.
The steady-state input-output gains arewhich yields the process gain matrix
The relative gain relating input 1 to output 1 is
This value of 0.25 indicates that the effective gain relating input 1 to output 1
with loop 2 closed is four times the value of the gain with loop 2 open. This
explains the result shown in Figure 13–11.
The RGA is then
which indicates that the blend total flow (y2
) should be paired with the whiskey
flow rate (u1
) and the blend ethanol concentration (y1
) should be paired with
the water flow (u2
). Notice that the largest component stream flow rate then
controls the total flow.13.7 RGA and Sensitivity
The previous sections introduced the concept of the RGA, to help determine
which input should be paired with which output to form a multivariable control
system composed of a number of SISO controllers (we refer to this as a
MVSISO system). The purpose of this section is to discuss the relationship
between relative gain and controller tuning. It should become clear that the
RGA gives valuable insight into the failure sensitivity of a control system. We
also present numerous examples to illustrate the important concepts.
Failure Sensitivity
When tuning a set of SISO controllers to form an MVSISO strategy, it is
important to consider the failure sensitivity of the system. For example,
consider a two input–two output system. If loop 1 is tuned to operate well
when loop 2 is closed, we must also consider what happens when loop 2 is
opened. It is possible for loop 2 to be opened in a number of ways. The most
obvious way is for an operator to put loop 2 on manual control (open loop).
Another way is if the second manipulated variable hits a constraint, say, if the
valve goes all the way open or closed—this means that the second input can no
longer affect the second output, which is equivalent to being open loop.
Relative Gain as a Perturbation of the Nominal Process
Consider a system where loop 1 has output 1 paired with input 1. The relative
gain is defined as
Using k11
 to represent the steady-state gain between input 1 and output 1,
From Equation (13.27), we can represent the effective gain aswhere
We can really represent the effect of the relative gain by comparing the two
block diagrams shown in Figures 13–12a and b.
Comparing Figures 13–12a and b, we see that the effective process gain
between input 1 and output 1 with loop 2 closed is simply a perturbation of the
open-loop gain between input 1 and output 1 by a multiplicative factor of 1/λ11
.
Relative Gains between 0 and 1
If a relative gain is less than 1, this means that k11,eff > k11
. If a controller for
loop 1 is based on k11
 (implicitly assuming that loop 2 is open), then when loop
2 is closed, the controller gain for loop 1 (kc1
) should be detuned approximately
by a factor of λ11
, otherwise the control system will respond too rapidly and
there will be a chance of instability. If, on the other hand, the controller for
loop 1 is tuned based on loop 2 being closed, then kc1
 can probably be
increased by a factor of 1/λ11
 when loop 2 is opened. The problem is, if the kc1
is kept at this new larger value when loop 2 is closed again, there is again a
potential for instability.
This analysis indicates that for safety purposes, if the relative gain is less than
1, then loop 1 should be tuned based on loop 2 closed.
Relative Gains Greater than 1
If a relative gain is greater than 1, this means that k11,eff < k11
. If a controller for
loop 1 is based on k11
 (implicitly assuming that loop 2 is open), then when loop
2 is closed, the controller gain for loop 1 (kc1
) can be increased approximately
by a factor of λ11
. The problem is, if loop 2 is then opened again, the controller
gain will be too high, and there is a chance of instability. If, on the other hand,
the controller for loop 1 is tuned based on loop 2 being closed, then kc1
 should
be decreased by a factor of 1/λ11
 when loop 2 is opened.Figure 13–12 Process gain between input 1 and output 1 when loop 2 is
open versus when loop 2 is closed. (a) Process gain between input 1 and
output 1 when loop 2 is open. (b) Effective process gain between input 1
and output 1 when loop 2 is closed.
This analysis indicates that for safety purposes, if the relative gain is greater
than 1, then loop 1 should be tuned based on loop 2 open.
Negative Relative Gains
Think about the ramifications of having a negative relative gain. If λ11
 is
negative, this means that the gain between u1
 and y1
 with loop 2 closed (k11,eff)
has the opposite sign compared with the gain between u1
 and y1
 with loop 2
open (k11
). This has the following ramifications. First of all, assume that the
process is open-loop stable. For open-loop stable processes that have a
controller with integral action, the controller gain must have the same sign as
the process gain. If the controller for loop 1 is designed with loop 2 open, it
will have a controller gain with a certain sign. Then, when loop 2 is closed, it
must have an opposite sign in order to be stable! This is certainly not a
desirable situation and is unacceptable in practice. A controller for loop 1
designed based on g11
 (loop 2 open) will be destabilized when loop 2 is closed.
If the controller for loop 1 is designed based on g11,eff (loop 2 closed), the
controller will be destabilized when loop 2 is opened. This leads to the
following statement regarding failure sensitivity.
Failure SensitivityA control strategy that is based on pairing on a negative relative gain is failure
sensitive and is unacceptable. Never select input-output pairings based on a
negative relative gain.
Implication for Subsystems
Many control strategies have more than two control loops. Consider a case
where there are three control loops, for example. If the variable pairings have
been performed so that the corresponding relative gains are positive (and
hopefully close to 1.0), then we need to consider the failure sensitivity of all
possible controller failures. For example, if loop 1 fails, it is important then to
make certain that the RGA of the subsystem with loop 1 removed still satisfies
the requirement of positive relative gains on all paired inputs and outputs.
Sensitivity to Model Uncertainty
Large Relative Gains (>>1)
Large relative gains correspond to a high sensitivity to uncertainty. This is
shown in the following example.
Example 13.3: Model Uncertainty and the RGA
Consider a steady-state process model with the corresponding RGA:
The actual process could very easily have a minor error of 5% in the gain
relating u1
 to y2
, as shown in the actual process gain matrix and RGA:
Notice that the model requires that input 1 be paired with output 1, while the
relative gain for the actual plant (model + uncertainty) indicates that input 1
must be paired with output 2. In this case, we have no choice but to use only
one control loop, and we would use physical insight and dynamic
considerations to select the loop to close.Sensitivity to Model Uncertainty
A large relative gain (the order of 25 and higher) corresponds to an extreme
sensitivity to model uncertainty and indicates that some loop should be opened;
that is, not all outputs should be under feedback control. One process that can
have multivariable control, even with a large relative gain, is distillation, where
nonlinear effects dominate.
13.8 Using the RGA to Determine Variable
Pairings
In the previous section, we showed how to tune controllers, assuming that a
decision on the pairing had already been established. The purpose of this
section is to give some examples to illustrate how inputs and outputs should be
paired to form MVSISO control loops.
Example 13.1, Continued
Consider the whiskey-blending problem, which had the steady-state process
gain matrix and RGA:
indicating that the output-input pairings should be y1
-u2
 and y2
-u1
. In order to
achieve this pairing, we could use the block diagram shown in Figure 13–13.
Notice that the difference between r2
 and y2
 (the error in output 2) is used to
adjust u1
, using a PID controller (gc1
), hence, we refer to this pairing as y2
-u1
.
Similarly, the difference between r1
 and y1
 (the error in output 1) is used to
adjust u2
, using a PID controller (gc1
); hence, we refer to this pairing as y1
-u2
.
This corresponds to the physical diagram shown in Figure 13–3b.
An alternative is to rearrange (renumber) our outputs or inputs so that the
natural pairing is y1
-u1
 and y2
-u2
 (in the renumbered variables). For example,
we could renumber the outputs. Let y
*
1
 = y2
 and y
*
2
 = y1
, where * indicates thenewly redefined variable. This corresponds to the control and instrumentation
diagram shown in Figure 13–14.
Figure 13–13 Control block diagram for 1-2/2-1 pairing.
Figure 13–14 Control instrumentation diagram for redefined variables.
We can write
orThe reader should verify that the new RGA is
Notice that redefining the outputs is equivalent to switching the rows of the
process gain matrix related to the corresponding outputs (in this case, switching
rows 1 and 2 is equivalent to exchanging outputs 1 and 2). The new RGA is
found by making the same transformation of rows in the RGA as was
performed on the process gain matrix.
Similarly, redefining the inputs is equivalent to switching the columns of the
process gain matrix related to the corresponding inputs. The new RGA is found
by making the same transformation of columns in the RGA as was performed
on the process gain matrix.
Generalization
We have shown, by way of example, that outputs can be renumbered by
switching the rows in the process gain matrix, and inputs can be renumbered by
switching columns in the process gain matrix. We do not need to recalculate
the relative gain array each time we perform this exchange of variables—we
simply find the new RGA by performing the same row and column exchanges
on the RGA that we performed on the process gain matrix. By performing this
exchange (renumbering) of variables, we can always rearrange our inputs and
outputs such that loop 1 has a pairing of y1
 and u1
 (in the newly defined
variables). For this reason, we will often assume that a y1
-u1
 pairing has been
made and discuss the effect of λ11
 on controller tuning.
Example 13.4: A Three Input–Three Output System
Consider the following RGA for a system with three inputs and three outputs:How would you choose input-output pairings for this process?
Solution:
1. We know that we do not want to pair on a negative relative gain.
2. We do not want to pair with a relative gain of 0 because that means that
the particular input does not have an effect on the particular output when
all of the other loops are open.
Look at row 3 in the relative gain array; this corresponds to output 3. We would
not pair y3
 with u3
 because of the 0 term. We also would not pair y3
 with u1
because of the −3 term. This means that y3
 must be paired with u2
. Let us
indicate this choice in our RGA,
Now we have eliminated the third output (row) and the second input (column)
from our selection process. From the first row (output), we see that we would
not pair y1
 with u3
 because of the −1 term. We also cannot pair y1
 with u2
because we have already paired u2
 with y3
 (hence, the circle). Our only choice
is to pair y1
 with u1
. Let us indicate this choice in our RGA,
Now, we have eliminated outputs 1 and 3 (rows 1 and 3) as well as inputs 1 and
2 (columns 1 and 2). We have no choice but to pair y2
 with u3
, and we make
that choice here:Notice also that we can renumber our outputs, such that pairings of the new
variables occur on the diagonal. For example, if we define y
*
2
 = y3
 and y
*
3
 =
y2
, this is equivalent to switching the second and third rows to obtain
which is based on the new output vector
Example 13.5: A Four Input–Four Output Distillation Column
(Alatiqi and Luyben, 1986)
The steady-state gain input–output relationship is
The RGA (using the m-file rga.m shown in Appendix 13.2) isNow, let us systematically choose our pairings. Looking at column 3, we see
only one relative gain that is not negative; therefore, we must pair y2
 with u3
.
Looking at row 4, we notice that there is only one relative gain that is not
negative; therefore, we must pair y4
 with u1
. Looking at column 2, there are
two nonnegative relative gains, but we have already used output 2, so we must
pair y3
 with u2
. This leaves y1
 and u4
, which, fortunately, has a favorable
relative gain (0.8546). If the y1
-u4
 relative gain had not been favorable, we
would have been forced to drop output 1 and input 4 and simply have three
control loops for our system.
13.9 Matlab RGA Function File
The Matlab function file, rga.m, given in Appendix 13.2 can be used to the
find the RGA of any square (number of inputs = number of outputs) gain
matrix. For example, consider the wet grinding circuit of Exercise 10.
First, the gain matrix is entered
>> g = [119 153 -21; 370 767 -50; 903 -667 -1033]
g =
 119 153 -21
 370 767 -50
 903 -667 -1033
Then the RGA is calculated using the call to the function file:
>> lambda = rga(g)
lambda =
 3.6449 -1.9131 -0.7318
 -2.3616 2.9581 0.4035
 -0.2833 -0.0450 1.328313.10 Summary
The purpose of this chapter was to develop a technique (the RGA) to assist us
with the decision of how to pair input and output variables to form multiple
SISO control loops. The relative gain between output i and input j is defined as
and the RGA is a matrix of relative gains. Some of the important things that we
learned about the RGA are summarized here:
• The rows and columns of the RGA sum to 1.
• Do not pair on a negative or zero relative gain.
• Try to pair on relative gains close to 1.
• If you cannot pair on positive relative gains, or if the relative gains are high
(>25), then the number of closed-loop control loops must generally be
reduced; that is, one or more loops must be placed on manual control.
• Switching rows on the process gain and relative gain matrices is equivalent
to renumbering the outputs; switching columns on the process gain and
relative gain matrices is equivalent to renumbering the inputs.
• After selecting variable pairings, check the relative gain array for all
subsystems to make certain that they are not sensitive to controller failure.
References
A nice summary of the features of the relative gain array are presented in the
following:Grosdidier, P., M. Morari, and B. Holt. (1985). “Closed-Loop Properties from
Steady-State Gain Information.” Ind. Eng. Chem. Fund., 24(2): 221–235.
https://doi.org/10.1021/i100018a015
The following sources were used for some of the RGA examples in this
chapter:
Alatiqi, I.M., and W.L. Luyben. (1986). “Control of a Complex Sidestream
Column/Stripper Distillation Configuration.” Ind. Eng. Chem. Proc. Des.
Dev., 25(3): 762–767. https://doi.org/10.1021/I200034A028
Doukas, N., and W.L. Luyben. (1978). “Control of Sidestream Separating
Ternary Mixtures.” Instrum. Technol. (INTECH), 25(6): 43–48.
Exercise 12 is presented in the following:
Reeves, D.E., and Y. Arkun. (1989). “Interaction Measures for Nonsquare
Decentralized Control Structures.” AIChE J., 35(4): 603–613.
The grinding circuit problem (Exercise 10) was presented in the following:
Hulbert, D.G., and E.T. Woodburn. (1983). “Multivariable Control of a Wet
Grinding Circuit,” AIChE J., 29, 186.
Student Exercises
1. A 3 × 3 system has the following steady-state gain matrix and RGA:
How would you pair the variables for an MVSISO strategy and why?
2. A two input–two output process has the following RGA:
Assume that the MVSISO system is tuned for stable feedback control with
both loops closed.
Case 1—u1
 is paired with y1
 (loop 1) and u2
 is paired with y2
 (loop 2).
What happens if loop 2 is opened? Why? Must loop 1 be retuned? How?
Case 2—u1
 is paired with y2
 (loop 1) and u2
 is paired with y1
 (loop 2).
What happens if loop 2 is opened? Why? Must loop 1 be retuned? How?3. A system has the following process gain matrix:
How would you pair variables for your control loops? Why?
4. A three input–three output process has the following RGA:
How would you pair variables for your control loops? Why?
5. Consider the following process gain matrix and RGA:
a. Can three SISO control loops be used?
b1. If your answer to a is yes, what are the recommended pairings [will
these pairings assure stability if one of the loops must be opened (think
about the 2 × 2 subsystems)]? Reorder the inputs and outputs such that
the paired variables are on the diagonal of the new G(0) matrix. Show
the new G(0) matrix and the new Λ matrix.
b2. If your answer to a is no, do you recommend a reduction to two loops?
If so, what are your recommendations for input-output pairings for this
system?
6. Consider the following steady-state gain matrix for a process with three
inputs and four outputs. [This is for a benzene-toluene distillation column,
with a side draw—see Doukas and Luyben (1978) for details.] Assuming
all the outputs are of equal importance, which input-output pairings would
you use for a MVSISO control system?7. For a 2 × 2 system, show that a y1
-u2
 and y2
-u1
 pairing yields the
following result for λ12:
where 
8. Consider the steady-state process gain matrix
which yields the following RGA:
Is it possible to pair outputs and inputs to form three separate single-loop
controllers? If it can be done, do it. If it cannot be done, explain why and
suggest another multivariable control strategy.
9. Your boss has told you to develop a control strategy for the following
stirred-tank heater, which has two inputs (rate of heat addition, Q, and
flow rate to tank, Fi
), and two outputs (tank height and temperature). She
also gave you the following transfer function matrix, assuming that you
knew which output corresponded to which measured variable and which
input corresponded to which manipulated variable.Use physical reasoning to determine which output corresponds to which
measurement (i.e., is y1
 the tank height or the tank temperature?) and
which input corresponds to which manipulated variable (i.e., is u1
 the heat
addition rate or the flow rate to the tank?). If two SISO loops are used to
control this process, how should the variables be paired? Renumber the
outputs such that the output-input pairings are on the diagonal of the
transfer function matrix. Show the new transfer function matrix.
10. The objective of a wet grinding circuit is to grind large solid material to
form granular material. Solids are fed with a water stream to a ball mill
where the solids are ground. The slurry effluent from the ball mill is fed to
a sump, which is used as surge capacity. The slurry is pumped to a
cyclone separator, which separates water from solid material and returns
water to the ball mill. A schematic diagram is shown here.Consider the following process model (Hulbert and Woodburn, 1983):
which has the following RGA:
a. What pairing is suggested by the RGA for this system? Why?
b. Connect the appropriate input and output variables with controllers, on
the diagram above, to form a control instrumentation diagram.
c. Discuss the failure sensitivity of this three input–three output system.
That is, if any of the control loops failed, would the resulting two
input–two output system have the correct pairing?11. A forced circulation evaporator is used to concentrate dilute liquors by
evaporating solvent from a feed stream. Feed is mixed with recirculating
liquor and pumped into the tube side of a vertical heat exchanger. Steam
enters the shell side of the vertical heat exchanger and condenses on the
outside of the tubes. The liquor is partially vaporized as it passes through
the tube side of the heat exchanger and passes into the separator. Vapor
from the separator is condensed by a cooling water exchanger, while a
portion of the liquid stream from the separator is withdrawn as product
and the rest is recirculated to the heat exchanger. A schematic process and
instrumentation diagram is shown here.
It seems fairly clear that it is desirable to control the level in the separator
(y1
) by manipulating the product flow rate (u1
). It is particularly important
to keep the level under feedback control because it has integrating action
(a pole is at the origin). With the level controlled by manipulating the
product flow rate, the following steady-state input-output relationship is
found for the other variables:
How should the other loops be paired? Why?12. Consider the following system with two outputs and three inputs (Reeves
and Arkun, 1989). This model is for a mixing tank with three input
streams. The outputs are the concentration and tank height, while the three
inputs are stream flow rates:
To use a MVSISO strategy, we must remove one of the inputs (set it to a
constant value rather than using it for feedback control).
13. As a promising young engineer, you are placed in charge of a gasoline
blending facility. This facility blends three refinery streams together to
form a final product stream that must meet road octane (RO) and Reid
vapor pressure (RVP, psi) specifications. Two streams are available for
manipulation. You are given the following data:
Let Flow 1 be the first input and Flow 2 be the second input. RO is the
first output and RVP is the second output.
a. Calculate the RGA.
b. How would you pair the input-output variables for this process?
(Why?)
c. Complete the following control instrumentation diagram:d. Draw a control block diagram for this process (with the proper
pairings). (Are there any cascade loops?)
14. Consider the whiskey blending problem. A new market for 70 proof
whiskey (0.35 volume fraction ethanol) has developed. Assume that the
feed streams are still 80 proof whiskey and pure water, and that the
desired production rate of 70 proof whiskey is 4 gpm. Find the new gain
matrix and relative gain array. What are the implications for controller
pairing?
15. An engineer has developed a process model and proceed to develop the
following incomplete RGA:
Complete the RGA and suggest the proper pairings with an explanation.
16. A distillation column has the following steady-state gain input-output
relationship:The RGA has been started for you below. Please complete the RGA
analysis by
a. Completing the RGA, giving all missing λij entries.
b. Suggesting the input-output pairings.
c. Discussing what further analysis is needed to determine failure
sensitivity.
Appendix 13.1: Derivation of the Relative
Gain for an n-Input–n-Output System
The relative gain between input j and output i is defined as
Output i is the following steady-state function of all of the inputs:The relationship between input j and output i with all other inputs constant is
For any desired output vector, y, we can find the corresponding input vector, u,
from
u = G–1(0)y = K
–1y
Defining ,
The relationship between all outputs and input j is
The relationship between output i and input j with all other outputs constant is
and
The relative gain between input j and output i iswhere element of G−1(0).
What Equation (13.23) tells us is that the ij element of the RGA is found by
multiplying the ij element of the steady-state process gain matrix by the ji
element of the inverse of the steady-state process gain matrix.
Appendix 13.2: m-File to Calculate the RGA
 function lambda = rga(g)
%
% calculate the relative gain array for a
% square gain matrix of any size
%
% first, check the dimensions to see if the
% process gain matrix is square
%
 [mrow ncol]=size(g);
%
% if the gain matrix is not square, let the
% user know
%
 if mrow ~= ncol;
 disp('needs to be square, buddy')
 end;
 else
%
% the matrix ghat is simply the inverse of the
% gain matrix. ghatt is the transpose of ghat
%
 ghat = inv(g);
 ghatt=ghat';
%
% perform an element by element multiplication
% of g and ghatt to find the relative gain array% of g and ghatt to find the relative gain array
%
 lambda = g.*ghatt;
 endChapter 14. Multivariable Control
[This content is currently in
development.]
This content is currently in development.Chapter 15. Plantwide Control
[This content is currently in
development.]
This content is currently in development.Chapter 16. Model Predictive
Control [This content is currently
in development.]
This content is currently in development.Chapter 17. Summary [This
content is currently in
development.]
This content is currently in development.Module 1. Introduction to
MATLAB [This content is
currently in development.]
This content is currently in development.Module 2. Introduction to
SIMULINK [This content is
currently in development.]
This content is currently in development.Module 3. Ordinary Differential
Equations [This content is
currently in development.]
This content is currently in development.Module 4. MATLAB LTI Models
[This content is currently in
development.]
This content is currently in development.Module 5. Isothermal Chemical
Reactor [This content is currently
in development.]
This content is currently in development.Module 6. First-Order + Time￾Delay Processes [This content is
currently in development.]
This content is currently in development.Module 7. Biochemical Reactors
[This content is currently in
development.]
This content is currently in development.Module 8. CSTR [This content is
currently in development.]
This content is currently in development.Module 9. Steam Drum Level [This
content is currently in
development.]
This content is currently in development.Module 10. Surge Vessel Level
Control [This content is currently
in development.]
This content is currently in development.Module 11. Batch Reactor [This
content is currently in
development.]
This content is currently in development.Module 12. Biomedical Systems
[This content is currently in
development.]
This content is currently in development.Module 13. Distillation Control
[This content is currently in
development.]
This content is currently in development.Module 14. Case Study Problems
[This content is currently in
development.]
This content is currently in development.Module 15. Plug Flow Reactor
[This content is currently in
development.]
This content is currently in development.Module 16. Digital Control [This
content is currently in
development.]
This content is currently in development.
